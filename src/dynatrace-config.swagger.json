{
  "swagger" : "2.0",
  "info" : {
    "description" : "Documentation of the Dynatrace Configuration API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/config-api) to read about use-cases and examples.\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
    "version" : "1.0",
    "title" : "Dynatrace Configuration API"
  },
  "basePath" : "/api/config/v1",
  "tags" : [
    {
    "name" : "Application detection rules",
    "description" : "Manage application detection rules"
  }, {
    "name" : "AWS credentials configuration",
    "description" : "Manage AWS credentials and monitoring options"
  }, {
    "name" : "Azure credentials configuration",
    "description" : "Manage Azure credentials and monitoring options"
  }, {
    "name" : "Web application configuration",
    "description" : "Manage web applications"
  }, {
    "name" : "Service - Request attributes",
    "description" : "Manage request attributes"
  }, {
    "name" : "Data privacy and security",
    "description" : "Manage global data privacy and security settings"
  }, {
    "name" : "Anomaly detection - Hosts",
    "description" : "Manage anomaly detection configuration for hosts"
  }, {
    "name" : "Anomaly detection - Services",
    "description" : "Manage anomaly detection configuration for services"
  }, {
    "name" : "Anomaly detection - Database services",
    "description" : "Manage anomaly detection configuration for database services"
  }, {
    "name" : "Anomaly detection - Applications",
    "description" : "Manage anomaly detection configuration for applications"
  }, {
    "name" : "Anomaly detection - Disk events",
    "description" : "Manage anomaly detection configuration for disk events"
  }, {
    "name" : "Anomaly detection - AWS",
    "description" : "Manage anomaly detection configuration for AWS"
  }, {
    "name" : "Anomaly detection - VMware",
    "description" : "Manage anomaly detection configuration for VMware"
  }, {
    "name" : "Anomaly detection - Metric events",
    "description" : "Manage anomaly detection configuration for metric events"
  }, {
    "name" : "Service - Custom services",
    "description" : "Manage custom services"
  }, {
    "name" : "Service - Request naming",
    "description" : "Manage request naming rules"
  }, {
    "name" : "Automatically applied tags",
    "description" : "Manage automatically applied tags"
  }, {
    "name" : "Management zones",
    "description" : "Manage management zones"
  }, {
    "name" : "Maintenance windows",
    "description" : "Manage maintenance windows"
  }, {
    "name" : "Service - IBM MQ tracing",
    "description" : "Manage IBM MQ tracing settings"
  }, {
    "name" : "Cloud Foundry credentials configuration",
    "description" : "Manage Cloud Foundry foundation credentials"
  }, {
    "name" : "Service - Calculated metrics",
    "description" : "Manage calculated service metrics"
  }, {
    "name" : "Service - Detection full web service",
    "description" : "Manage full web service detection rules"
  }, {
    "name" : "Service - Detection full web request",
    "description" : "Manage full web request service detection rules"
  }, {
    "name" : "Service - Detection opaque and external web request",
    "description" : "Manage opaque and external web request service detection rules"
  }, {
    "name" : "Log Monitoring metrics",
    "description" : "Manage Log Monitoring metrics configuration"
  }, {
    "name" : "Reports",
    "description" : "Manage reports"
  }, {
    "name" : "Dashboards",
    "description" : "Manage dashboards"
  }, {
    "name" : "Kubernetes credentials configuration",
    "description" : "Manage Kubernetes cluster credentials"
  }, {
    "name" : "Plugins",
    "description" : "Manage plugins and their configurations"
  }, {
    "name" : "Frequent Issue Detection",
    "description" : "Manage frequent issue detection configuration"
  }, {
    "name" : "Notifications",
    "description" : "Manage notifications"
  }, {
    "name" : "Remote environments",
    "description" : "Manage remote Dynatrace environments"
  }, {
    "name" : "Alerting Profiles",
    "description" : "Manage alerting profiles"
  }, {
    "name" : "Credential vault",
    "description" : "Manage credentials for Synthetic monitors"
  }, {
    "name" : "RUM - Metrics",
    "description" : "Manage RUM metrics"
  }, {
    "name" : "Mobile Deobfuscation and Symbolication"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/dataPrivacy" : {
      "get" : {
        "tags" : [ "Data privacy and security" ],
        "summary" : "Lists the global data privacy and security settings.",
        "description" : "",
        "operationId" : "getDataPrivacy",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DataPrivacyAndSecurity"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Data privacy and security" ],
        "summary" : "Updates the global data privacy and security settings.",
        "description" : "This request updates global settings, affecting all your applications. To update application-specific data privacy settings, use the `PUT /applications/web/{id}/dataPrivacy` request.",
        "operationId" : "updateDataPrivacy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataPrivacyAndSecurity"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The configuration is updated. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DataPrivacy" : [ ]
        } ]
      }
    },
    "/dataPrivacy/validator" : {
      "post" : {
        "tags" : [ "Data privacy and security" ],
        "summary" : "Validates new data privacy and security settings for the `PUT /dataPrivacy` request.",
        "description" : "",
        "operationId" : "validateUpdateDataPrivacy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataPrivacyAndSecurity"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DataPrivacy" : [ ]
        } ]
      }
    },
    "/alertingProfiles" : {
      "get" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Lists all alerting profiles available in your environment | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getAlertingProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "ALERTING_PROFILES_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Creates a new alerting profile | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAlertingProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new alerting profile.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertingProfile"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new alerting profile has been created. The response contains the ID of the new alerting profile.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "ALERTING_PROFILES_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/alertingProfiles/{id}" : {
      "get" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Gets the properties of the specified alerting profile | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getAlertingProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required alerting profile.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AlertingProfile"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "ALERTING_PROFILES_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Updates an existing alerting profile | maturity=EARLY_ADOPTER",
        "description" : "If an alerting profile with the specified ID doesn't exist, a new one is created.",
        "operationId" : "updateAlertingProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the alerting profile to be updated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the alerting profile.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertingProfile"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The alerting profile has been updated. Response doesn't have a body."
          },
          "201" : {
            "description" : "Success. The new alerting profile has been created. The response contains the ID of the new alerting profile.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "ALERTING_PROFILES_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Deletes the specified alerting profile | maturity=EARLY_ADOPTER",
        "description" : "The default alerting profile cannot be deleted.",
        "operationId" : "deleteAlertingProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the alerting profile to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The alerting profile has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "ALERTING_PROFILES_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/alertingProfiles/validator" : {
      "post" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Validates the payload the `POST /alertingProfiles` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateAlertingProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the alerting profile to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertingProfile"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted alerting profile is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "ALERTING_PROFILES_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/alertingProfiles/{id}/validator" : {
      "post" : {
        "tags" : [ "Alerting Profiles" ],
        "summary" : "Validates the payload the `PUT /alertingProfiles/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateAlertingProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the alerting profile to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the alerting profile to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertingProfile"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted alerting profile is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "ALERTING_PROFILES_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/applications" : {
      "get" : {
        "tags" : [ "Anomaly detection - Applications" ],
        "summary" : "Gets the configuration of anomaly detection for applications",
        "description" : "",
        "operationId" : "getAnomalyDetectionApplications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApplicationAnomalyDetectionConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Applications" ],
        "summary" : "Updates the configuration of anomaly detection for applications",
        "description" : "",
        "operationId" : "updateAnomalyDetectionApplications",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request, containing parameters of the application anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/applications/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Applications" ],
        "summary" : "Validates the configuration of anomaly detection for applications for the `PUT /anomalyDetection/applications` request",
        "description" : "",
        "operationId" : "validateUpdateAnomalyDetectionApplications",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request, containing parameters of the application anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/aws" : {
      "get" : {
        "tags" : [ "Anomaly detection - AWS" ],
        "summary" : "Gets the configuration of anomaly detection for AWS",
        "description" : "",
        "operationId" : "getAnomalyDetectionAws",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AwsAnomalyDetectionConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - AWS" ],
        "summary" : "Updates the configuration of anomaly detection for AWS",
        "description" : "",
        "operationId" : "updateAnomalyDetectionAws",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing parameters of the AWS anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AwsAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/aws/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - AWS" ],
        "summary" : "Validates the configuration of anomaly detection for AWS for the `PUT /anomalyDetection/aws` request",
        "description" : "",
        "operationId" : "validateUpdateAnomalyDetectionAws",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing parameters of the AWS anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AwsAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/databaseServices" : {
      "get" : {
        "tags" : [ "Anomaly detection - Database services" ],
        "summary" : "Gets the configuration of anomaly detection for database services",
        "description" : "",
        "operationId" : "getAnomalyDetectionDatabaseServices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DatabaseAnomalyDetectionConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Database services" ],
        "summary" : "Updates the configuration of anomaly detection for database services",
        "description" : "",
        "operationId" : "updateAnomalyDetectionDatabaseServices",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the database service anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DatabaseAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/databaseServices/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Database services" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/databaseServices` request",
        "description" : "",
        "operationId" : "validateUpdateAnomalyDetectionDatabaseServices",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the database service anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DatabaseAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/diskEvents" : {
      "get" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Lists all existing disk event rules | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getAnomalyDetectionDiskEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Creates a new disk event rule | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAnomalyDetectionDiskEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request. Contains parameters of the new disk event rule.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DiskEventAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new disk event rule has been created. The ID of the new disk event rule is returned.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/diskEvents/{id}" : {
      "get" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Gets the properties of the specified disk event rule | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getAnomalyDetectionDiskEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required disk event rule.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DiskEventAnomalyDetectionConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Updates or creates a disk event rule | maturity=EARLY_ADOPTER",
        "description" : "If a disk event rule with the specified ID does not exist, a new rule is created.",
        "operationId" : "updateAnomalyDetectionDiskEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the disk event rule to be updated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request. Contains updated disk event rule parameters.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DiskEventAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new disk event rule has been created. The ID of the new disk event rule is returned.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The disk event rule has been updated. Response doesn't have a body."
          },
          "403" : {
            "description" : "Failed. The specified ID is reserved for internal use."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Deletes the specified disk event rule | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteAnomalyDetectionDiskEvent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the disk event rule to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The disk event rule has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/diskEvents/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Validates the payload for the `POST /anomalyDetection/diskEvents` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateAnomalyDetectionDiskEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request. Contains the disk event rule to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DiskEventAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted disk event rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/diskEvents/{id}/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Disk events" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/diskEvents/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateAnomalyDetectionDiskEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the disk event rule to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request. Contains the disk event rule to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DiskEventAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted disk event rule is valid. Response doesn't have a body."
          },
          "403" : {
            "description" : "Failed. The specified ID is reserved for internal use."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/hosts" : {
      "get" : {
        "tags" : [ "Anomaly detection - Hosts" ],
        "summary" : "Gets the configuration of anomaly detection for hosts",
        "description" : "",
        "operationId" : "getAnomalyDetectionHosts",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HostsAnomalyDetectionConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Hosts" ],
        "summary" : "Updates the configuration of anomaly detection for hosts",
        "description" : "",
        "operationId" : "updateAnomalyDetectionHosts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the host anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HostsAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/hosts/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Hosts" ],
        "summary" : "Validates the configuration of anomaly detection for hosts for the `PUT /anomalyDetection/hosts` request",
        "description" : "",
        "operationId" : "validateUpdateAnomalyDetectionHosts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the host anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HostsAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/metricEvents/{id}" : {
      "get" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Gets the properties of the specified metric event | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getAnomalyDetectionMetricEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required metric event.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MetricEvent"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Updates an existing metric event or creates a new one | maturity=EARLY_ADOPTER",
        "description" : "If the metric event with the specified ID does not exist, a new metric event will be created. \n\n You can't update the **type** of the metric event.",
        "operationId" : "updateAnomalyDetectionMetricEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the metric event to be updated.\n\n If you also set the ID in the body, it must match this ID.",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\.\\-_]+$"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the metric event.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MetricEvent"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new metric event has been created. The response contains the ID of the newly created metric event",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The metric event has been updated. The response is empty."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Deletes the specified metric event | maturity=EARLY_ADOPTER",
        "description" : "You can't delete events created by plugins.",
        "operationId" : "deleteAnomalyDetectionMetricEvent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the metric event to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/metricEvents/{id}/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/metricEvents/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateAnomalyDetectionMetricEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the metric event to be validated.",
          "required" : true,
          "type" : "string",
          "pattern" : "^[a-zA-Z0-9\\.\\-_]+$"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the metric event configuration to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MetricEvent"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/metricEvents/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Validates the payload for the `POST /anomalyDetection/metricEvents` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateAnomalyDetectionMetricEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the metric event configuration to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MetricEvent"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/metricEvents" : {
      "get" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Lists all configured metric events | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getAnomalyDetectionMetricEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeEntityFilterMetricEvents",
          "in" : "query",
          "description" : "Flag to include metric events with associated entities to the response. \n\n Metric events with **entity** filters aren't compatible across environments. If set to `false`, metric events with entity filters will be removed.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Anomaly detection - Metric events" ],
        "summary" : "Creates a new metric event | maturity=EARLY_ADOPTER",
        "description" : "The response contains the ID of the newly created metric event.",
        "operationId" : "createAnomalyDetectionMetricEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new metric event.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MetricEvent"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The metric event has been created. The response contains the ID and name of the newly created metric event",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/anomalyDetection/services" : {
      "get" : {
        "tags" : [ "Anomaly detection - Services" ],
        "summary" : "Gets the service anomaly detection configuration",
        "description" : "",
        "operationId" : "getAnomalyDetectionServices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ServiceAnomalyDetectionConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - Services" ],
        "summary" : "Updates the service anomaly detection configuration",
        "description" : "",
        "operationId" : "updateAnomalyDetectionServices",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the service anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/services/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - Services" ],
        "summary" : "Validates the payload for the `PUT /anomalyDetection/services` request",
        "description" : "",
        "operationId" : "validateUpdateAnomalyDetectionServices",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the service anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServiceAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/vmware" : {
      "get" : {
        "tags" : [ "Anomaly detection - VMware" ],
        "summary" : "Gets the configuration of anomaly detection for VMware",
        "description" : "",
        "operationId" : "getAnomalyDetectionVmware",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VMwareAnomalyDetectionConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Anomaly detection - VMware" ],
        "summary" : "Updates the configuration of anomaly detection for VMware",
        "description" : "",
        "operationId" : "updateAnomalyDetectionVmware",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing parameters of the VMware anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VMwareAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/anomalyDetection/vmware/validator" : {
      "post" : {
        "tags" : [ "Anomaly detection - VMware" ],
        "summary" : "Validates the configuration of anomaly detection for VMware for the `PUT /anomalyDetection/vmware` request",
        "description" : "",
        "operationId" : "validateCreateAnomalyDetectionVmware",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing parameters of the VMware anomaly detection configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VMwareAnomalyDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applications/web/{id}/dataPrivacy" : {
      "get" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Gets the data privacy settings of the specified web application",
        "description" : "",
        "operationId" : "getApplicationsWebDataPrivacy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application where you want to check data privacy settings.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApplicationDataPrivacy"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Updates the data privacy settings of the specified web application",
        "description" : "",
        "operationId" : "updateApplicationsWebDataPrivacy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application, where you want to update data privacy settings.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing new data privacy settings.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationDataPrivacy"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Data privacy settings have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DataPrivacy" : [ ]
        } ]
      }
    },
    "/applications/web" : {
      "get" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Lists all existing web applications",
        "description" : "",
        "operationId" : "getApplicationsWebs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Creates a new web application",
        "description" : "The body must not provide an ID as that will be automatically assigned by Dynatrace server.",
        "operationId" : "createApplicationsWeb",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing parameters of the new web application configuraiton.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WebApplicationConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The response body contains the ID and name of the new web application.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applications/web/{id}" : {
      "get" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Gets the configuration of the specified web application",
        "description" : "",
        "operationId" : "getApplicationsWeb",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the requested web application.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WebApplicationConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Updates the configuration of the specified web application or creates a new one",
        "description" : "If the application with the specified ID does not exist, a new application will be created.",
        "operationId" : "updateApplicationsWeb",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application to update. \n\nIf you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing updated configuration of the web application.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WebApplicationConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new configuration has been created. The response body contains the ID and name of the new web application.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Deletes the specified web application",
        "description" : "",
        "operationId" : "deleteApplicationsWeb",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The application has been deleted. The response does not have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applications/web/default" : {
      "get" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Gets the configuration of the default web application",
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "getApplicationsWebDefault",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WebApplicationConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Updates the configuration of the default web application",
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "updateApplicationsWebDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing the new parameters of the default web application.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WebApplicationConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applications/web/default/validator" : {
      "post" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Validates the configuration of the default web application for the `PUT /applications/web/default` request",
        "description" : "",
        "operationId" : "validateCreateApplicationsWebDefault",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing web application configuration to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WebApplicationConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applications/web/dataPrivacy" : {
      "get" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Lists data privacy settings of all web applications",
        "description" : "",
        "operationId" : "getApplicationsWebDataPrivacyList",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApplicationDataPrivacyList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      }
    },
    "/applications/web/default/dataPrivacy" : {
      "get" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Gets the data privacy settings of the default web application",
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all the traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "getApplicationsWebDefaultDataPrivacy",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApplicationDataPrivacy"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Updates the data privacy settings of the default web application",
        "description" : "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one.",
        "operationId" : "updateApplicationsWebDefaultDataPrivacy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing new data privacy settings.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationDataPrivacy"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Data privacy settings have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DataPrivacy" : [ ]
        } ]
      }
    },
    "/applications/web/{id}/dataPrivacy/validator" : {
      "post" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Validates data privacy settings for the `PUT /applications/web/{id}/dataPrivacy` request",
        "description" : "",
        "operationId" : "validateUpdateApplicationsDataPrivacy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application, where you want to validate data privacy settings.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing new data privacy settings.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationDataPrivacy"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DataPrivacy" : [ ]
        } ]
      }
    },
    "/applications/web/default/dataPrivacy/validator" : {
      "post" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Validates data privacy settings of the default web application for the `PUT /applications/web/default/dataPrivacy` request",
        "description" : "",
        "operationId" : "validateUpdateApplicationsWebDefaultDataPrivacy",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing the data privacy settings to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationDataPrivacy"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DataPrivacy" : [ ]
        } ]
      }
    },
    "/applications/web/validator" : {
      "post" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Validates the configuration of the web application for the `POST /applications/web` request",
        "description" : "",
        "operationId" : "validateCreateApplicationsWeb",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing the web application configuration to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WebApplicationConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applications/web/{id}/validator" : {
      "post" : {
        "tags" : [ "Web application configuration" ],
        "summary" : "Validates the configuration of the web application for the `PUT /applications/web/{id}` request.",
        "description" : "",
        "operationId" : "validateUpdateApplicationsWeb",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the web application to validate.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing the web application configuration to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WebApplicationConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applicationDetectionRules" : {
      "get" : {
        "tags" : [ "Application detection rules" ],
        "summary" : "Lists all available application detection rules",
        "description" : "",
        "operationId" : "getApplicationDetectionRules",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Application detection rules" ],
        "summary" : "Creates a new application detection rule",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server. \n\nYou can only create detection rules for an existing application. If you need to create a rule for an application that doesn't exist yet, [create an application first](https://www.dynatrace.com/support/help/shortlink/api-config-web-app-post-web-app) and then configure detection rules for it.",
        "operationId" : "createApplicationDetectionRule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains configuration of the new application detection rule. \n\n You must not specify the ID of the rule. \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /applicationDetectionRules/order` request.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationDetectionRuleConfig"
          }
        }, {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the bottom of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If not set, the `APPEND` is used.",
          "required" : false,
          "type" : "string",
          "enum" : [ "APPEND", "PREPEND" ]
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The application detection rule has been created. Response contains the ID of the new rule.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applicationDetectionRules/order" : {
      "put" : {
        "tags" : [ "Application detection rules" ],
        "summary" : "Reorders the application detection rules",
        "description" : "This request reorders the application detection rules according to the submitted list of IDs. Application detection rules not present in the body of the request will retain their relative ordering but are placed *after* all those present in the request.",
        "operationId" : "updateApplicationDetectionRulesOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the IDs of the application detection rules in the desired order. Any further properties (**name**, **description**) are ignored.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StubList"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Application detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applicationDetectionRules/{id}" : {
      "get" : {
        "tags" : [ "Application detection rules" ],
        "summary" : "Gets the parameters of the specified application detection rule",
        "description" : "",
        "operationId" : "getApplicationDetectionRule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required application detection rule.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApplicationDetectionRuleConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Application detection rules" ],
        "summary" : "Updates the specified application detection rule",
        "description" : "If the application detection rule with the specified ID doesn't exist, a new application is created and appended to the end of the rule list. \n\nIf the **order** parameter is set for an existing rule, the request uses this value. Otherwise it keeps the existing order of rules.",
        "operationId" : "updateApplicationDetectionRule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application detection rule to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the application detection rule. \n\n If the **order** parameter is set, the rule is placed to this position.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationDetectionRuleConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. Application detection rule has been created. Response contains the ID of the new rule.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. Application detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Application detection rules" ],
        "summary" : "Deletes the specified application detection rule",
        "description" : "",
        "operationId" : "deleteApplicationDetectionRule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application detection rule to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applicationDetectionRules/validator" : {
      "post" : {
        "tags" : [ "Application detection rules" ],
        "summary" : "Validates the payload for the `POST /applicationDetection` request",
        "description" : "",
        "operationId" : "validateCreateApplicationDetectionRule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the application detection rule to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationDetectionRuleConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/applicationDetectionRules/{id}/validator" : {
      "post" : {
        "tags" : [ "Application detection rules" ],
        "summary" : "Validate the payload for the `PUT /applicationDetection/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateApplicationDetectionRule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application detection rule to be validated. \n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the application detection rule to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationDetectionRuleConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/autoTags" : {
      "get" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Lists all configured auto-tags",
        "description" : "",
        "operationId" : "getAutoTags",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Creates a new auto-tag",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAutoTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new auto-tag.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AutoTag"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The auto-tag has been created. The response body contains the ID of the new auto-tag.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/autoTags/{id}" : {
      "get" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Gets the properties of the specified auto-tag",
        "description" : "",
        "operationId" : "getAutoTag",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required auto-tag.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "includeProcessGroupReferences",
          "in" : "query",
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. \n\nWhen this flag is set to `false`, conditions with process group references are removed. If that results in a rule having no conditions, the entire rule is removed.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AutoTag"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Updates an existing auto-tag",
        "description" : "If the auto-tag with the specified ID does not exist, a new auto-tag is created.",
        "operationId" : "updateAutoTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the auto-tag to be updated.\n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the auto-tag.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AutoTag"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new auto-tag has been created. The response body contains the ID of the new auto-tag.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The auto-tag has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Deletes the specified auto-tag",
        "description" : "",
        "operationId" : "deleteAutoTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the auto-tag to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/autoTags/validator" : {
      "post" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Validates the payload for the `POST /autoTags` request",
        "description" : "",
        "operationId" : "validateCreateAutoTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains auto-tag configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AutoTag"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/autoTags/{id}/validator" : {
      "post" : {
        "tags" : [ "Automatically applied tags" ],
        "summary" : "Validates the payload for the `PUT /autoTags/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateAutoTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the auto-tag to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains auto-tag configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AutoTag"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/aws/iamExternalId" : {
      "get" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Gets the external ID token for setting an IAM role",
        "description" : "You'll need it for the role-based AWS authentication.",
        "operationId" : "getAwsIamExternalId",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AwsIamToken"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      }
    },
    "/aws/credentials" : {
      "get" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Lists all available AWS credentials configurations",
        "description" : "",
        "operationId" : "getAwsCredentials",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Creates a new AWS credentials configuration",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createAwsCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new AWS credentials configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AwsCredentialsConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new AWS credentials configuration has been created. The response body contains the ID of the configuration. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/aws/credentials/{id}" : {
      "get" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Gets the configuration of the specified AWS credentials",
        "description" : "",
        "operationId" : "getAwsCredential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the specified AWS credentials configuration.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AwsCredentialsConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Updates an existing AWS credentials configuration",
        "description" : "",
        "operationId" : "updateAwsCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the AWS credentials configuration to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the AWS credentials configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AwsCredentialsConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new AWS credentials configuration has been created. The response body contains the ID of the configuration. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The AWS credentials configuration has been updated. Response doesn't have a body. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Deletes the specified AWS credentials configuration",
        "description" : "",
        "operationId" : "deleteAwsCredential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of AWS credentials configuration to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The AWS credentials configuration has been deleted. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/aws/credentials/validator" : {
      "post" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Validates the payload for the `POST /aws/credentials` request",
        "description" : "",
        "operationId" : "validateCreateAwsCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the AWS credentials configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AwsCredentialsConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/aws/credentials/{id}/validator" : {
      "post" : {
        "tags" : [ "AWS credentials configuration" ],
        "summary" : "Validates the payload for the `PUT /aws/credentials/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateAwsCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the AWS credentials configuration to be validated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the AWS credentials configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AwsCredentialsConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/credentials/{id}" : {
      "get" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Gets the metadata of the specified credentials set | maturity=EARLY_ADOPTER",
        "description" : "The credentials set itself (username/certificate and password) is not included in the response.",
        "operationId" : "getCredential",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required credentials set.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the metadata of the credentials set.",
            "schema" : {
              "$ref" : "#/definitions/CredentialsResponseElement"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "MANAGE_SYNTHETIC_CREDENTIALS_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Updates the specified credentials set | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "updateCredential",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the credentials set to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the credentials set.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Credentials"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The credentials set has been updated. Response doesn't have a body."
          },
          "201" : {
            "description" : "Success. The new credentials set has been created. The response contains the ID of the set.",
            "schema" : {
              "$ref" : "#/definitions/CredentialsResponseElement"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "MANAGE_SYNTHETIC_CREDENTIALS_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Deletes the specified credentials set | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteCredential",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the credentials set to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The credentials set has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "MANAGE_SYNTHETIC_CREDENTIALS_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/credentials" : {
      "get" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Lists all sets of credentials for synthetic monitors stored in your environment | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCredentials",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Filters the result by the specified credentials type.",
          "required" : false,
          "type" : "string",
          "enum" : [ "CERTIFICATE", "USERNAME_PASSWORD", "TOKEN" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialsList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "MANAGE_SYNTHETIC_CREDENTIALS_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Creates a new credentials set | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createCredential",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new credentials set.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Credentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new credentials set has been created. The response contains the ID of the set.",
            "schema" : {
              "$ref" : "#/definitions/CredentialsResponseElement"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "MANAGE_SYNTHETIC_CREDENTIALS_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/customServices/{technology}/order" : {
      "put" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Reorders the custom services of the specified technology",
        "description" : "This request reorders the custom services of the specified technology according to the given list of IDs. Custom services not present in the body of the request will retain their relative ordering but will be ordered *after* all those present in the request.",
        "operationId" : "updateServiceCustomServicesOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of custom services to update.",
          "required" : true,
          "type" : "string",
          "enum" : [ "dotNet", "go", "java", "php" ]
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request containing the IDs of the custom services in the desired order. Any further properties (*name*, *description*) will be ignored.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StubList"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Custom services have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/customServices/{technology}/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Validate the new custom service for the `PUT /customServices/{technology}/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateServiceCustomService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service to validate.",
          "required" : true,
          "type" : "string",
          "enum" : [ "dotNet", "go", "java", "php" ]
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the custom service to validate.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request containing definition of the custom service to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomService"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/customServices/{technology}/validator" : {
      "post" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Validate the new custom service for the `POST /customServices/{technology}` request",
        "description" : "",
        "operationId" : "validateCreateServiceCustomService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service to validate.",
          "required" : true,
          "type" : "string",
          "enum" : [ "dotNet", "go", "java", "php" ]
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request containing definition of the custom service to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomService"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/customServices/{technology}" : {
      "get" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Lists all custom services of the specified technology",
        "description" : "",
        "operationId" : "getServiceCustomServices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the required custom services.",
          "required" : true,
          "type" : "string",
          "enum" : [ "dotNet", "go", "java", "php" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Creates a custom service",
        "description" : "In the body of the request, neither custom service nor its rules can have the ID. All IDs will be generated automatically by Dynatrace.",
        "operationId" : "createServiceCustomService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the new custom service.",
          "required" : true,
          "type" : "string",
          "enum" : [ "dotNet", "go", "java", "php" ]
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request containing definition of the new custom service. \n\nYou must not specify the IDs for the custom service or any of its rules. The *order* field is not allowed either.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomService"
          }
        }, {
          "name" : "position",
          "in" : "query",
          "description" : "Order of the new custom service. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`.",
          "required" : false,
          "type" : "string",
          "default" : "APPEND",
          "enum" : [ "APPEND", "PREPEND" ]
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The custom service has been created. Response contains the new service's ID and name.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/customServices/{technology}/{id}" : {
      "get" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Gets the definition of the specified custom service",
        "description" : "",
        "operationId" : "getServiceCustomService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service you're inquiring.",
          "required" : true,
          "type" : "string",
          "enum" : [ "dotNet", "go", "java", "php" ]
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the custom service you're inquiring.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "includeProcessGroupReferences",
          "in" : "query",
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. \n\n`false` is used if the value is not set.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomService"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Updates the specified custom service or create a new one.",
        "description" : "Will use the config's ´order´ attribute if supplied, otherwise keeps the order of the existing config or appends if no existing config with the supplied ID was found.",
        "operationId" : "updateServiceCustomService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service to update.",
          "required" : true,
          "type" : "string",
          "enum" : [ "dotNet", "go", "java", "php" ]
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the custom service to update.\n\n The ID of the custom service in the body of the request must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request containing updated definition of the custom service. If *order* is present, it will be used.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomService"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. Custom service has been created. Response contains the new service's ID and name.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. Custom service has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Service - Custom services" ],
        "summary" : "Deletes the specified custom service",
        "description" : "",
        "operationId" : "deleteServiceCustomService",
        "parameters" : [ {
          "name" : "technology",
          "in" : "path",
          "description" : "Technology of the custom service to delete.",
          "required" : true,
          "type" : "string",
          "enum" : [ "dotNet", "go", "java", "php" ]
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the custom service to delete.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/dashboards" : {
      "get" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Lists all dashboards of the environment | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getDashboards",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DashboardList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Creates a dashboard | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createDashboard",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new dashboard.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Dashboard"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new dashboard has been created. The response body contains the generated ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/dashboards/{id}" : {
      "get" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Gets the properties of the specified dashboard | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getDashboard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required dashboard.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains parameters of the dashboard.",
            "schema" : {
              "$ref" : "#/definitions/Dashboard"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Updates or creates a dashboard | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "updateDashboard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the dashboard to be updated. \n\n The ID in the request body provides must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the dashboard.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Dashboard"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new dashboard has been created. Response doesn't have a body.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The dashboard has been updated. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Deletes the specified dashboard | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteDashboard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the dashboard to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The dashboard has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/dashboards/validator" : {
      "post" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Validates the payload for the 'POST /dashboards' request | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID.",
        "operationId" : "validateCreateDashboard",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Containing the dashboard to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Dashboard"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted dashboard is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/dashboards/{id}/validator" : {
      "post" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Validates the payload for the 'PUT /dashboards/{id}' request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateDashboard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the dashboard to be validated. \n\n The ID in the request body provides must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the dashboard to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Dashboard"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted dashboard is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/frequentIssueDetection" : {
      "get" : {
        "tags" : [ "Frequent Issue Detection" ],
        "summary" : "Gets the configuration of frequent issue detection",
        "description" : "",
        "operationId" : "getFrequentIssueDetection",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FrequentIssueDetectionConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Frequent Issue Detection" ],
        "summary" : "Updates the configuration of frequent issue detection",
        "description" : "",
        "operationId" : "updateFrequentIssueDetection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request, containing parameters of the frequent issue detection configuration",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FrequentIssueDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Configuration has been updated. Response doesn't have a Body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/frequentIssueDetection/validator" : {
      "post" : {
        "tags" : [ "Frequent Issue Detection" ],
        "summary" : "Validates the frequent issue detection configuration for the `PUT /frequentIssueDetection` request",
        "description" : "",
        "operationId" : "validateFrequentIssueDetection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request, containing parameters of the frequent issue detection configuration",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FrequentIssueDetectionConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/ibmMQTracing/queueManager" : {
      "get" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Lists all available queue managers",
        "description" : "This endpoint is used to provide Dynatrace with your IBM MQ setup regarding alias, remote and cluster queues. \n\n This is required to facilitate end to end tracing for messages send via IBM MQ where sender and receiver use different queue names. Without this information Dynatrace would still trace all requests, but would not be able to stitch service calls that use these IBM MQ features.",
        "operationId" : "getServiceMqtTracingQueueManagers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      }
    },
    "/service/ibmMQTracing/imsEntryQueue/{id}" : {
      "get" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Gets the properties of the specified IBM IMS entry queue",
        "description" : "",
        "operationId" : "getServiceMqtTracingImsEntryQueue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required IBM IMS entry queue.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IbmMQImsEntryQueue"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Updates an existing IBM IMS entry queue or creates a new one",
        "description" : "If the IBM IMS entry queue with the specified ID does not exist, a new IBM IMS entry queue will be created.",
        "operationId" : "updateServiceMqtTracingImsEntryQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the IBM IMS entry queue to update.\n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing updated parameters of the IBM IMS entry queue.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IbmMQImsEntryQueue"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new IBM IMS entry queue has been created. The response body contains the ID and name of the created IBM IMS entry queue.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The IBM IMS entry queue has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Deletes the specified IBM IMS entry queue",
        "description" : "",
        "operationId" : "deleteServiceMqtTracingImsEntryQueue",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the IBM IMS entry queue to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/ibmMQTracing/imsEntryQueue" : {
      "get" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Lists all IBM IMS entry queues",
        "description" : "This endpoint is used to provide Dynatrace with all IBM MQ queues (defined by QueueManagerName and QueueName) which are used to send messages to IBM IMS on the mainframe. \n\n This is required to facilitate end to end tracing for messages sent via IBM MQ to IBM IMS.",
        "operationId" : "getServiceMqtTracingImsEntryQueues",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Creates an IBM IMS entry queue",
        "description" : "The body must not provide an ID as it will be automatically assigned by the Dynatrace server.",
        "operationId" : "createServiceMqtTracingImsEntryQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing parameters of the new IBM IMS entry queue.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IbmMQImsEntryQueue"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The IBM IMS entry queue has been created. The response body contains the generated ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/ibmMQTracing/imsEntryQueue/validator" : {
      "post" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Validates new IBM IMS entry queues for the `POST /service/ibmMQTracing/imsEntryQueue` request",
        "description" : "",
        "operationId" : "validateCreateServiceMqtTracingImsEntryQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing IBM IMS entry queue configuration to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IbmMQImsEntryQueue"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/ibmMQTracing/imsEntryQueue/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Validates update of existing IBM IMS entry queues for the `PUT /service/ibmMQTracing/imsEntryQueue/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateServiceMqtTracingImsEntryQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the IBM IMS entry queue to validate.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing IBM IMS entry queue configuration to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IbmMQImsEntryQueue"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/ibmMQTracing/queueManager/{name}" : {
      "get" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Gets the parameters of the specified queue manager",
        "description" : "",
        "operationId" : "getServiceMqtTracingQueueManager",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the queue manager you're inquiring.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/QueueManager"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Updates the specified queue manager or creates a new one",
        "description" : "If the queue manager with the specified ID doesn’t exist, a new queue manager will be created.",
        "operationId" : "updateServiceMqtTracingQueueManager",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the queue manager to be updated. \n\n The name of the queue manager in the body of the request must match this name.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing updated parameters of the queue manager.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueueManager"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new queue manager has been created. Response contains the name of the queue manager.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The queue manager has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Deletes the specified queue manager",
        "description" : "",
        "operationId" : "deleteServiceMqtTracingQueueManager",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the queue manager to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/ibmMQTracing/queueManager/{name}/validator" : {
      "post" : {
        "tags" : [ "Service - IBM MQ tracing" ],
        "summary" : "Validates the queue manager update for the `PUT /service/ibmMQTracing/queueManager/{name}` request",
        "description" : "",
        "operationId" : "validateUpdateServiceMqtTracingQueueManager",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the queue manager to be validated. \n\n The name of the queue manager in the body of the request must match this name.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing updated parameters of the queue manager.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueueManager"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/maintenanceWindows" : {
      "get" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Lists all available maintenance windows",
        "description" : "",
        "operationId" : "getMaintenanceWindows",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Creates a new maintenance window",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createMaintenanceWindow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new maintenance window.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MaintenanceWindow"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new maintenance window has been created. The response body contains its ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/maintenanceWindows/{id}" : {
      "get" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Gets the properties of the specified maintenance window",
        "description" : "",
        "operationId" : "getMaintenanceWindow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required maintenance window.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MaintenanceWindow"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Updates an existing maintenance window",
        "description" : "If a maintenance window with the specified ID doesn't exist, a new one is created.",
        "operationId" : "updateMaintenanceWindow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the maintenance window to be updated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the maintenance window.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MaintenanceWindow"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The maintenance window has been updated. The response doesn't have a body."
          },
          "201" : {
            "description" : "Success. The new maintenance window has been created. The response body contains its ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Deletes the specified maintenance window",
        "description" : "",
        "operationId" : "deleteMaintenanceWindow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the maintenance window to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The maintenance window has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/maintenanceWindows/validator" : {
      "post" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Validates the payload for the `POST /maintenancewindow` request",
        "description" : "",
        "operationId" : "validateCreateMaintenanceWindow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the maintenance window be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MaintenanceWindow"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/maintenanceWindows/{id}/validator" : {
      "post" : {
        "tags" : [ "Maintenance windows" ],
        "summary" : "Validates the payload for the `PUT /maintenancewindow/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateMaintenanceWindow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the maintenance window to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the maintenance window to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MaintenanceWindow"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/managementZones" : {
      "get" : {
        "tags" : [ "Management zones" ],
        "summary" : "Lists all configured management zones",
        "description" : "",
        "operationId" : "getManagementZones",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Management zones" ],
        "summary" : "Creates a new management zone",
        "description" : "The body must not provide an ID as IDs are automatically assigned.",
        "operationId" : "createManagementZone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request, containing parameters of the management zone.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ManagementZone"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The management zone has been created. The ID of the new configuration is returned.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/managementZones/{id}" : {
      "get" : {
        "tags" : [ "Management zones" ],
        "summary" : "Lists the parameters of the specified management zone",
        "description" : "",
        "operationId" : "getManagementZone",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required management zone.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeProcessGroupReferences",
          "in" : "query",
          "description" : "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. When this flag is set to false, conditions with process group references will be removed. If that leads to a rule having no conditions, the entire rule will be removed.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementZone"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Management zones" ],
        "summary" : "Updates the specified management zone or creates it",
        "description" : "",
        "operationId" : "updateManagementZone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the management zone to update.\n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request, containing updated parameters of the management zone.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ManagementZone"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The management zone with the specified ID has been created. The ID of the new configuration is returned.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The management zone has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Management zones" ],
        "summary" : "Deletes the specified management zone",
        "description" : "",
        "operationId" : "deleteManagementZone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the management zone to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/managementZones/validator" : {
      "post" : {
        "tags" : [ "Management zones" ],
        "summary" : "Validates a new management zone for the `POST /managementZones` request",
        "description" : "",
        "operationId" : "validateCreateManagementZone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request, containing the management zone parameters to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ManagementZone"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/managementZones/{id}/validator" : {
      "post" : {
        "tags" : [ "Management zones" ],
        "summary" : "Validate updates of existing management zone for the `PUT /managementZones/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateManagementZone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the management zone to validate.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request, containing the management zone parameters to validate.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ManagementZone"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/calculatedMetrics/log" : {
      "get" : {
        "tags" : [ "Log Monitoring metrics" ],
        "summary" : "Lists all custom log metrics configured in your environment | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCalculatedMetricsLogs",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "LOGANALYTICS_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/log/{metricKey}" : {
      "get" : {
        "tags" : [ "Log Monitoring metrics" ],
        "summary" : "Gets the definition of the specified custom log metric | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCalculatedMetricsLog",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required custom log metric.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LogMetricConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "LOGANALYTICS_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Log Monitoring metrics" ],
        "summary" : "Creates a new custom log metric | maturity=EARLY_ADOPTER",
        "description" : "If the metric definition with the specified key already exists, it is updated.",
        "operationId" : "updateCalculatedMetricsLog",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The required key of the custom log metric. The key must have the `calc:log.` prefix. \n\n The key in the body of the request must match this key.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the definition of the custom log metric.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LogMetricConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new metric definition has been created. The response body contains the key and the name of the new metric.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The metric definition has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "LOGANALYTICS_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Log Monitoring metrics" ],
        "summary" : "Deletes the specified custom log metric definition | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteCalculatedMetricsLog",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the custom log metric to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "LOGANALYTICS_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/log/{metricKey}/validator" : {
      "post" : {
        "tags" : [ "Log Monitoring metrics" ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/log/{metricKey}` request. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCalculatedMetricsLog",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the custom log metric to be validated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains definition of the custom log metric to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LogMetricConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "LOGANALYTICS_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/rum/validator" : {
      "post" : {
        "tags" : [ "RUM - Metrics" ],
        "summary" : "Validates the payload for the `POST /calculatedMetrics/rum` request | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID.",
        "operationId" : "validateCreateCalculatedMetricsRum",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the rum metric to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RumMetric"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted rum metric is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "RUM_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/rum/{metricKey}/validator" : {
      "post" : {
        "tags" : [ "RUM - Metrics" ],
        "summary" : "Validates the payload for the `PUT /calculatedMetrics/rum/{metricKey}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateCalculatedMetricsRum",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The rum metric update to be validated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the rum metric to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RumMetricUpdate"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted rum metric is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "RUM_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/rum" : {
      "get" : {
        "tags" : [ "RUM - Metrics" ],
        "summary" : "Lists all calculated RUM metric configurations. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCalculatedMetricsRums",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "RUM_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "RUM - Metrics" ],
        "summary" : "Stores the provided calculated RUM metric configuration. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "createCalculatedMetricsRum",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request containing definition of the new calculated RUM metric.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RumMetric"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The calculated RUM metric has been created. Response contains its ID and name.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "RUM_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/rum/{metricKey}" : {
      "get" : {
        "tags" : [ "RUM - Metrics" ],
        "summary" : "Gets the definition of the specified calculated RUM metric. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCalculatedMetricsRum",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The ID of the calculated RUM metric you're inquiring.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RumMetric"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "RUM_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "RUM - Metrics" ],
        "summary" : "Updates the specified calculated RUM metric. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "updateCalculatedMetricsRum",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The ID of the calculated RUM metric to update.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request containing updated definition of the calculated RUM metric.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RumMetricUpdate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. Calculated RUM metric has been updated. Response doesn't have a body.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. Calculated RUM metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "RUM_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "RUM - Metrics" ],
        "summary" : "Deletes the calculated RUM metric configuration with the given id. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteCalculatedMetricsRum",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The ID of the calculated RUM metric to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "RUM_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/service/validator" : {
      "post" : {
        "tags" : [ "Service - Calculated metrics" ],
        "summary" : "Validates the payload for the `POST /calculatedMetric/service` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateCalculatedMetricsService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the calculated service metric to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CalculatedServiceMetric"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/service/{metricKey}/validator" : {
      "post" : {
        "tags" : [ "Service - Calculated metrics" ],
        "summary" : "Validates the payload for the `PUT /calculatedMetric/service/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateCalculatedMetricsService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated service metric to be validated .\n\n The key of the metric in the body of the request must match this key.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the calculated service metric to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CalculatedServiceMetric"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/service" : {
      "get" : {
        "tags" : [ "Service - Calculated metrics" ],
        "summary" : "Lists all calculated service metrics configured in your environment | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCalculatedMetricsServices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Service - Calculated metrics" ],
        "summary" : "Creates a new calculated service metric | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "createCalculatedMetricsService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new calculated service metric.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CalculatedServiceMetric"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The calculated service metric has been created. Response contains the key of the new metric.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/calculatedMetrics/service/{metricKey}" : {
      "get" : {
        "tags" : [ "Service - Calculated metrics" ],
        "summary" : "Gets the descriptor of the specified calculated service metric | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCalculatedMetricsService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required calculated service metric.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CalculatedServiceMetric"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Service - Calculated metrics" ],
        "summary" : "Updates the specified calculated service metric | maturity=EARLY_ADOPTER",
        "description" : "If the calculated service metric with the specified key doesn't exist, a new metric is created.",
        "operationId" : "updateCalculatedMetricsService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated service metric to be updated. \n\n The key of the calculated service metric in the body of the request must match this key.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the calculated service metric.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CalculatedServiceMetric"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new calculated service metric has been created. Response contains the key of the new metric.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The calculated service metric has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Service - Calculated metrics" ],
        "summary" : "Deletes the specified calculated service metric | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteCalculatedMetricsService",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the calculated service metric to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The calculated service metric has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_METRIC_CONFIG_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Lists all notification configurations available in your environment",
        "description" : "",
        "operationId" : "getNotifications",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/NotificationConfigStubListDto"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Creates a new notification configuration",
        "description" : "",
        "operationId" : "createNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new notification configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/NotificationConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new notification configuration has been created. The response contains the ID of the new notification configuration."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/notifications/{id}" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Gets the properties of the specified notification configuration",
        "description" : "",
        "operationId" : "getNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required notification configuration.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/NotificationConfig"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Notifications" ],
        "summary" : "Updates an existing notification configuration or creates a new one",
        "description" : "If a notification configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the notification configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/NotificationConfig"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the notification configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The notification configuration has been updated. The response doesn't have a body."
          },
          "201" : {
            "description" : "Success. The new notification configuration has been created. The response contains the ID of the new notification configuration.",
            "schema" : {
              "$ref" : "#/definitions/NotificationConfigStub"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Deletes the specified notification configuration",
        "description" : "",
        "operationId" : "deleteNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the notification configuration to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The notification configuration has been deleted. The response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/notifications/{id}/validator" : {
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Validates the payload the `PUT /notifications/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the notification configuration to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the notification configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/NotificationConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/notifications/validator" : {
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Validates the payload for the `POST /notifications` request",
        "description" : "",
        "operationId" : "validateCreateNotification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the notification configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/NotificationConfig"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/plugins" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Lists all uploaded plugins",
        "description" : "",
        "operationId" : "getPlugins",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Uploads a ZIP plugin file",
        "description" : "",
        "operationId" : "uploadPlugin",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Plugin ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the plugin whose **name** is `custom.remote.python.demo`, the name of the plugin file must be `custom.remote.python.demo.zip`.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InputStream"
          }
        }, {
          "name" : "overrideAlerts",
          "in" : "query",
          "description" : "Use plugin-defined thresholds for alerts (`true`) or user-defined thresholds (`false`). \n\n Plugin-defined thresholds are stored in the `plugin.json` file. \n\nIf not set, user-defined thresholds are used.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. Plugin has been uploaded. Response contains the ID of the plugin.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/plugins/validator" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Validates a ZIP plugin file for `POST/plugins` request",
        "description" : "",
        "operationId" : "validateUploadPlugin",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The ZIP plugin file to be uploaded. \n\n The file name must match the ID of the plugin. Example: `custom.remote.python.demo.zip`",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InputStream"
          }
        }, {
          "name" : "jsonOnly",
          "in" : "query",
          "description" : "Validate only the `plugin.json` file (`true`) or the entire plugin structure (`false`). \n\n If not set, the entire plugin is validated. ",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted plugin is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/plugins/{id}/binary" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Downloads the ZIP file of the specified plugin",
        "description" : "",
        "operationId" : "getPluginBinary",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin you want to download.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OutputStream"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Plugins" ],
        "summary" : "Deletes the ZIP file of the specified plugin",
        "description" : "Deletion of the plugin file uninstalls the plugin, making it unavailable for use.",
        "operationId" : "deletePluginBinary",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/plugins/{id}/states" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Lists the states of the specified plugin",
        "description" : "",
        "operationId" : "getPluginStates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PluginStateList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      }
    },
    "/plugins/{id}/endpoints" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Lists endpoints of the specified ActiveGate plugin",
        "description" : "",
        "operationId" : "getPluginEndpoints",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Creates a new endpoint for the specified ActiveGate plugin",
        "description" : "The body must not provide an ID of the endpoint, as IDs are automatically assigned.",
        "operationId" : "createPluginEndpoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin where you want to create an endpoint.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new plugin endpoint.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemotePluginEndpoint"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The plugin endpoint has been created. Response contains the ID of the new endpoint.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/plugins/{id}/endpoints/validator" : {
      "post" : {
        "tags" : [ "Plugins" ],
        "summary" : "Validates the payload for the `POST /plugins/{id}/endpoints` request",
        "description" : "",
        "operationId" : "validateCreatePluginEndpoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new plugin endpoint.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemotePluginEndpoint"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/plugins/{id}/endpoints/{endpointId}" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Gets parameters of the specified endpoint of the ActiveGate plugin",
        "description" : "",
        "operationId" : "getPluginEndpoint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endpointId",
          "in" : "path",
          "description" : "The ID of the required endpoint.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RemotePluginEndpoint"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Plugins" ],
        "summary" : "Updates an existing endpoint of the ActiveGate plugin",
        "description" : "",
        "operationId" : "updatePluginEndpoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin where you want to update an endpoint. \n\nIf you set the plugin ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endpointId",
          "in" : "path",
          "description" : "The ID of the endpoint to be updated. \n\nIf you set the endpoint ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the plugin endpoint.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemotePluginEndpoint"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The endpoint has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Plugins" ],
        "summary" : "Deletes an existing endpoint of the ActiveGate plugin",
        "description" : "",
        "operationId" : "deletePluginEndpoint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the plugin where you want to delete an endpoint.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endpointId",
          "in" : "path",
          "description" : "The ID of the endpoint to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/plugins/activeGatePluginModules" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "List available ActiveGate plugin modules",
        "description" : "",
        "operationId" : "getActiveGatePlugins",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains IDs of ActiveGate plugin modules. Use them to configure plugin endpoints.",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      }
    },
    "/plugins/{id}" : {
      "get" : {
        "tags" : [ "Plugins" ],
        "summary" : "Lists the properties of the specified plugin",
        "description" : "",
        "operationId" : "getPlugin",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required plugin.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Plugin"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      }
    },
    "/remoteEnvironments/{id}" : {
      "get" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Gets the properties of the specified remote environment configuration | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getRemoteEnvironment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required configuration.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RemoteEnvironmentConfigDto"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "REMOTE_ENVIRONMENT_CONFIG_REST_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Updates an existing remote environment configuration or creates a new one | maturity=EARLY_ADOPTER",
        "description" : "If a remote environment configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateRemoteEnvironment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the remote environment configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemoteEnvironmentConfigDto"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. A new remote environment configuration has been created. The response contains the ID of the new configuration.",
            "schema" : {
              "$ref" : "#/definitions/RemoteEnvironmentConfigStubDto"
            }
          },
          "204" : {
            "description" : "Success. The configuration has been updated. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "REMOTE_ENVIRONMENT_CONFIG_REST_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Deletes the specified remote environment configuration | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteRemoteEnvironment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the configuration to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The configuration has been deleted. The response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "REMOTE_ENVIRONMENT_CONFIG_REST_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/remoteEnvironments/{id}/validator" : {
      "post" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Validates the payload for the `PUT /remoteEnvironments/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateRemoteEnvironment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the remote environment configuration to be validated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the remote environment configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemoteEnvironmentConfigDto"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "REMOTE_ENVIRONMENT_CONFIG_REST_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/remoteEnvironments/validator" : {
      "post" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Validates the payload for the `POST /remoteEnvironments` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateRemoteEnvironment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the remote environment configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemoteEnvironmentConfigDto"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "REMOTE_ENVIRONMENT_CONFIG_REST_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/remoteEnvironments" : {
      "get" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Lists all remote environment configurations | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getRemoteEnvironments",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RemoteEnvironmentConfigListDto"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "REMOTE_ENVIRONMENT_CONFIG_REST_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Remote environments" ],
        "summary" : "Creates a new remote environment configuration | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server. \n\nBe sure to prepare a token with the **Fetch data from a remote environment** (`RestRequestForwarding`) scope. You can create such a token via [Tokens API](https://www.dynatrace.com/support/help/shortlink/api-tokens-post-new).",
        "operationId" : "createRemoteEnvironment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new remote environment configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemoteEnvironmentConfigDto"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. A new remote environment configuration has been created. The response contains the ID of the new configuration.",
            "schema" : {
              "$ref" : "#/definitions/RemoteEnvironmentConfigStubDto"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "REMOTE_ENVIRONMENT_CONFIG_REST_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/reports" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Lists all reports available in your environment | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getReports",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Type of a report.",
          "required" : false,
          "type" : "string",
          "enum" : [ "DASHBOARD" ]
        }, {
          "name" : "sourceId",
          "in" : "query",
          "description" : "Referencing source entity of a report (e.g. dashboard).",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReportStubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Creates a report | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createReport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new report.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DashboardReport"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new report has been created. The response contains the ID of the new report.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/reports/{id}" : {
      "get" : {
        "tags" : [ "Reports" ],
        "summary" : "Gets the properties of the specified report | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required report.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response body contains parameters of the report.",
            "schema" : {
              "$ref" : "#/definitions/DashboardReport"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Reports" ],
        "summary" : "Updates an existing report | maturity=EARLY_ADOPTER",
        "description" : "If a report with the specified ID doesn't exist, a new report is created.",
        "operationId" : "updateReport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to be updated. \n\n The ID in the request body must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the report.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DashboardReport"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new report has been created. The response contains the ID of the new report.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The report has been updated. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Reports" ],
        "summary" : "Deletes the specified report | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The report has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/reports/{id}/subscribe" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Subscribes to the specified report | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "subscribeReport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to subscribe to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains a list of new subscribers.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReportSubscriptions"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new subscriptions have been created. The response body contains the report ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/reports/{id}/unsubscribe" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Unsubscribes from the specified report | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "unsubscribeReport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to unsubscribe from.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains a list of recipients to be unsubscribed.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReportSubscriptions"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The subscriptions have been revoked. The response body contains the report ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/reports/validator" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Validates the payload for the `POST /reports` request | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID.",
        "operationId" : "validateCreateReport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the report to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DashboardReport"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted report is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/reports/{id}/validator" : {
      "post" : {
        "tags" : [ "Reports" ],
        "summary" : "Validates the payload for the `PUT /reports/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateReport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the report to be validated. \n\n The ID in the request body must match this ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the report to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DashboardReport"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted report is valid. Response doesn't have a body"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "DASHBOARD_REPORTS_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/requestAttributes" : {
      "get" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Lists all available request attributes",
        "description" : "",
        "operationId" : "getServiceRequestAttributes",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Creates a new request attribute",
        "description" : "The body must not provide an ID as IDs are automatically assigned.",
        "operationId" : "createServiceRequestAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestAttribute"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. Request attribute has been created. The ID of the new configuration is returned.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "CaptureRequestDataToken" : [ ]
        } ]
      }
    },
    "/service/requestAttributes/{id}" : {
      "get" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Shows the properties of the specified request attribute",
        "description" : "",
        "operationId" : "getServiceRequestAttribute",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required request attribute.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "includeProcessGroupReferences",
          "in" : "query",
          "description" : "Flag to include process group references to the response. \n\n Process Group group references aren't compatible across environments.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RequestAttribute"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Updates an existing request attribute or creates a new one",
        "description" : "",
        "operationId" : "updateServiceRequestAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request attribute to be updated.\n\n If you set the ID in the body as well, it must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestAttribute"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The request attribute with the specified ID has been created. The ID of the new configuration is returned.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. Request attribute has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "CaptureRequestDataToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Deletes the specified request attribute",
        "description" : "",
        "operationId" : "deleteServiceRequestAttribute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request attribute to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "CaptureRequestDataToken" : [ ]
        } ]
      }
    },
    "/service/requestAttributes/validator" : {
      "post" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Validates new request attributes for the `POST /requestAttributes` request",
        "description" : "",
        "operationId" : "validateCreateServiceRequestAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestAttribute"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "CaptureRequestDataToken" : [ ]
        } ]
      }
    },
    "/service/requestAttributes/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Request attributes" ],
        "summary" : "Validate updates of existing request attribute for the `PUT /requestAttributes/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateServiceRequestAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request attribute to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestAttribute"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "CaptureRequestDataToken" : [ ]
        } ]
      }
    },
    "/service/requestNaming/order" : {
      "put" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Reorders the request namings",
        "description" : "This request reorders the request namings according to the given list of IDs. Request namings not present in the body of the request will retain their relative ordering but will be ordered *after* all those present in the request.",
        "operationId" : "updateServiceRequestNamingOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request containing the IDs of the request naming rules in the desired order. Any further properties (*name*, *description*) will be ignored.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StubList"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Request namings have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/requestNaming/validator" : {
      "post" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Validates the new request naming rule for the `POST /requestNaming` request",
        "description" : "",
        "operationId" : "validateCreateServiceRequestNaming",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing parameters of the new request naming rule. \n\n You must not specify the ID of the rule!",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestNaming"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/requestNaming/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Validates the new request naming for the `PUT /requestNaming/{id}` request",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate.",
        "operationId" : "validateUpdateServiceRequestNaming",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing updated parameters of the request naming.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestNaming"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/requestNaming" : {
      "get" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Lists all request naming rules along with their parameters",
        "description" : "",
        "operationId" : "getServiceRequestNamings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Creates a new request naming rule",
        "description" : "The new rule goes to the end of the rules list and will be the last to evaluate. Existing rules remain unaffected.",
        "operationId" : "createServiceRequestNaming",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing parameters of the new request naming rule. \n\n You must not specify the ID of the rule!",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestNaming"
          }
        }, {
          "name" : "position",
          "in" : "query",
          "description" : "Order of the new request naming rule. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`.",
          "required" : false,
          "type" : "string",
          "default" : "APPEND",
          "enum" : [ "APPEND", "PREPEND" ]
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The request naming has been created. Response contains the new service's ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/requestNaming/{id}" : {
      "get" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Gets the parameters of the specified request naming rule",
        "description" : "",
        "operationId" : "getServiceRequestNaming",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request naming rule you're inquiring.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RequestNaming"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Updates the specified request naming rule",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate.",
        "operationId" : "updateServiceRequestNaming",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing updated parameters of the request naming.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RequestNaming"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. Request naming rule has been created. Response contains the new request naming rule's ID and name.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. Request naming rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Deletes the specified request naming rule",
        "description" : "",
        "operationId" : "deleteServiceRequestNaming",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the request naming rule to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The rule has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/resourceNaming/validator" : {
      "post" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Validates new resource requests settings for the `PUT /service/resourceRequest` request.",
        "description" : "",
        "operationId" : "validateUpdateServiceResourceNaming",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResourceNaming"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/resourceNaming" : {
      "get" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Lists the global service resource requests.",
        "description" : "Lists all extensions which currently are renamed to e.g., `Image`",
        "operationId" : "getServiceResourceNamings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceNaming"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Service - Request naming" ],
        "summary" : "Updates the global service resource requests.",
        "description" : "Update all extensions which are renamed to `Image` or `Binary`",
        "operationId" : "updateServiceResourceNaming",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResourceNaming"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The configuration is updated. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid. See the response body for details.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/order" : {
      "put" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Reorders the service detection rules of the specified type | maturity=EARLY_ADOPTER",
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "updateServiceDetectionRuleFullRequestOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing the service detection rules in the required order.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StubList"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST" : {
      "get" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Lists all full web service detection rules | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getServiceDetectionRuleFullRequests",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the ordered list of rules.",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Creates a new service detection rule | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createServiceDetectionRuleFullRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the bottom of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If not set, the `APPEND` is used.",
          "required" : false,
          "type" : "string",
          "default" : "APPEND",
          "enum" : [ "APPEND", "PREPEND" ]
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order, use the `PUT /service/detectionRules/FULL_WEB_REQUEST/reorder` request.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FullWebRequestRule"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response body contains the ID of the rule.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/{id}" : {
      "get" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Gets the properties of the specified service detection rule | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getServiceDetectionRuleFullRequest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required service detection rule.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains properties of the specified rule.",
            "schema" : {
              "$ref" : "#/definitions/FullWebRequestRule"
            }
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Updates an existing service detection rule | maturity=EARLY_ADOPTER",
        "description" : "If a rule with the specified ID doesn't exist, a new rule is created and appended to the end of the rule list. \n\n The request keeps the existing order of rules, unless the **order** parameter is set.",
        "operationId" : "updateServiceDetectionRuleFullRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the rule to be updated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the service detection rule.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FullWebRequestRule"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response body contains the ID of the rule.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Deletes the specified service detection rule | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteServiceDetectionRuleFullRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/validator" : {
      "post" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Validates the payload for the `POST /ruleBasedServiceDetection/FULL_WEB_REQUEST` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateServiceDetectionRuleFullRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the service detection rule to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FullWebRequestRule"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_REQUEST/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Detection full web request" ],
        "summary" : "Validates the payload for the `PUT /service/detectionRules/FULL_WEB_REQUEST/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateServiceDetectionRuleFullRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the service detection rule to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FullWebRequestRule"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/order" : {
      "put" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Reorders the service detection rules of the specified type | maturity=EARLY_ADOPTER",
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "updateServiceDetectionRuleFullServicesOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing the service detection rules in the required order.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StubList"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE" : {
      "get" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Lists all full web service detection rules | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getServiceDetectionRuleFullServices",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the ordered list of rules.",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Creates a new service detection rule | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID as it will be automatically assigned.",
        "operationId" : "createServiceDetectionRuleFullService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n",
          "required" : false,
          "type" : "string",
          "default" : "APPEND",
          "enum" : [ "APPEND", "PREPEND" ]
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /ruleBasedServiceDetection/FULL_WEB_SERVICE/reorder` request.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FullWebServiceRule"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/{id}" : {
      "get" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Shows the properties of the specified service detection rule | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getServiceDetectionRuleFullService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required service detection rule.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains properties of the specified rule.",
            "schema" : {
              "$ref" : "#/definitions/FullWebServiceRule"
            }
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Updates an existing service detection rule | maturity=EARLY_ADOPTER",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list. \n\n The request keeps an existing order of rules, unless the **order** parameter is set.",
        "operationId" : "updateServiceDetectionRuleFullService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the rule to be updated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing updated parameters of the service detection rule.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FullWebServiceRule"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Deletes the specified service detection rule | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteServiceDetectionRuleFullService",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/validator" : {
      "post" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Validates the payload for the `POST /ruleBasedServiceDetection/FULL_WEB_SERVICE` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateServiceDetectionRuleFullService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FullWebServiceRule"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/FULL_WEB_SERVICE/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Detection full web service" ],
        "summary" : "Validate the payload for the `PUT /ruleBasedServiceDetection/FULL_WEB_SERVICE/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateServiceDetectionRuleFullService",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FullWebServiceRule"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/order" : {
      "put" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Reorders the service detection rules of the specified type | maturity=EARLY_ADOPTER",
        "description" : "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request.",
        "operationId" : "updateServiceDetectionRuleOpaqueAndExternalRequestsOrder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing the service detection rules in the required order.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StubList"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Service detection rules have been reordered. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST" : {
      "get" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Lists all full web service detection rules | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getServiceDetectionRuleOpaqueAndExternalRequests",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the ordered list of rules.",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Creates a new service detection rule | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID as it will be automatically assigned.",
        "operationId" : "createServiceDetectionRuleOpaqueAndExternalRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "position",
          "in" : "query",
          "description" : "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n",
          "required" : false,
          "type" : "string",
          "default" : "APPEND",
          "enum" : [ "APPEND", "PREPEND" ]
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing parameters of the new service detection rule. \n\n You must not specify the ID of the rule! \n\nThe **order** field is ignored in this request. To enforce a particular order use the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST/reorder` request.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OpaqueAndExternalWebRequestRule"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}" : {
      "get" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Shows the properties of the specified service detection rule | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getServiceDetectionRuleOpaqueAndExternalRequest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required service detection rule.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains properties of the specified rule.",
            "schema" : {
              "$ref" : "#/definitions/OpaqueAndExternalWebRequestRule"
            }
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Updates an existing service detection rule | maturity=EARLY_ADOPTER",
        "description" : "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list. \n\n The request keeps an existing order of rules, unless the **order** parameter is set.",
        "operationId" : "updateServiceDetectionRuleOpaqueAndExternalRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the rule to be updated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request containing updated parameters of the service detection rule.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OpaqueAndExternalWebRequestRule"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The service detection rule has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Deletes the specified service detection rule | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteServiceDetectionRuleOpaqueAndExternalRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be deleted.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The rule with the specified ID doesn't exist."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/validator" : {
      "post" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Validates the payload for the `POST /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateServiceDetectionRuleOpaqueAndExternalRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OpaqueAndExternalWebRequestRule"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}/validator" : {
      "post" : {
        "tags" : [ "Service - Detection opaque and external web request" ],
        "summary" : "Validate the payload for the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateServiceDetectionRuleOpaqueAndExternalRequest",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the service detection rule to be validated.",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OpaqueAndExternalWebRequestRule"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The service detection rule is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-feature-flag" : "SERVICE_DETECTION_RULES_API",
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Gets the metadata of the symbolication file belonging to the specified app version. There always can exist only one file per os and version",
        "description" : "",
        "operationId" : "getSymfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace for the mobile application to be queried",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app to be queried",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system for which the file should be displayed.",
          "required" : true,
          "type" : "string",
          "enum" : [ "ANDROID", "IOS", "TVOS" ]
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the file to be retrieved",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the file to be retrieved",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SymbolFile"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Upload a symbolication file. Either a ProGuard file for Android or a zip file containing all the iOS dSYM files. ",
        "description" : "",
        "operationId" : "updateSymfile",
        "consumes" : [ "application/x-compressed", "application/x-zip-compressed", "application/zip", "text/plain" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the app this file belongs to",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the uploaded file",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system the file belongs to",
          "required" : true,
          "type" : "string",
          "enum" : [ "ANDROID", "IOS", "TVOS" ]
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) the file belongs to",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "content-type",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The file to be uploaded. A progurad file (*.txt) for Android or the zip file produced by the DTXDSSClient provided with the OneAgent for iOS. ",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InputStream"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The file has been uploaded and stored. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Delete the symbolication file belonging to the given application, os and version",
        "description" : "",
        "operationId" : "deleteSymfile",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the mobile application where a file should be deleted",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the file to be deleted",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system the file belongs to",
          "required" : true,
          "type" : "string",
          "enum" : [ "ANDROID", "IOS", "TVOS" ]
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) of the file to be deleted",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) of the file to be deleted",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The file has been deleted successfully. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      }
    },
    "/symfiles/{applicationId}" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Lists the metadata of all symbolication files (ProGuard files for Android or dSYM files for iOS Apps) for one single mobile application from the Symbol File Store of this tenant.",
        "description" : "",
        "operationId" : "getApplicationSymfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace for the mobile application to be queried",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SymbolFileList"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Deletes all symbolication file belonging to the Dynatrace App specified",
        "description" : "",
        "operationId" : "deleteApplicationSymfiles",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the mobile application the files will be deleted",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. All files belonging to the given Dynatrace mobile application have been deleted successfully. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}/pinning" : {
      "put" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Pin or unpin all symbolication files of a app version. A pinned file will not be deleted automtically, when running out of space.",
        "description" : "",
        "operationId" : "updateSymfilePinning",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the app which should be (un)pinned",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system for which the files will be (un)pinned",
          "required" : true,
          "type" : "string",
          "enum" : [ "ANDROID", "IOS", "TVOS" ]
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) the file belongs to",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing the pinning status to set.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SymbolFilePinning"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The pinning status of the filed has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      }
    },
    "/symfiles/ios/supportedversion" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Returns the supported file format version for iOS symbol files.",
        "description" : "",
        "operationId" : "getSymfileIosSupportedVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SupportedVersion"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      }
    },
    "/symfiles/{applicationId}/{packageName}/{os}/{versionCode}/{versionName}/pinning/validator" : {
      "put" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Validate updates of existing request attribute for the `PUT /{applicationId}/{packageName}/{os}/{versionName}/pinning` request.",
        "description" : "",
        "operationId" : "validateUpdateSymfilePinning",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "path",
          "description" : "The application id used in Dynatrace of the app which should be (un)pinned",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "packageName",
          "in" : "path",
          "description" : "The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "os",
          "in" : "path",
          "description" : "The operating system for which the files will be (un)pinned",
          "required" : true,
          "type" : "string",
          "enum" : [ "ANDROID", "IOS", "TVOS" ]
        }, {
          "name" : "versionCode",
          "in" : "path",
          "description" : "The version code (Android) / CFBundleVersion (iOS) the file belongs to",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON body of the request, containing the pinning status to set.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SymbolFilePinning"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted body is valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      }
    },
    "/symfiles/info" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Retrieves information about used/empty diskspace, number of stored files,....",
        "description" : "",
        "operationId" : "getSymfileInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SymbolFileStorageInfo"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      }
    },
    "/symfiles" : {
      "get" : {
        "tags" : [ "Mobile Deobfuscation and Symbolication" ],
        "summary" : "Lists the metadata of all symbolication files (ProGuard files for Android or dSYM files for iOS Apps) from the Symbol File Store.",
        "description" : "",
        "operationId" : "getSymfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SymbolFileList"
            }
          }
        },
        "security" : [ {
          "DssFileManagement" : [ ]
        } ]
      }
    },
    "/azure/credentials/{id}" : {
      "get" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Gets the configuration of the specified Azure credentials",
        "description" : "",
        "operationId" : "getAzureCredential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the requested Azure credentials configuration.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AzureCredentials"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Updates an existing Azure credentials configuration",
        "description" : "You can't change the application(client)Id or tenant(directory)Id of the Azure configuration - you need to create new credentials for that. \n\nIf a configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateAzureCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Azure credentials configuration to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the Azure credentials configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AzureCredentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new Azure credentials configuration has been created. The response body contains the ID of the configuration.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The Azure credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Deletes the specified Azure credentials configuration",
        "description" : "",
        "operationId" : "deleteAzureCredential",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Azure credentials configuration to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/azure/credentials/{id}/validator" : {
      "post" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Validates the payload for the `PUT /azure/credentials/{id}` request",
        "description" : "",
        "operationId" : "validateUpdateAzureCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Azure credentials configuration to be validated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the Azure credentials configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AzureCredentials"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/azure/credentials" : {
      "get" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Lists all available Azure credentials configurations",
        "description" : "",
        "operationId" : "getAzureCredentials",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Creates a new Azure credentials configuration",
        "description" : "The body must not provide an ID as it will be automatically assigned by the Dynatrace server.",
        "operationId" : "createAzureCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new Azure credentials configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AzureCredentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new Azure credentials configuration has been created. The response body contains the ID of the configuration.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/azure/credentials/validator" : {
      "post" : {
        "tags" : [ "Azure credentials configuration" ],
        "summary" : "Validates the payload for the `POST /azure/credentials` request",
        "description" : "",
        "operationId" : "validateCreateAzureCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the Azure credentials configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AzureCredentials"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ]
      }
    },
    "/cloudFoundry/credentials" : {
      "get" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "List all the Cloud Foundry foundations credentials. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCloudFoundryCredentials",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Create new credentials for a single foundation. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "createCloudFoundryCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "`name`, `apiUrl` and `loginUrl` must be unique.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CloudFoundryCredentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/cloudFoundry/credentials/{id}" : {
      "get" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Show the properties for the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getCloudFoundryCredential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required Cloud Foundry foundation credentials.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CloudFoundryCredentials"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Create or update credentials for a single Cloud Foundry foundation. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "updateCloudFoundryCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Cloud Foundry foundation credentials.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "`name` must be unique. `password` can be omitted for updates, the existing one will be used. `apiUrl` and `loginUrl` must be set and may not differ from the existing config if it exists.\nUse this endpoint for copying credentials between environments while keeping their IDs and for updating existing credentials. You can *not* use this to create new credentials with an arbitrary ID, use POST instead.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CloudFoundryCredentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. Cloud Foundry foundation credentials have been successfully updated."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Delete the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteCloudFoundryCredential",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Cloud Foundry foundation credentials to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response does not have a body."
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/cloudFoundry/credentials/validator" : {
      "post" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Validate that creating credentials would be successful. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateCloudFoundryCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "`name`, `apiUrl` and `loginUrl` must be unique.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CloudFoundryCredentials"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted credentials are valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/cloudFoundry/credentials/{id}/validator" : {
      "post" : {
        "tags" : [ "Cloud Foundry credentials configuration" ],
        "summary" : "Validate that updating or creating credentials would be successful. | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateCloudFoundryCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Cloud Foundry foundation credentials.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "`name` must be unique. `password` can be omitted for updates. See the constraints for the PUT /cloudFoundry/credentials/{id} request.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CloudFoundryCredentials"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted credentials are valid. Response does not have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/kubernetes/credentials/{id}" : {
      "get" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Gets the configuration of the specified Kubernetes credentials | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getKubernetesCredential",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required Kubernetes credentials configuration.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KubernetesCredentials"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "put" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Updates an existing Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "description" : "You can't change the URL of the Kubernetes cluster. \n\nIf a configuration with the specified ID doesn't exist, a new configuration is created.",
        "operationId" : "updateKubernetesCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Kubernetes credentials configuration to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains updated parameters of the Kubernetes credentials configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/KubernetesCredentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new Kubernetes credentials configuration has been created. The response body contains the ID of the configuration.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "204" : {
            "description" : "Success. The Kubernetes credentials configuration has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "delete" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Deletes the specified Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "deleteKubernetesCredential",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Kubernetes credentials configuration be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deletes the specified Kubernetes credentials configuration"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/kubernetes/credentials/{id}/validator" : {
      "post" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Validates the payload for the `PUT /kubernetes/credentials/{id}` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateUpdateKubernetesCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Kubernetes credentials configuration to be validated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the Kubernetes credentials configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/KubernetesCredentials"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/kubernetes/credentials" : {
      "get" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Lists all available Kubernetes credentials configurations | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "getKubernetesCredentials",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StubList"
            }
          }
        },
        "security" : [ {
          "ReadConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      },
      "post" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Creates a new Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
        "description" : "The body must not provide an ID as it will be automatically assigned by the Dynatrace server.",
        "operationId" : "createKubernetesCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains parameters of the new Kubernetes credentials configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/KubernetesCredentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Success. The new Kubernetes credentials configuration has been created. The response body contains the ID of the configuration.",
            "schema" : {
              "$ref" : "#/definitions/EntityShortRepresentation"
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    },
    "/kubernetes/credentials/validator" : {
      "post" : {
        "tags" : [ "Kubernetes credentials configuration" ],
        "summary" : "Validates the payload for the `POST /kubernetes/credentials` request | maturity=EARLY_ADOPTER",
        "description" : "",
        "operationId" : "validateCreateKubernetesCredential",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The JSON body of the request. Contains the Kubernetes credentials configuration to be validated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/KubernetesCredentials"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. The response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "schema" : {
              "$ref" : "#/definitions/ErrorEnvelope"
            }
          }
        },
        "security" : [ {
          "WriteConfigToken" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER"
      }
    }
  },
  "securityDefinitions" : {
    "ReadConfigToken" : {
      "description" : "API token with **Read configuration** permission.\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    },
    "WriteConfigToken" : {
      "description" : "API token with **Write configuration** permission.\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    },
    "CaptureRequestDataToken" : {
      "description" : "API token with **Capture request data** permission.\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    },
    "DataPrivacy" : {
      "description" : "API token with **DataPrivacy** permission.\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    },
    "DssFileManagement" : {
      "description" : "API token with **Mobile symbolication file management** permission.\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "ConfigurationMetadata" : {
      "type" : "object",
      "properties" : {
        "configurationVersions" : {
          "type" : "array",
          "description" : "A Sorted list of the version numbers of the configuration.",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "clusterVersion" : {
          "type" : "string",
          "description" : "Dynatrace server version."
        }
      },
      "description" : "Metadata useful for debugging"
    },
    "DataPrivacyAndSecurity" : {
      "type" : "object",
      "required" : [ "maskIpAddressesAndGpsCoordinates", "maskPersonalDataInUris", "maskUserActionNames" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "maskIpAddressesAndGpsCoordinates" : {
          "type" : "boolean",
          "description" : "Mask IP addresses and GPS coordinates enabled/disabled."
        },
        "maskUserActionNames" : {
          "type" : "boolean",
          "description" : "Mask user action names (Web applications only) enabled/disabled."
        },
        "maskPersonalDataInUris" : {
          "type" : "boolean",
          "description" : "Mask personal data in URIs enabled/disabled."
        },
        "logAuditEvents" : {
          "type" : "boolean",
          "description" : "The audit logging is enabled (`true`) or disabled (`false`)."
        }
      }
    },
    "ConstraintViolation" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "readOnly" : true
        },
        "parameterLocation" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PATH", "PAYLOAD_BODY", "QUERY" ]
        },
        "location" : {
          "type" : "string"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "constraintViolations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConstraintViolation"
          }
        }
      }
    },
    "ErrorEnvelope" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "$ref" : "#/definitions/Error"
        }
      }
    },
    "EntityShortRepresentation" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The ID of the Dynatrace entity."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the Dynatrace entity.",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the Dynatrace entity.",
          "readOnly" : true
        }
      },
      "description" : "The short representation of a Dynatrace entity.",
      "example" : {
        "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
        "name" : "Dynatrace entity",
        "description" : "Dynatrace entity for the REST API example"
      }
    },
    "StubList" : {
      "type" : "object",
      "required" : [ "values" ],
      "properties" : {
        "values" : {
          "type" : "array",
          "description" : "An ordered list of short representations of Dynatrace entities.",
          "items" : {
            "$ref" : "#/definitions/EntityShortRepresentation"
          }
        }
      },
      "description" : "An ordered list of short representations of Dynatrace entities.",
      "example" : {
        "values" : [ {
          "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
          "name" : "Dynatrace entity 1",
          "description" : "Dynatrace entity 1 for the REST API example"
        }, {
          "id" : "ee70f7d3-9a4e-4f5f-94d2-c9d6156f1618",
          "name" : "Dynatrace entity 2"
        }, {
          "id" : "8cdabe77-9e1a-4be8-b3df-269dd6fa9d7f"
        } ]
      }
    },
    "AlertingCustomEventFilter" : {
      "type" : "object",
      "properties" : {
        "customTitleFilter" : {
          "description" : "The filter for the title of the custom event.",
          "$ref" : "#/definitions/AlertingCustomTextFilter"
        },
        "customDescriptionFilter" : {
          "description" : "The filter for the description of the custom event.",
          "$ref" : "#/definitions/AlertingCustomTextFilter"
        }
      },
      "description" : "Configuration of a custom event filter. \n\nFilters custom events by title or description. If both specified, the AND logic applies."
    },
    "AlertingCustomTextFilter" : {
      "type" : "object",
      "required" : [ "caseInsensitive", "enabled", "negate", "operator", "value" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The filter is enabled (`true`) or disabled (`false`)."
        },
        "value" : {
          "type" : "string",
          "description" : "The value to compare to.",
          "minLength" : 1
        },
        "operator" : {
          "type" : "string",
          "description" : "Operator of the comparison. \n\n You can reverse it by setting **negate** to `true`.",
          "enum" : [ "BEGINS_WITH", "CONTAINS", "CONTAINS_REGEX", "ENDS_WITH", "EQUALS" ]
        },
        "negate" : {
          "type" : "boolean",
          "description" : "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**."
        },
        "caseInsensitive" : {
          "type" : "boolean",
          "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\n If not set, then `false` is used, making the condition case sensitive."
        }
      },
      "description" : "Configuration of a matching filter."
    },
    "AlertingEventTypeFilter" : {
      "type" : "object",
      "properties" : {
        "predefinedEventFilter" : {
          "description" : "The predefined event filter. \n\n If several event filters specified, the OR logic applies.",
          "$ref" : "#/definitions/AlertingPredefinedEventFilter"
        },
        "customEventFilter" : {
          "description" : "The custom event filter. \n\n If several event filters specified, the OR logic applies.",
          "$ref" : "#/definitions/AlertingCustomEventFilter"
        }
      },
      "description" : "Configuration of the event filter for the alerting profile. \n\nYou have two mutually exclusive options: \n* Select an event type from the list of the predefined events. Specify it in the **predefinedEventFilter** field. \n* Set a rule for custom events. Specify it in the **customEventFilter** field."
    },
    "AlertingPredefinedEventFilter" : {
      "type" : "object",
      "required" : [ "eventType", "negate" ],
      "properties" : {
        "eventType" : {
          "type" : "string",
          "description" : "The type of the predefined event.",
          "enum" : [ "APPLICATION_ERROR_RATE_INCREASED", "APPLICATION_SLOWDOWN", "APPLICATION_UNEXPECTED_HIGH_LOAD", "APPLICATION_UNEXPECTED_LOW_LOAD", "AWS_LAMBDA_HIGH_ERROR_RATE", "CUSTOM_APPLICATION_ERROR_RATE_INCREASED", "CUSTOM_APPLICATION_SLOWDOWN", "CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD", "CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD", "CUSTOM_APP_CRASH_RATE_INCREASED", "DATABASE_CONNECTION_FAILURE", "DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION", "DATA_CENTER_SERVICE_UNAVAILABLE", "EBS_VOLUME_HIGH_LATENCY", "EC2_HIGH_CPU", "ELB_HIGH_BACKEND_ERROR_RATE", "ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION", "ENTERPRISE_APPLICATION_UNAVAILABLE", "ESXI_GUEST_ACTIVE_SWAP_WAIT", "ESXI_GUEST_CPU_LIMIT_REACHED", "ESXI_HOST_CPU_SATURATION", "ESXI_HOST_DATASTORE_LOW_DISK_SPACE", "ESXI_HOST_DISK_QUEUE_SLOW", "ESXI_HOST_DISK_SLOW", "ESXI_HOST_MEMORY_SATURATION", "ESXI_HOST_NETWORK_PROBLEMS", "ESXI_HOST_OVERLOADED_STORAGE", "ESXI_VM_IMPACT_HOST_CPU_SATURATION", "ESXI_VM_IMPACT_HOST_MEMORY_SATURATION", "EXTERNAL_SYNTHETIC_TEST_OUTAGE", "EXTERNAL_SYNTHETIC_TEST_SLOWDOWN", "HOST_OF_SERVICE_UNAVAILABLE", "HTTP_CHECK_GLOBAL_OUTAGE", "HTTP_CHECK_LOCAL_OUTAGE", "HTTP_CHECK_TEST_LOCATION_SLOWDOWN", "MOBILE_APPLICATION_ERROR_RATE_INCREASED", "MOBILE_APPLICATION_SLOWDOWN", "MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD", "MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD", "MOBILE_APP_CRASH_RATE_INCREASED", "MONITORING_UNAVAILABLE", "OSI_DISK_LOW_INODES", "OSI_GRACEFULLY_SHUTDOWN", "OSI_HIGH_CPU", "OSI_HIGH_MEMORY", "OSI_LOW_DISK_SPACE", "OSI_NIC_DROPPED_PACKETS_HIGH", "OSI_NIC_ERRORS_HIGH", "OSI_NIC_UTILIZATION_HIGH", "OSI_SLOW_DISK", "OSI_UNEXPECTEDLY_UNAVAILABLE", "PGI_OF_SERVICE_UNAVAILABLE", "PGI_UNAVAILABLE", "PG_LOW_INSTANCE_COUNT", "PROCESS_CRASHED", "PROCESS_HIGH_GC_ACTIVITY", "PROCESS_MEMORY_RESOURCE_EXHAUSTED", "PROCESS_NA_HIGH_CONN_FAIL_RATE", "PROCESS_NA_HIGH_LOSS_RATE", "PROCESS_THREADS_RESOURCE_EXHAUSTED", "RDS_HIGH_CPU", "RDS_HIGH_LATENCY", "RDS_LOW_MEMORY", "RDS_LOW_STORAGE_SPACE", "RDS_OF_SERVICE_UNAVAILABLE", "RDS_RESTART_SEQUENCE", "SERVICE_ERROR_RATE_INCREASED", "SERVICE_SLOWDOWN", "SERVICE_UNEXPECTED_HIGH_LOAD", "SERVICE_UNEXPECTED_LOW_LOAD", "SYNTHETIC_GLOBAL_OUTAGE", "SYNTHETIC_LOCAL_OUTAGE", "SYNTHETIC_TEST_LOCATION_SLOWDOWN" ]
        },
        "negate" : {
          "type" : "boolean",
          "description" : "The alert triggers when the problem of specified severity arises while the specified event **is** happening (`false`) or while the specified event is **not** happening (`true`). \n\n For example, if you chose the Slowdown (`PERFORMANCE`) severity and Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event with **negate** set to `true`, the alerting profile will trigger only when the slowdown problem is raised while there is no unexpected high traffic event. \n\nConsider the following use case as an example. The Slowdown (`PERFORMANCE`) severity rule is set. Depending on the configuration of the event filter (Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event is used as an example), the behavior of the alerting profile is one of the following:* **negate** is set to `false`: The alert triggers when the slowdown problem is raised while unexpected high traffic event is happening. \n* **negate** is set to `true`: The alert triggers when the slowdown problem is raised while there is no unexpected high traffic event. \n\n* no event rule is set: The alert triggers when the slowdown problem is raised, regardless of any events."
        }
      },
      "description" : "Configuration of a predefined event filter."
    },
    "AlertingProfile" : {
      "type" : "object",
      "required" : [ "displayName" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "12345678-abcd-1234-abcd-1234567890ab",
          "description" : "The ID of the alerting profile."
        },
        "displayName" : {
          "type" : "string",
          "description" : "The name of the alerting profile, displayed in the UI.",
          "minLength" : 1,
          "maxLength" : 100
        },
        "rules" : {
          "type" : "array",
          "description" : "A list of severity rules. \n\n The rules are evaluated from top to bottom. The first matching rule applies and further evaluation stops.\n\n If you specify both severity rule and event filter, the AND logic applies.",
          "items" : {
            "$ref" : "#/definitions/AlertingProfileSeverityRule"
          },
          "maxItems" : 20,
          "minItems" : 0
        },
        "managementZoneId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the management zone to which the alerting profile applies."
        },
        "eventTypeFilters" : {
          "type" : "array",
          "description" : "The list of event filters. \n\n If several filters are specified, the OR logic applies.\n\n If you specify both severity rule and event filter, the AND logic applies.",
          "items" : {
            "$ref" : "#/definitions/AlertingEventTypeFilter"
          },
          "maxItems" : 20,
          "minItems" : 0
        }
      },
      "description" : "Configuration of an alerting profile.",
      "example" : {
        "id" : "12345678-abcd-1234-abcd-1234567890ab",
        "displayName" : "sampleAlertingProfile",
        "managementZoneId" : 1,
        "rules" : [ {
          "severityLevel" : "AVAILABILITY",
          "tagFilter" : {
            "includeMode" : "INCLUDE_ALL",
            "tagFilters" : [ {
              "context" : "AWS",
              "key" : "tagKey",
              "value" : "tagValue"
            } ]
          },
          "delayInMinutes" : 60
        } ],
        "eventTypeFilters" : [ {
          "predefinedEventFilter" : {
            "eventType" : "OSI_HIGH_CPU",
            "negate" : true
          }
        }, {
          "customEventFilter" : {
            "customTitleFilter" : {
              "enabled" : true,
              "value" : "filterValue",
              "operator" : "EQUALS",
              "negate" : false,
              "caseInsensitive" : true
            },
            "customDescriptionFilter" : {
              "enabled" : false,
              "value" : "filterValue",
              "operator" : "CONTAINS",
              "negate" : true,
              "caseInsensitive" : false
            }
          }
        } ]
      }
    },
    "AlertingProfileSeverityRule" : {
      "type" : "object",
      "required" : [ "delayInMinutes", "severityLevel", "tagFilter" ],
      "properties" : {
        "severityLevel" : {
          "type" : "string",
          "description" : "The severity level to trigger the alert.",
          "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
        },
        "tagFilter" : {
          "description" : "A list of tags, defining the applicable monitored entities. \n\n If no tags specified, the alerting profile applies to all monitored entities.",
          "$ref" : "#/definitions/AlertingProfileTagFilter"
        },
        "delayInMinutes" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Send a notification if a problem remains open longer than *X* minutes.",
          "minimum" : 0,
          "maximum" : 10000
        }
      },
      "description" : "A severity rule of the alerting profile. \n\n A severity rule defines the level of severity that must be met before an alert is sent our for a detected problem. Additionally it restricts the alerting to certain monitored entities."
    },
    "AlertingProfileTagFilter" : {
      "type" : "object",
      "required" : [ "includeMode" ],
      "properties" : {
        "includeMode" : {
          "type" : "string",
          "description" : "The filtering mode: \n* `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags. \n* `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags. \n* `NONE`: The rule applies to all monitored entities.",
          "enum" : [ "INCLUDE_ALL", "INCLUDE_ANY", "NONE" ]
        },
        "tagFilters" : {
          "type" : "array",
          "description" : "A list of required tags.",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/TagFilter"
          }
        }
      },
      "description" : "Configuration of the tag filtering of the alerting profile."
    },
    "TagFilter" : {
      "type" : "object",
      "required" : [ "context", "key" ],
      "properties" : {
        "context" : {
          "type" : "string",
          "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\nCustom tags use the `CONTEXTLESS` value.",
          "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES" ]
        },
        "key" : {
          "type" : "string",
          "description" : "The key of the tag. \n\nCustom tags have the tag value here.",
          "minLength" : 1
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the tag. \n\n Not applicable to custom tags."
        }
      },
      "description" : "A tag-based filter of monitored entities."
    },
    "ApplicationAnomalyDetectionConfig" : {
      "type" : "object",
      "required" : [ "failureRateIncrease", "responseTimeDegradation", "trafficDrop", "trafficSpike" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "responseTimeDegradation" : {
          "description" : "How to detect response time degradation.",
          "$ref" : "#/definitions/ResponseTimeDegradationDetectionConfig"
        },
        "trafficDrop" : {
          "description" : "How to detect traffic drops.",
          "$ref" : "#/definitions/TrafficDropDetectionConfig"
        },
        "trafficSpike" : {
          "description" : "How to detect traffic spikes.",
          "$ref" : "#/definitions/TrafficSpikeDetectionConfig"
        },
        "failureRateIncrease" : {
          "description" : "How to detect failure rate increase.",
          "$ref" : "#/definitions/FailureRateIncreaseDetectionConfig"
        }
      },
      "description" : "The configuration of anomaly detection for applications.",
      "example" : {
        "responseTimeDegradation" : {
          "detectionMode" : "DETECT_AUTOMATICALLY",
          "automaticDetection" : {
            "responseTimeDegradationMilliseconds" : 250,
            "responseTimeDegradationPercent" : 90,
            "slowestResponseTimeDegradationMilliseconds" : 500,
            "slowestResponseTimeDegradationPercent" : 200,
            "loadThreshold" : "ONE_REQUEST_PER_MINUTE"
          }
        },
        "trafficDrop" : {
          "enabled" : true,
          "trafficDropPercent" : 95
        },
        "trafficSpike" : {
          "enabled" : false
        },
        "failureRateIncrease" : {
          "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
          "thresholds" : {
            "threshold" : 10,
            "sensitivity" : "LOW"
          }
        }
      }
    },
    "FailureRateIncreaseAutodetectionConfig" : {
      "type" : "object",
      "required" : [ "failingServiceCallPercentageIncreaseAbsolute", "failingServiceCallPercentageIncreaseRelative" ],
      "properties" : {
        "failingServiceCallPercentageIncreaseAbsolute" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Absolute increase of failing service calls to trigger an alert, %.",
          "minimum" : 0,
          "maximum" : 1000
        },
        "failingServiceCallPercentageIncreaseRelative" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Relative increase of failing service calls to trigger an alert, %.",
          "minimum" : 0,
          "maximum" : 1000
        }
      },
      "description" : "Parameters of failure rate increase auto-detection. Required if **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\nThe absolute and relative thresholds **both** must exceed to trigger an alert. \n\nExample: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be: \nAbsolute: 1.5% + **1%** = 2.5% \nRelative: 1.5% + 1.5% * **50%** = 2.25%"
    },
    "FailureRateIncreaseDetectionConfig" : {
      "type" : "object",
      "required" : [ "detectionMode" ],
      "properties" : {
        "detectionMode" : {
          "type" : "string",
          "description" : "How to detect failure rate increase: automatically, or based on fixed thresholds, or do not detect.",
          "enum" : [ "DETECT_AUTOMATICALLY", "DETECT_USING_FIXED_THRESHOLDS", "DONT_DETECT" ]
        },
        "automaticDetection" : {
          "description" : "Parameters of automatic failure rate increase detection. \n\n Required if **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\nThe absolute and relative thresholds **both** must be exceeded to trigger an alert. \n\nExample: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and you set a relative increase of 50%, the thresholds will be: \nAbsolute: 1.5% + **1%** = 2.5% \nRelative: 1.5% + 1.5% * **50%** = 2.25%",
          "$ref" : "#/definitions/FailureRateIncreaseAutodetectionConfig"
        },
        "thresholds" : {
          "description" : "Fixed thresholds for failure rate increase detection.  \n\n Required if the **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable otherwise.",
          "$ref" : "#/definitions/FailureRateIncreaseThresholdConfig"
        }
      },
      "description" : "Configuration of failure rate increase detection."
    },
    "FailureRateIncreaseThresholdConfig" : {
      "type" : "object",
      "required" : [ "sensitivity", "threshold" ],
      "properties" : {
        "threshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Failure rate during any 5-minute period to trigger an alert, %.",
          "minimum" : 0,
          "maximum" : 1000
        },
        "sensitivity" : {
          "type" : "string",
          "description" : "Sensitivity of the threshold. \n\nWith `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts. \n\nWith `high` sensitivity, no statistical confidence is used. Each violation triggers alert.",
          "enum" : [ "HIGH", "LOW", "MEDIUM" ]
        }
      },
      "description" : "Fixed thresholds for failure rate increase detection. \n\n Required if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable otherwise."
    },
    "ResponseTimeDegradationAutodetectionConfig" : {
      "type" : "object",
      "required" : [ "loadThreshold", "responseTimeDegradationMilliseconds", "responseTimeDegradationPercent", "slowestResponseTimeDegradationMilliseconds", "slowestResponseTimeDegradationPercent" ],
      "properties" : {
        "responseTimeDegradationMilliseconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if the response time degrades by more than *X* milliseconds.",
          "minimum" : 0,
          "maximum" : 100000
        },
        "responseTimeDegradationPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if the response time degrades by more than *X* %.",
          "minimum" : 0,
          "maximum" : 1000
        },
        "slowestResponseTimeDegradationMilliseconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if the response time of the slowest 10% degrades by more than *X* milliseconds.",
          "minimum" : 0,
          "maximum" : 100000
        },
        "slowestResponseTimeDegradationPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if the response time of the slowest 10% degrades by more than *X* %.",
          "minimum" : 0,
          "maximum" : 1000
        },
        "loadThreshold" : {
          "type" : "string",
          "description" : "Minimal service load to detect response time degradation. \n\n Response time degradation of services with smaller load won't trigger alerts.",
          "enum" : [ "FIFTEEN_REQUESTS_PER_MINUTE", "FIVE_REQUESTS_PER_MINUTE", "ONE_REQUEST_PER_MINUTE", "TEN_REQUESTS_PER_MINUTE" ]
        }
      },
      "description" : "Parameters of the response time degradation auto-detection. Required if the **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\nViolation of **any** criterion triggers an alert."
    },
    "ResponseTimeDegradationDetectionConfig" : {
      "type" : "object",
      "required" : [ "detectionMode" ],
      "properties" : {
        "detectionMode" : {
          "type" : "string",
          "description" : "How to detect response time degradation: automatically, or based on fixed thresholds, or do not detect.",
          "enum" : [ "DETECT_AUTOMATICALLY", "DETECT_USING_FIXED_THRESHOLDS", "DONT_DETECT" ]
        },
        "automaticDetection" : {
          "description" : "Parameters of automatic response time degradation detection. \n\nRequired if **detectionMode** is `DETECT_AUTOMATICALLY`. Not applicable otherwise. \n\nViolation of **any** criterion triggers an alert.",
          "$ref" : "#/definitions/ResponseTimeDegradationAutodetectionConfig"
        },
        "thresholds" : {
          "description" : "Fixed thresholds for response time degradation detection. \n\n Required if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable otherwise.",
          "$ref" : "#/definitions/ResponseTimeDegradationThresholdConfig"
        }
      },
      "description" : "Configuration of response time degradation detection."
    },
    "ResponseTimeDegradationThresholdConfig" : {
      "type" : "object",
      "required" : [ "loadThreshold", "responseTimeThresholdMilliseconds", "sensitivity", "slowestResponseTimeThresholdMilliseconds" ],
      "properties" : {
        "responseTimeThresholdMilliseconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Response time during any 5-minute period to trigger an alert, in milliseconds.",
          "minimum" : 0,
          "maximum" : 100000
        },
        "slowestResponseTimeThresholdMilliseconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds.",
          "minimum" : 0,
          "maximum" : 100000
        },
        "loadThreshold" : {
          "type" : "string",
          "description" : "Minimal service load to detect response time degradation. \n\n Response time degradation of services with smaller load won't trigger alerts.",
          "enum" : [ "FIFTEEN_REQUESTS_PER_MINUTE", "FIVE_REQUESTS_PER_MINUTE", "ONE_REQUEST_PER_MINUTE", "TEN_REQUESTS_PER_MINUTE" ]
        },
        "sensitivity" : {
          "type" : "string",
          "description" : "Sensitivity of the threshold. \n\nWith `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts. \n\nWith `high` sensitivity, no statistical confidence is used. Each violation triggers an alert.",
          "enum" : [ "HIGH", "LOW", "MEDIUM" ]
        }
      },
      "description" : "Fixed thresholds for response time degradation detection. \n\n Required if **detectionMode** is `DETECT_USING_FIXED_THRESHOLDS`. Not applicable otherwise."
    },
    "TrafficDropDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "trafficDropPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if the observed traffic is less than *X* % of the expected value.",
          "minimum" : 0,
          "maximum" : 100
        }
      },
      "description" : "The configuration of traffic drops detection."
    },
    "TrafficSpikeDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "trafficSpikePercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if the observed traffic is more than *X* % of the expected value.",
          "minimum" : 100,
          "maximum" : 1000
        }
      },
      "description" : "The cofiguration of traffic spikes detection."
    },
    "AwsAnomalyDetectionConfig" : {
      "type" : "object",
      "required" : [ "elbHighConnectionErrorsDetection", "lambdaHighErrorRateDetection", "rdsHighCpuDetection", "rdsHighMemoryDetection", "rdsHighWriteReadLatencyDetection", "rdsLowStorageDetection", "rdsRestartsSequenceDetection" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "rdsHighCpuDetection" : {
          "description" : "How to detect high CPU utilization on RDS.",
          "$ref" : "#/definitions/RdsHighCpuDetectionConfig"
        },
        "rdsHighWriteReadLatencyDetection" : {
          "description" : "How to detect high RDS write/read latency.",
          "$ref" : "#/definitions/RdsHighWriteReadLatencyDetectionConfig"
        },
        "rdsLowStorageDetection" : {
          "description" : "How to detect low free storage space on RDS.",
          "$ref" : "#/definitions/RdsLowStorageDetectionConfig"
        },
        "rdsHighMemoryDetection" : {
          "description" : "How to detect DRS running out of memory.",
          "$ref" : "#/definitions/RdsHighMemoryDetectionConfig"
        },
        "elbHighConnectionErrorsDetection" : {
          "description" : "How to detect high number of backend connection errors on ELB.",
          "$ref" : "#/definitions/ElbHighConnectionErrorsDetectionConfig"
        },
        "rdsRestartsSequenceDetection" : {
          "description" : "How to detect restarts sequence on RDS.",
          "$ref" : "#/definitions/RdsRestartsSequenceDetectionConfig"
        },
        "lambdaHighErrorRateDetection" : {
          "description" : "How to detect AWS Lambda high error rate.",
          "$ref" : "#/definitions/LambdaHighErrorRateDetectionConfig"
        },
        "ec2CandidateCpuSaturationDetection" : {
          "description" : "How to detect high CPU saturation on EC2 monitoring candidate. If null, then these settings won't be changed.",
          "$ref" : "#/definitions/Ec2CandidateCpuSaturationDetectionConfig"
        }
      },
      "description" : "The configuration of anomaly detection for AWS.",
      "example" : {
        "metadata" : {
          "configurationVersions" : [ 4, 2 ],
          "clusterVersion" : "0.0.0."
        },
        "rdsHighCpuDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "cpuUsagePercentage" : 99
          }
        },
        "rdsHighWriteReadLatencyDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "writeReadLatency" : 800
          }
        },
        "rdsLowStorageDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "freeStoragePercentage" : 7
          }
        },
        "rdsHighMemoryDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "freeMemory" : 96.99,
            "swapUsage" : 5.5
          }
        },
        "elbHighConnectionErrorsDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "connectionErrorsPerMinute" : 4
          }
        },
        "rdsRestartsSequenceDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "restartsPerMinute" : 3
          }
        },
        "lambdaHighErrorRateDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "failedInvocationsRate" : 2
          }
        },
        "ec2CandidateCpuSaturationDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "cpuUsagePercentage" : 98
          }
        }
      }
    },
    "Ec2CandidateCpuSaturationDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high CPU saturation on EC2 monitoring candidate. If not set, automatic mode is used.",
          "$ref" : "#/definitions/Ec2CandidateCpuSaturationThresholds"
        }
      },
      "description" : "The configuration of the high CPU saturation on EC2 without installed agent (monitoring candidate). If null, then this configuration won't be changed."
    },
    "Ec2CandidateCpuSaturationThresholds" : {
      "type" : "object",
      "required" : [ "cpuUsagePercentage" ],
      "properties" : {
        "cpuUsagePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for high CPU saturation on EC2 monitoring candidate. If not set, automatic mode is used."
    },
    "ElbHighConnectionErrorsDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high number of backend connection errors on ELB. If not set, automatic mode is used.",
          "$ref" : "#/definitions/ElbHighConnectionErrorsThresholds"
        }
      },
      "description" : "The configuration of the high number of backend connection errors on ELB detection."
    },
    "ElbHighConnectionErrorsThresholds" : {
      "type" : "object",
      "required" : [ "connectionErrorsPerMinute" ],
      "properties" : {
        "connectionErrorsPerMinute" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if number of backend connection errors is higher than *X* per minute in 3 out of 5 samples.",
          "minimum" : 1
        }
      },
      "description" : "Custom thresholds for high number of backend connection errors on ELB. If not set, automatic mode is used."
    },
    "LambdaHighErrorRateDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for AWS Lambda high error rate. If not set, automatic mode is used.",
          "$ref" : "#/definitions/LambdaHighErrorRateThresholds"
        }
      },
      "description" : "The configuration of the AWS Lambda high error rate detection."
    },
    "LambdaHighErrorRateThresholds" : {
      "type" : "object",
      "required" : [ "failedInvocationsRate" ],
      "properties" : {
        "failedInvocationsRate" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if failed invocations rate is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 0,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for AWS Lambda high error rate. If not set, automatic mode is used."
    },
    "RdsHighCpuDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high CPU utilization on RDS. If not set, automatic mode is used.",
          "$ref" : "#/definitions/RdsHighCpuThresholds"
        }
      },
      "description" : "The configuration of the high CPU utilization on RDS detection."
    },
    "RdsHighCpuThresholds" : {
      "type" : "object",
      "required" : [ "cpuUsagePercentage" ],
      "properties" : {
        "cpuUsagePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for high CPU utilization on RDS. If not set, automatic mode is used."
    },
    "RdsHighLatencyThresholds" : {
      "type" : "object",
      "required" : [ "writeReadLatency" ],
      "properties" : {
        "writeReadLatency" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if read/write latency is higher than *X* milliseconds in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        }
      },
      "description" : "Custom thresholds for high RDS write/read latency. If not set, automatic mode is used"
    },
    "RdsHighMemoryDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for RDS running out of memory. If not set, automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert.",
          "$ref" : "#/definitions/RdsHighMemoryThresholds"
        }
      },
      "description" : "The configuration of RDS running out of memory detection."
    },
    "RdsHighMemoryThresholds" : {
      "type" : "object",
      "required" : [ "freeMemory", "swapUsage" ],
      "properties" : {
        "freeMemory" : {
          "type" : "number",
          "description" : "Freeable memory is lower than *X* Megabytes in 3 out of 5 samples.",
          "minimum" : 0.01,
          "maximum" : 1000,
          "exclusiveMinimum" : false
        },
        "swapUsage" : {
          "type" : "number",
          "description" : "Swap usage is higher than *X* Gigabytes in 3 out of 5 samples.",
          "minimum" : 0.01,
          "maximum" : 1000,
          "exclusiveMinimum" : false
        }
      },
      "description" : "Custom thresholds for RDS running out of memory. If not set, automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert."
    },
    "RdsHighWriteReadLatencyDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high RDS write/read latency. If not set, automatic mode is used.",
          "$ref" : "#/definitions/RdsHighLatencyThresholds"
        }
      },
      "description" : "The configuration of the high RDS write/read latency detection."
    },
    "RdsLowStorageDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for low free storage space on RDS. If not set, automatic mode is used.",
          "$ref" : "#/definitions/RdsLowStorageThresholds"
        }
      },
      "description" : "The configuration of the low free storage space on RDS detection."
    },
    "RdsLowStorageThresholds" : {
      "type" : "object",
      "required" : [ "freeStoragePercentage" ],
      "properties" : {
        "freeStoragePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if free storage space divided by allocated storage is lower than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for low free storage space on RDS. If not set, automatic mode is used."
    },
    "RdsRestartsSequenceDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for restarts sequence on RDS. If not set, automatic mode is used.",
          "$ref" : "#/definitions/RdsRestartsThresholds"
        }
      },
      "description" : "The configuration of the restarts sequence on RDS detection."
    },
    "RdsRestartsThresholds" : {
      "type" : "object",
      "required" : [ "restartsPerMinute" ],
      "properties" : {
        "restartsPerMinute" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if number of restarts is *X* per minute or higher in 3 out of 20 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for restarts sequence on RDS. If not set, automatic mode is used."
    },
    "DatabaseAnomalyDetectionConfig" : {
      "type" : "object",
      "required" : [ "databaseConnectionFailureCount", "failureRateIncrease", "responseTimeDegradation" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "responseTimeDegradation" : {
          "description" : "How to detect response time degradation.",
          "$ref" : "#/definitions/ResponseTimeDegradationDetectionConfig"
        },
        "failureRateIncrease" : {
          "description" : "How to detect failure rate increase.",
          "$ref" : "#/definitions/FailureRateIncreaseDetectionConfig"
        },
        "databaseConnectionFailureCount" : {
          "description" : "How to detect database connection failures.",
          "$ref" : "#/definitions/DatabaseConnectionFailureDetectionConfig"
        }
      },
      "description" : "The configuration of the anomaly detection for database services.",
      "example" : {
        "responseTimeDegradation" : {
          "detectionMode" : "DETECT_AUTOMATICALLY",
          "automaticDetection" : {
            "responseTimeDegradationMilliseconds" : 250,
            "responseTimeDegradationPercent" : 90,
            "slowestResponseTimeDegradationMilliseconds" : 500,
            "slowestResponseTimeDegradationPercent" : 200,
            "loadThreshold" : "ONE_REQUEST_PER_MINUTE"
          }
        },
        "failureRateIncrease" : {
          "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
          "thresholds" : {
            "threshold" : 10,
            "sensitivity" : "LOW"
          }
        },
        "databaseConnectionFailureCount" : {
          "enabled" : "true",
          "connectionFailsCount" : 5,
          "timePeriodMinutes" : 5
        }
      }
    },
    "DatabaseConnectionFailureDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "connectionFailsCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of failed database connections during any **timePeriodMinutes** minutes period to trigger an alert.",
          "minimum" : 1,
          "maximum" : 9999999
        },
        "timePeriodMinutes" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The *X* minutes time period during which the **connectionFailsCount** is evaluated.",
          "minimum" : 1,
          "maximum" : 15
        }
      },
      "description" : "Parameters of the failed database connections detection. \n\nThe alert is triggered when failed connections number exceeds **connectionFailsCount** during any **timePeriodMinutes** minutes period."
    },
    "DiskEventAnomalyDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled", "metric", "name", "samples", "threshold", "violatingSamples" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the disk event rule.",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the disk event rule.",
          "minLength" : 1,
          "maxLength" : 49
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Disk event rule enabled/disabled."
        },
        "metric" : {
          "type" : "string",
          "description" : "The metric to monitor.",
          "enum" : [ "LOW_DISK_SPACE", "LOW_INODES", "READ_TIME_EXCEEDING", "WRITE_TIME_EXCEEDING" ]
        },
        "threshold" : {
          "type" : "number",
          "format" : "double",
          "description" : "The threshold to trigger disk event. \n\n * A percentage for `LowDiskSpace` or `LowInodes` metrics. \n * In milliseconds for `ReadTimeExceeding` or `WriteTimeExceeding` metrics.",
          "minimum" : 0,
          "maximum" : 1000
        },
        "samples" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "The number of samples to evaluate.",
          "minimum" : 3,
          "maximum" : 20
        },
        "violatingSamples" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 8,
          "description" : "The number of samples that must violate the threshold to trigger an event. Must not exceed the number of evaluated samples.",
          "minimum" : 1
        },
        "diskNameFilter" : {
          "description" : "Narrows the rule usage down to disks, matching the specified criteria.",
          "$ref" : "#/definitions/DiskNameFilter"
        },
        "tagFilters" : {
          "type" : "array",
          "description" : "Narrows the rule usage down to the hosts matching the specified tags.",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/TagFilter"
          }
        }
      }
    },
    "DiskNameFilter" : {
      "type" : "object",
      "required" : [ "operator", "value" ],
      "properties" : {
        "operator" : {
          "type" : "string",
          "description" : "Comparison operator.",
          "enum" : [ "CONTAINS", "DOES_NOT_CONTAIN", "DOES_NOT_EQUAL", "DOES_NOT_START_WITH", "EQUALS", "STARTS_WITH" ]
        },
        "value" : {
          "type" : "string",
          "description" : "Value to compare to.",
          "minLength" : 1,
          "maxLength" : 100
        }
      },
      "description" : "Narrows the rule usage down to disks, matching the specified criteria."
    },
    "ConnectionLostDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled", "enabledOnGracefulShutdowns" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "enabledOnGracefulShutdowns" : {
          "type" : "boolean",
          "description" : "Alert (`true`) on graceful host shutdowns."
        }
      },
      "description" : "Configuration of lost connection detection."
    },
    "DiskLowInodesDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for low disk inodes number. If not set, automatic mode is used.",
          "$ref" : "#/definitions/DiskLowInodesThresholds"
        }
      },
      "description" : "Configuration of low disk inodes number detection."
    },
    "DiskLowInodesThresholds" : {
      "type" : "object",
      "required" : [ "freeInodesPercentage" ],
      "properties" : {
        "freeInodesPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if percentage of available inodes is lower than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for low disk inodes number. If not set, automatic mode is used."
    },
    "DiskLowSpaceDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for low disk space. If not set, automatic mode is used.",
          "$ref" : "#/definitions/DiskLowSpaceThresholds"
        }
      },
      "description" : "Configuration of low disk space detection."
    },
    "DiskLowSpaceThresholds" : {
      "type" : "object",
      "required" : [ "freeSpacePercentage" ],
      "properties" : {
        "freeSpacePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if free disk space is lower than *X*% in 3 out of 5 samples.",
          "minimum" : 0,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for low disk space. If not set, automatic mode is used."
    },
    "DiskSlowWriteAndReadsThresholds" : {
      "type" : "object",
      "required" : [ "writeAndReadTime" ],
      "properties" : {
        "writeAndReadTime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if disk read/write time is higher than *X* milliseconds in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        }
      },
      "description" : "Custom thresholds for slow running disks. If not set, the automatic mode is used."
    },
    "DiskSlowWritesAndReadsDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for slow running disks. If not set, automatic mode is used.",
          "$ref" : "#/definitions/DiskSlowWriteAndReadsThresholds"
        }
      },
      "description" : "Configuration of slow running disks detection."
    },
    "HighCpuSaturationDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high CPU saturation. If not set, automatic mode is used.",
          "$ref" : "#/definitions/HighCpuSaturationThresholds"
        }
      },
      "description" : "Configuration of high CPU saturation detection"
    },
    "HighCpuSaturationThresholds" : {
      "type" : "object",
      "required" : [ "cpuSaturation" ],
      "properties" : {
        "cpuSaturation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if CPU usage is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for high CPU saturation. If not set then the automatic mode is used."
    },
    "HighGcActivityDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high GC activity. If not set, automatic mode is used. \n\n Meeting **any** of these conditions triggers an alert.",
          "$ref" : "#/definitions/HighGcActivityThresholds"
        }
      },
      "description" : "Configuration of high Garbage Collector activity detection."
    },
    "HighGcActivityThresholds" : {
      "type" : "object",
      "required" : [ "gcSuspensionPercentage", "gcTimePercentage" ],
      "properties" : {
        "gcTimePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "GC time is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "gcSuspensionPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "GC suspension is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for high GC activity. If not set, automatic mode is used. \n\n Meeting **any** of these conditions triggers an alert."
    },
    "HighMemoryDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high memory usage. If not set, automatic mode is used.  \n\n **Both** conditions must be met to trigger an alert.",
          "$ref" : "#/definitions/HighMemoryThresholds"
        }
      },
      "description" : "Configuration of high memory usage detection."
    },
    "HighMemoryThresholds" : {
      "type" : "object",
      "required" : [ "pageFaultsPerSecondNonWindows", "pageFaultsPerSecondWindows", "usedMemoryPercentageNonWindows", "usedMemoryPercentageWindows" ],
      "properties" : {
        "pageFaultsPerSecondWindows" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Memory page fault rate is higher than *X* faults per second on Windows.",
          "minimum" : 1,
          "maximum" : 10000
        },
        "usedMemoryPercentageWindows" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Memory usage is higher than *X*% on Windows.",
          "minimum" : 1,
          "maximum" : 100
        },
        "pageFaultsPerSecondNonWindows" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Memory page fault rate is higher than *X* faults per second on Linux.",
          "minimum" : 1,
          "maximum" : 10000
        },
        "usedMemoryPercentageNonWindows" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Memory usage is higher than *X*% on Linux.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for high memory usage. If not set then the automatic mode is used. \n\n **Both** conditions must be met to trigger an alert."
    },
    "HighNetworkDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high network utilization. If not set, automatic mode is used.",
          "$ref" : "#/definitions/HighNetworkThresholds"
        }
      },
      "description" : "Configuration of high network utilization detection."
    },
    "HighNetworkThresholds" : {
      "type" : "object",
      "required" : [ "utilizationPercentage" ],
      "properties" : {
        "utilizationPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if sent/received traffic utilization is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for high network utilization. If not set, automatic mode is used."
    },
    "HostsAnomalyDetectionConfig" : {
      "type" : "object",
      "required" : [ "connectionLostDetection", "diskLowInodesDetection", "diskLowSpaceDetection", "diskSlowWritesAndReadsDetection", "highCpuSaturationDetection", "highGcActivityDetection", "highMemoryDetection", "highNetworkDetection", "networkDroppedPacketsDetection", "networkErrorsDetection", "networkHighRetransmissionDetection", "networkTcpProblemsDetection", "outOfMemoryDetection", "outOfThreadsDetection" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "connectionLostDetection" : {
          "description" : "How to detect lost connection.",
          "$ref" : "#/definitions/ConnectionLostDetectionConfig"
        },
        "highCpuSaturationDetection" : {
          "description" : "How to detect high CPU saturation.",
          "$ref" : "#/definitions/HighCpuSaturationDetectionConfig"
        },
        "highMemoryDetection" : {
          "description" : "How to detect high memory usage.",
          "$ref" : "#/definitions/HighMemoryDetectionConfig"
        },
        "highGcActivityDetection" : {
          "description" : "How to detect high Garbage Collector activity.",
          "$ref" : "#/definitions/HighGcActivityDetectionConfig"
        },
        "outOfMemoryDetection" : {
          "description" : "How to detect Java out of memory problems.",
          "$ref" : "#/definitions/OutOfMemoryDetectionConfig"
        },
        "outOfThreadsDetection" : {
          "description" : "How to detect Java out of threads problems.",
          "$ref" : "#/definitions/OutOfThreadsDetectionConfig"
        },
        "networkDroppedPacketsDetection" : {
          "description" : "How to detect high number of dropped packets.",
          "$ref" : "#/definitions/NetworkDroppedPacketsDetectionConfig"
        },
        "networkErrorsDetection" : {
          "description" : "How to detect high number of network errors.",
          "$ref" : "#/definitions/NetworkErrorsDetectionConfig"
        },
        "highNetworkDetection" : {
          "description" : "How to detect high network utilization.",
          "$ref" : "#/definitions/HighNetworkDetectionConfig"
        },
        "networkTcpProblemsDetection" : {
          "description" : "How to detect TCP connectivity problems.",
          "$ref" : "#/definitions/NetworkTcpProblemsDetectionConfig"
        },
        "networkHighRetransmissionDetection" : {
          "description" : "How to detect high retransmission rate.",
          "$ref" : "#/definitions/NetworkHighRetransmissionDetectionConfig"
        },
        "diskLowSpaceDetection" : {
          "description" : "How to detect low disk space.",
          "$ref" : "#/definitions/DiskLowSpaceDetectionConfig"
        },
        "diskSlowWritesAndReadsDetection" : {
          "description" : "How to detect slow running disks.",
          "$ref" : "#/definitions/DiskSlowWritesAndReadsDetectionConfig"
        },
        "diskLowInodesDetection" : {
          "description" : "How to detect low disk inodes number.",
          "$ref" : "#/definitions/DiskLowInodesDetectionConfig"
        }
      },
      "description" : "Configuration of anomaly detection for hosts.",
      "example" : {
        "metadata" : {
          "configurationVersions" : [ 4, 2 ],
          "clusterVersion" : "0.0.0."
        },
        "connectionLostDetection" : {
          "enabled" : true,
          "enabledOnGracefulShutdowns" : true
        },
        "highCpuSaturationDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "cpuSaturation" : 90
          }
        },
        "highMemoryDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "pageFaultsPerSecondWindows" : 50,
            "usedMemoryPercentageWindows" : 85,
            "pageFaultsPerSecondNonWindows" : 10,
            "usedMemoryPercentageNonWindows" : 85
          }
        },
        "highGcActivityDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "gcTimePercentage" : 35,
            "gcSuspensionPercentage" : 20
          }
        },
        "outOfMemoryDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "outOfMemoryExceptionsNumber" : 2
          }
        },
        "outOfThreadsDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "outOfThreadsExceptionsNumber" : 2
          }
        },
        "networkDroppedPacketsDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "droppedPacketsPercentage" : 8,
            "totalPacketsRate" : 8
          }
        },
        "networkErrorsDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "errorsPercentage" : 9,
            "totalPacketsRate" : 9
          }
        },
        "highNetworkDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "utilizationPercentage" : 88
          }
        },
        "networkTcpProblemsDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "newConnectionFailuresPercentage" : 5,
            "failedConnectionsNumberPerMinute" : 5
          }
        },
        "networkHighRetransmissionDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "retransmissionRatePercentage" : 15,
            "retransmittedPacketsNumberPerMinute" : 15
          }
        },
        "diskLowSpaceDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "freeSpacePercentage" : 10
          }
        },
        "diskSlowWritesAndReadsDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "writeAndReadTime" : 300
          }
        },
        "diskLowInodesDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "freeInodesPercentage" : 10
          }
        }
      }
    },
    "NetworkDroppedPacketsDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for dropped packets. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert.",
          "$ref" : "#/definitions/NetworkDroppedPacketsThresholds"
        }
      },
      "description" : "Configuration of high number of dropped packets detection."
    },
    "NetworkDroppedPacketsThresholds" : {
      "type" : "object",
      "required" : [ "droppedPacketsPercentage", "totalPacketsRate" ],
      "properties" : {
        "droppedPacketsPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receive/transmit dropped packet percentage is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "totalPacketsRate" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        }
      },
      "description" : "Custom thresholds for dropped packets. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert."
    },
    "NetworkErrorsDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for network errors. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert.",
          "$ref" : "#/definitions/NetworkErrorsThresholds"
        }
      },
      "description" : "Configuration of high number of network errors detection."
    },
    "NetworkErrorsThresholds" : {
      "type" : "object",
      "required" : [ "errorsPercentage", "totalPacketsRate" ],
      "properties" : {
        "errorsPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Receive/transmit error packet percentage is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "totalPacketsRate" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        }
      },
      "description" : "Custom thresholds for network errors. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert."
    },
    "NetworkHighRetransmissionDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high retransmission rate. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert.",
          "$ref" : "#/definitions/NetworkHighRetransmissionThresholds"
        }
      },
      "description" : "Configuration of high retransmission rate detection."
    },
    "NetworkHighRetransmissionThresholds" : {
      "type" : "object",
      "required" : [ "retransmissionRatePercentage", "retransmittedPacketsNumberPerMinute" ],
      "properties" : {
        "retransmissionRatePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Retransmission rate is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "retransmittedPacketsNumberPerMinute" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of retransmitted packets is higher than *X* packets per minute in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        }
      },
      "description" : "Custom thresholds for high retransmission rate. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert."
    },
    "NetworkTcpProblemsDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for TCP connection problems. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert.",
          "$ref" : "#/definitions/NetworkTcpProblemsThresholds"
        }
      },
      "description" : "Configuration of TCP connectivity problems detection."
    },
    "NetworkTcpProblemsThresholds" : {
      "type" : "object",
      "required" : [ "failedConnectionsNumberPerMinute", "newConnectionFailuresPercentage" ],
      "properties" : {
        "newConnectionFailuresPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Percentage of new connection failures is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "failedConnectionsNumberPerMinute" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of failed connections is higher than *X* connections per minute in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        }
      },
      "description" : "Custom thresholds for TCP connection problems. If not set, automatic mode is used. \n\n **All** of these conditions must be met to trigger an alert."
    },
    "OutOfMemoryDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for Java out of memory. If not set, automatic mode is used.",
          "$ref" : "#/definitions/OutOfMemoryThresholds"
        }
      },
      "description" : "Configuration of Java out of memory problems detection."
    },
    "OutOfMemoryThresholds" : {
      "type" : "object",
      "required" : [ "outOfMemoryExceptionsNumber" ],
      "properties" : {
        "outOfMemoryExceptionsNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if the number of Java out of memory exceptions is *X* per minute or higher.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for Java out of memory. If not set, automatic mode is used."
    },
    "OutOfThreadsDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for Java out of threads detection. If not set, automatic mode is used.",
          "$ref" : "#/definitions/OutOfThreadsThresholds"
        }
      },
      "description" : "Configuration of Java out of threads problems detection."
    },
    "OutOfThreadsThresholds" : {
      "type" : "object",
      "required" : [ "outOfThreadsExceptionsNumber" ],
      "properties" : {
        "outOfThreadsExceptionsNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if the number of Java out of threads exceptions is *X* per minute or higher.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for Java out of threads detection. If not set, automatic mode is used."
    },
    "CustomDeviceGroupNameAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "nameFilter" ],
        "properties" : {
          "nameFilter" : {
            "description" : "The name filter which should be applied for the scope.",
            "$ref" : "#/definitions/MetricEventTextFilterMetricEventTextFilterOperatorDto"
          }
        },
        "description" : "A scope filter for the related custom device group name."
      } ]
    },
    "EntityIdAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "entityId" ],
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The monitored entities id to match on."
          }
        },
        "description" : "A scope filter for a monitored entity identifier."
      } ]
    },
    "HostGroupNameAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "nameFilter" ],
        "properties" : {
          "nameFilter" : {
            "description" : "The name filter which should be applied for the scope.",
            "$ref" : "#/definitions/MetricEventTextFilterMetricEventTextFilterOperatorDto"
          }
        },
        "description" : "A scope filter for the related host group name."
      } ]
    },
    "HostNameAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "nameFilter" ],
        "properties" : {
          "nameFilter" : {
            "description" : "The name filter which should be applied for the scope.",
            "$ref" : "#/definitions/MetricEventTextFilterMetricEventTextFilterOperatorDto"
          }
        },
        "description" : "A scope filter for the related host name."
      } ]
    },
    "ManagementZoneAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "managementZoneId" ],
        "properties" : {
          "managementZoneId" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The management zones id to match on."
          }
        },
        "description" : "A scope filter for a management zone identifier."
      } ]
    },
    "MetricEvent" : {
      "type" : "object",
      "required" : [ "alertCondition", "dealertingSamples", "description", "enabled", "metricId", "name", "samples", "threshold", "violatingSamples" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the metric event.",
          "minLength" : 0,
          "maxLength" : 256,
          "pattern" : "^[a-zA-Z0-9\\.\\-_]+$"
        },
        "metricId" : {
          "type" : "string",
          "description" : "The ID of the metric evaluated by the metric event."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the metric event displayed in the UI.",
          "minLength" : 0,
          "maxLength" : 1024
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the metric event.",
          "minLength" : 0,
          "maxLength" : 4000
        },
        "aggregationType" : {
          "type" : "string",
          "description" : "How the metric data points are aggregated for the evaluation. \n\n The timeseries must support this aggregation.",
          "enum" : [ "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "OF_INTEREST", "OF_INTEREST_RATIO", "OTHER", "OTHER_RATIO", "P90", "SUM", "VALUE" ]
        },
        "severity" : {
          "type" : "string",
          "description" : "The type of the event to trigger on the threshold violation. \n\nThe `CUSTOM_ALERT` type is not correlated with other alerts.\nThe `INFO` type does not open a problem.",
          "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "INFO", "PERFORMANCE", "RESOURCE_CONTENTION" ]
        },
        "alertCondition" : {
          "type" : "string",
          "description" : "The condition for the **threshold** value check: above or below.",
          "enum" : [ "ABOVE", "BELOW" ]
        },
        "samples" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of one-minute samples that form sliding evaluation window.",
          "minimum" : 3,
          "maximum" : 20
        },
        "violatingSamples" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event",
          "minimum" : 1
        },
        "dealertingSamples" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of one-minute samples within the evaluation window that must go back to normal to close the event.",
          "minimum" : 3
        },
        "threshold" : {
          "type" : "number",
          "format" : "double",
          "description" : "The value of the threshold."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The metric event is enabled (`true`) or disabled (`false`)."
        },
        "alertingScope" : {
          "type" : "array",
          "description" : "Defines the scope of the metric event. Only one filter is allowed per filter type, except for tags, where up to 3 are allowed. The filters are combined by conjunction.",
          "items" : {
            "$ref" : "#/definitions/MetricEventAlertingScope"
          }
        },
        "metricDimensions" : {
          "type" : "array",
          "description" : "Defines the dimensions of the metric to alert on. The filters are combined by conjunction.",
          "items" : {
            "$ref" : "#/definitions/MetricEventDimensions"
          }
        },
        "unit" : {
          "type" : "string",
          "description" : "The unit of the threshold, matching the metric definition.\n\nIf not set the metrics unit is picked.",
          "enum" : [ "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "GIBI_BYTE", "GIGA_BYTE", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "MICRO_SECOND", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PROMILLE", "RATIO", "SECOND", "STATE", "UNSPECIFIED" ]
        }
      },
      "description" : "The configuration of the metric event.",
      "example" : {
        "metadata" : {
          "configurationVersions" : [ 4, 2 ],
          "clusterVersion" : "0.0.0."
        },
        "metricId" : "com.dynatrace.builtin:host.disk.bytesread",
        "name" : "My metric event",
        "description" : "This is the description for my metric event.",
        "aggregationType" : "AVG",
        "severity" : "CUSTOM_ALERT",
        "alertCondition" : "ABOVE",
        "samples" : 5,
        "violatingSamples" : 3,
        "dealertingSamples" : 5,
        "threshold" : 80.0,
        "alertingScope" : [ {
          "filterType" : "ENTITY_ID",
          "entityId" : "HOST-000000000001E240"
        }, {
          "filterType" : "TAG",
          "tagFilter" : {
            "context" : "CONTEXTLESS",
            "key" : "someKey",
            "value" : "someValue"
          }
        } ],
        "metricDimensions" : [ {
          "filterType" : "ENTITY",
          "name" : "disk",
          "index" : 1,
          "nameFilter" : {
            "value" : "diskName",
            "operator" : "EQUALS"
          }
        } ],
        "enabled" : true,
        "unit" : "KILO_BYTE_PER_SECOND"
      }
    },
    "MetricEventAlertingScope" : {
      "type" : "object",
      "required" : [ "filterType" ],
      "discriminator" : "filterType",
      "properties" : {
        "filterType" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nENTITY_ID -> EntityIdAlertingScope\nMANAGEMENT_ZONE -> ManagementZoneAlertingScope\nTAG -> TagFilterAlertingScope\nNAME -> NameAlertingScope\nCUSTOM_DEVICE_GROUP_NAME -> CustomDeviceGroupNameAlertingScope\nHOST_GROUP_NAME -> HostGroupNameAlertingScope\nHOST_NAME -> HostNameAlertingScope\nPROCESS_GROUP_ID -> ProcessGroupIdAlertingScope\nPROCESS_GROUP_NAME -> ProcessGroupNameAlertingScope\n",
          "enum" : [ "ENTITY_ID", "MANAGEMENT_ZONE", "TAG", "NAME", "CUSTOM_DEVICE_GROUP_NAME", "HOST_GROUP_NAME", "HOST_NAME", "PROCESS_GROUP_ID", "PROCESS_GROUP_NAME" ]
        }
      },
      "description" : "A single filter for the alerting scope.\n\nThis is the base version of the filter, depending on the type, \nthe actual JSON may contain additional fields."
    },
    "MetricEventDimensions" : {
      "type" : "object",
      "required" : [ "filterType", "index" ],
      "discriminator" : "filterType",
      "properties" : {
        "filterType" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nENTITY -> MetricEventEntityDimensions\nSTRING -> MetricEventStringDimensions\n",
          "enum" : [ "ENTITY", "STRING" ]
        },
        "name" : {
          "type" : "string",
          "description" : "The dimensions name. Sending this has no effect while creating a configuration, as only the *index* of the dimension is used here -> dimension names might change, indexes not."
        },
        "index" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The dimensions index on the metric."
        }
      },
      "description" : "A single filter for the metrics dimensions.\n\nThis is the base version of the filter, depending on the type, \nthe actual JSON may contain additional fields."
    },
    "MetricEventEntityDimensions" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventDimensions"
      }, {
        "type" : "object",
        "required" : [ "nameFilter" ],
        "properties" : {
          "nameFilter" : {
            "description" : "The name filter which should be applied for the dimensions.",
            "$ref" : "#/definitions/MetricEventTextFilterMetricEventDimensionsFilterOperatorDto"
          }
        },
        "description" : "A filter for the metrics entity dimensions."
      } ]
    },
    "MetricEventStringDimensions" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventDimensions"
      }, {
        "type" : "object",
        "required" : [ "textFilter" ],
        "properties" : {
          "textFilter" : {
            "description" : "The text filter which should be applied for the dimensions.",
            "$ref" : "#/definitions/MetricEventTextFilterMetricEventDimensionsFilterOperatorDto"
          }
        },
        "description" : "A filter for the metrics string dimensions."
      } ]
    },
    "MetricEventTextFilterMetricEventDimensionsFilterOperatorDto" : {
      "type" : "object",
      "required" : [ "operator", "value" ],
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "The value to match on.",
          "minLength" : 1,
          "maxLength" : 1000
        },
        "operator" : {
          "type" : "string",
          "description" : "The operator to match on.",
          "enum" : [ "EQUALS" ]
        }
      },
      "description" : "A filter for a string value based on the given operator."
    },
    "MetricEventTextFilterMetricEventTextFilterOperatorDto" : {
      "type" : "object",
      "required" : [ "operator", "value" ],
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "The value to match on.",
          "minLength" : 1,
          "maxLength" : 1000
        },
        "operator" : {
          "type" : "string",
          "description" : "The operator to match on.",
          "enum" : [ "CONTAINS_CASE_INSENSITIVE", "CONTAINS_CASE_SENSITIVE", "EQUALS" ]
        }
      },
      "description" : "A filter for a string value based on the given operator."
    },
    "NameAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "nameFilter" ],
        "properties" : {
          "nameFilter" : {
            "description" : "The name filter which should be applied for the scope.",
            "$ref" : "#/definitions/MetricEventTextFilterMetricEventTextFilterOperatorDto"
          }
        },
        "description" : "A scope filter for a monitored entity name."
      } ]
    },
    "ProcessGroupIdAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "processGroupId" ],
        "properties" : {
          "processGroupId" : {
            "type" : "string",
            "description" : "The process groups id to match on."
          }
        },
        "description" : "A scope filter for a process group identifier."
      } ]
    },
    "ProcessGroupNameAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "nameFilter" ],
        "properties" : {
          "nameFilter" : {
            "description" : "The name filter which should be applied for the scope.",
            "$ref" : "#/definitions/MetricEventTextFilterMetricEventTextFilterOperatorDto"
          }
        },
        "description" : "A scope filter for the related process group name."
      } ]
    },
    "TagFilterAlertingScope" : {
      "allOf" : [ {
        "$ref" : "#/definitions/MetricEventAlertingScope"
      }, {
        "type" : "object",
        "required" : [ "tagFilter" ],
        "properties" : {
          "tagFilter" : {
            "description" : "The tag filter to match on.",
            "$ref" : "#/definitions/TagFilter"
          }
        },
        "description" : "A scope filter for tags on entities."
      } ]
    },
    "ServiceAnomalyDetectionConfig" : {
      "type" : "object",
      "required" : [ "failureRateIncrease", "responseTimeDegradation" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "responseTimeDegradation" : {
          "description" : "How to detect response time degradation.",
          "$ref" : "#/definitions/ResponseTimeDegradationDetectionConfig"
        },
        "failureRateIncrease" : {
          "description" : "How to detect failure rate increase.",
          "$ref" : "#/definitions/FailureRateIncreaseDetectionConfig"
        }
      },
      "description" : "Dynatrace automatically detects service-related performance anomalies such as response time degradations and failure rate increases. Use these settings to configure detection sensitivity, set alert thresholds, or disable alerting for certain services.",
      "example" : {
        "metadata" : {
          "configurationVersions" : [ 4, 2 ],
          "clusterVersion" : "0.0.0."
        },
        "responseTimeDegradation" : {
          "detectionMode" : "DETECT_AUTOMATICALLY",
          "automaticDetection" : {
            "responseTimeDegradationMilliseconds" : 250,
            "responseTimeDegradationPercent" : 90,
            "slowestResponseTimeDegradationMilliseconds" : 500,
            "slowestResponseTimeDegradationPercent" : 200,
            "loadThreshold" : "ONE_REQUEST_PER_MINUTE"
          }
        },
        "failureRateIncrease" : {
          "detectionMode" : "DETECT_USING_FIXED_THRESHOLDS",
          "thresholds" : {
            "threshold" : 10,
            "sensitivity" : "LOW"
          }
        }
      }
    },
    "DroppedPacketsDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for high number of dropped packets. If not set then the automatic mode is used.",
          "$ref" : "#/definitions/DroppedPacketsThresholds"
        }
      },
      "description" : "The configuration of the high number of dropped packets detection."
    },
    "DroppedPacketsThresholds" : {
      "type" : "object",
      "required" : [ "droppedPacketsPerSecond" ],
      "properties" : {
        "droppedPacketsPerSecond" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if receive/transmit dropped packets rate on NIC is higher than *X* packets per second in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for high number of dropped packets. If not set then the automatic mode is used."
    },
    "EsxiHighCpuSaturationConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for CPU saturation detection on ESXi. If not set then the automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert.",
          "$ref" : "#/definitions/EsxiHighCpuThresholds"
        }
      },
      "description" : "The configuration of the CPU saturation on ESXi host detection."
    },
    "EsxiHighCpuThresholds" : {
      "type" : "object",
      "required" : [ "cpuPeakPercentage", "cpuUsagePercentage", "vmCpuReadyPercentage" ],
      "properties" : {
        "cpuUsagePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "CPU usage is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "vmCpuReadyPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "VM CPU ready is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "cpuPeakPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "At least one peak higher than *X*% occurred in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for CPU saturation detection on ESXi. If not set then the automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert."
    },
    "EsxiHighMemoryDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for memory saturation on ESXi host. If not set then the automatic mode is used.",
          "$ref" : "#/definitions/EsxiHighMemoryThresholds"
        }
      },
      "description" : "The configuration of the memory saturation on ESXi host detection."
    },
    "EsxiHighMemoryThresholds" : {
      "type" : "object",
      "required" : [ "compressionDecompressionRate" ],
      "properties" : {
        "compressionDecompressionRate" : {
          "type" : "number",
          "description" : "Alert if ESXi host swap IN/OUT or compression/decompression rate is higher *X* kilobytes per second in 3 out of 5 samples.",
          "minimum" : 0.01,
          "maximum" : 1000000,
          "exclusiveMinimum" : false
        }
      },
      "description" : "Custom thresholds for memory saturation on ESXi host. If not set then the automatic mode is used."
    },
    "GuestCPULimitReachedConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for Guest CPU limit reached. If not set then the automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert.",
          "$ref" : "#/definitions/GuestCPULimitThresholds"
        }
      },
      "description" : "The configuration of the guest CPU limit reached configuration detection."
    },
    "GuestCPULimitThresholds" : {
      "type" : "object",
      "required" : [ "hostCpuUsageMinPercentage", "vmCpuReadyMaxPercentage", "vmCpuUsageMaxPercentage" ],
      "properties" : {
        "hostCpuUsageMinPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Hypervisor CPU usage is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "vmCpuUsageMaxPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than *X*% in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        },
        "vmCpuReadyMaxPercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "VM CPU ready is higher than *X*% occurred in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for guest CPU limit detection. If not set then the automatic mode is used. \n\n **All** conditions must be fulfilled to trigger an alert."
    },
    "LowDatastoreSpaceDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for low datastore free space. If not set then the automatic mode is used.",
          "$ref" : "#/definitions/LowDatastoreSpaceThresholds"
        }
      },
      "description" : "The configuraiton of the low datastore free space detection."
    },
    "LowDatastoreSpaceThresholds" : {
      "type" : "object",
      "required" : [ "freeSpacePercentage" ],
      "properties" : {
        "freeSpacePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if datastore free space is lower than *X*%.",
          "minimum" : 1,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for low datastore free space. If not set then the automatic mode is used."
    },
    "OverloadedStorageDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for overloaded storage on physical storage device. If not set then the automatic mode is used.",
          "$ref" : "#/definitions/OverloadedStorageThresholds"
        }
      },
      "description" : "The cofiguration of the overloaded storage on physical storage device detection."
    },
    "OverloadedStorageThresholds" : {
      "type" : "object",
      "required" : [ "commandAbortsNumber" ],
      "properties" : {
        "commandAbortsNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Alert if number of command aborts is higher than *X* in 3 out of 5 samples.",
          "minimum" : 0,
          "maximum" : 100
        }
      },
      "description" : "Custom thresholds for overloaded storage on physical storage device. If not set then the automatic mode is used."
    },
    "SlowPhysicalStorageDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for slow running physical storage device. If not set then the automatic mode is used. \n\n Fulfillment of **any** condition triggers an alert.",
          "$ref" : "#/definitions/SlowPhysicalStorageThresholds"
        }
      },
      "description" : "The configuraiton of the physical storage device running slow detection."
    },
    "SlowPhysicalStorageThresholds" : {
      "type" : "object",
      "required" : [ "avgReadWriteLatency", "peakReadWriteLatency" ],
      "properties" : {
        "avgReadWriteLatency" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Read/write latency is higher than *X* milliseconds in 4 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        },
        "peakReadWriteLatency" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Peak value for read/write latency is higher than *X* milliseconds in 4 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        }
      },
      "description" : "Custom thresholds for slow running physical storage device. If not set then the automatic mode is used. \n\n Fulfillment of **any** condition triggers an alert."
    },
    "UndersizedStorageDetectionConfig" : {
      "type" : "object",
      "required" : [ "enabled" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The detection is enabled (`true`) or disabled (`false`)."
        },
        "customThresholds" : {
          "description" : "Custom thresholds for undersized storage device. If not set then the automatic mode is used. \n\n Fulfillment of **any** condition triggers an alert.",
          "$ref" : "#/definitions/UndersizedStorageThresholds"
        }
      },
      "description" : "Undersized storage device detection cofing"
    },
    "UndersizedStorageThresholds" : {
      "type" : "object",
      "required" : [ "averageQueueCommandLatency", "peakQueueCommandLatency" ],
      "properties" : {
        "averageQueueCommandLatency" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Average queue command latency is higher than *X* milliseconds in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        },
        "peakQueueCommandLatency" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Peak queue command latency is higher than *X* milliseconds in 3 out of 5 samples.",
          "minimum" : 1,
          "maximum" : 10000
        }
      },
      "description" : "Custom thresholds for undersized storage device. If not set then the automatic mode is used. \n\n Fulfillment of **any** condition triggers an alert."
    },
    "VMwareAnomalyDetectionConfig" : {
      "type" : "object",
      "required" : [ "droppedPacketsDetection", "esxiHighCpuSaturation", "esxiHighMemoryDetection", "lowDatastoreSpaceDetection", "overloadedStorageDetection", "slowPhysicalStorageDetection", "undersizedStorageDetection" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "esxiHighCpuSaturation" : {
          "description" : "How to detect CPU saturation on ESXi host.",
          "$ref" : "#/definitions/EsxiHighCpuSaturationConfig"
        },
        "guestCpuLimitReached" : {
          "description" : "How to detect guest CPU limit reached.",
          "$ref" : "#/definitions/GuestCPULimitReachedConfig"
        },
        "esxiHighMemoryDetection" : {
          "description" : "How to detect memory saturation on ESXi host.",
          "$ref" : "#/definitions/EsxiHighMemoryDetectionConfig"
        },
        "overloadedStorageDetection" : {
          "description" : "How to detect overloaded storage on physical storage device.",
          "$ref" : "#/definitions/OverloadedStorageDetectionConfig"
        },
        "undersizedStorageDetection" : {
          "description" : "How to detect undersized storage device.",
          "$ref" : "#/definitions/UndersizedStorageDetectionConfig"
        },
        "slowPhysicalStorageDetection" : {
          "description" : "How to detect physical storage device running slow.",
          "$ref" : "#/definitions/SlowPhysicalStorageDetectionConfig"
        },
        "droppedPacketsDetection" : {
          "description" : "How to detect high number of dropped packets.",
          "$ref" : "#/definitions/DroppedPacketsDetectionConfig"
        },
        "lowDatastoreSpaceDetection" : {
          "description" : "How to detect low datastore space.",
          "$ref" : "#/definitions/LowDatastoreSpaceDetectionConfig"
        }
      },
      "description" : "The configuration of the anomaly detection for VMware.",
      "example" : {
        "metadata" : {
          "configurationVersions" : [ 4, 2 ],
          "clusterVersion" : "0.0.0."
        },
        "esxiHighCpuSaturation" : {
          "enabled" : true,
          "customThresholds" : {
            "cpuUsagePercentage" : 80,
            "vmCpuReadyPercentage" : 10,
            "cpuPeakPercentage" : 90
          }
        },
        "esxiHighMemoryDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "compressionDecompressionRate" : 120
          }
        },
        "overloadedStorageDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "commandAbortsNumber" : 1
          }
        },
        "undersizedStorageDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "averageQueueCommandLatency" : 15,
            "peakQueueCommandLatency" : 160
          }
        },
        "slowPhysicalStorageDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "avgReadWriteLatency" : 150,
            "peakReadWriteLatency" : 400
          }
        },
        "droppedPacketsDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "droppedPacketsPerSecond" : 4
          }
        },
        "lowDatastoreSpaceDetection" : {
          "enabled" : true,
          "customThresholds" : {
            "freeSpacePercentage" : 5
          }
        }
      }
    },
    "ApplicationDataPrivacy" : {
      "type" : "object",
      "required" : [ "dataCaptureOptInEnabled", "doNotTrackBehaviour", "persistentCookieForUserTracking" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "identifier" : {
          "type" : "string",
          "description" : "Dynatrace entity ID of the web application.",
          "readOnly" : true
        },
        "dataCaptureOptInEnabled" : {
          "type" : "boolean",
          "description" : "Set to `true` to disable data capture and cookies until JavaScriptAPI dtrum.enable() is called."
        },
        "persistentCookieForUserTracking" : {
          "type" : "boolean",
          "description" : "Set to `true` to set persistent cookie in order to recognize returning devices."
        },
        "doNotTrackBehaviour" : {
          "type" : "string",
          "description" : "How to handle browsers' \"Do Not Track\": `IGNORE_DO_NOT_TRACK`, or `CAPTURE_ANONYMIZED`, or `DO_NOT_CAPTURE`.",
          "enum" : [ "CAPTURE_ANONYMIZED", "DO_NOT_CAPTURE", "IGNORE_DO_NOT_TRACK" ]
        }
      },
      "description" : "Data privacy settings of the application."
    },
    "AdditionalEventHandlers" : {
      "type" : "object",
      "required" : [ "blurEventHandler", "changeEventHandler", "clickEventHandler", "maxDomNodesToInstrument", "mouseupEventHandler", "toStringMethod", "userMouseupEventForClicks" ],
      "properties" : {
        "userMouseupEventForClicks" : {
          "type" : "boolean",
          "description" : "Use mouseup event for clicks enabled/disabled."
        },
        "clickEventHandler" : {
          "type" : "boolean",
          "description" : "Click event handler enabled/disabled."
        },
        "mouseupEventHandler" : {
          "type" : "boolean",
          "description" : "Mouseup event handler enabled/disabled."
        },
        "blurEventHandler" : {
          "type" : "boolean",
          "description" : "Blur event handler enabled/disabled."
        },
        "changeEventHandler" : {
          "type" : "boolean",
          "description" : "Change event handler enabled/disabled."
        },
        "toStringMethod" : {
          "type" : "boolean",
          "description" : "toString method enabled/disabled."
        },
        "maxDomNodesToInstrument" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.",
          "minimum" : 0,
          "maximum" : 100000
        }
      },
      "description" : "Additional event handlers and wrappers."
    },
    "AdvancedJavaScriptTagSettings" : {
      "type" : "object",
      "required" : [ "additionalEventHandlers", "eventWrapperSettings", "globalEventCaptureSettings", "instrumentUnsupportedAjaxFrameworks", "maxActionNameLength", "maxErrorsToCapture", "specialCharactersToEscape", "syncBeaconFirefox", "syncBeaconInternetExplorer" ],
      "properties" : {
        "syncBeaconFirefox" : {
          "type" : "boolean",
          "description" : "Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled."
        },
        "syncBeaconInternetExplorer" : {
          "type" : "boolean",
          "description" : "Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled."
        },
        "instrumentUnsupportedAjaxFrameworks" : {
          "type" : "boolean",
          "description" : "Instrumentation of unsupported Ajax frameworks enabled/disabled."
        },
        "specialCharactersToEscape" : {
          "type" : "string",
          "description" : "Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format.",
          "minLength" : 0,
          "maxLength" : 30,
          "pattern" : "[^\"<>]*"
        },
        "maxActionNameLength" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum character length for action names. Valid values range from 5 to 10000.",
          "minimum" : 5,
          "maximum" : 10000
        },
        "maxErrorsToCapture" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of errors to be captured per page. Valid values range from 0 to 50.",
          "minimum" : 0,
          "maximum" : 50
        },
        "additionalEventHandlers" : {
          "description" : "Additional event handlers and wrappers.",
          "$ref" : "#/definitions/AdditionalEventHandlers"
        },
        "eventWrapperSettings" : {
          "description" : "In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page.",
          "$ref" : "#/definitions/EventWrapperSettings"
        },
        "globalEventCaptureSettings" : {
          "description" : "Global event capture settings.",
          "$ref" : "#/definitions/GlobalEventCaptureSettings"
        }
      },
      "description" : "Advanced JavaScript tag settings."
    },
    "Apdex" : {
      "type" : "object",
      "required" : [ "considerJavaScriptErrors" ],
      "properties" : {
        "toleratedThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximal length of an action, in milliseconds, which is considered as satisfied user experience. \n\n You can use values between 100 and 60000.",
          "minimum" : 100,
          "maximum" : 60000
        },
        "frustratingThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximal length of an action, in milliseconds, which is considered as tolerable user experience. \n\n You can use values between 100 and 240000.",
          "minimum" : 100,
          "maximum" : 240000
        },
        "toleratedFallbackThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Fallback threshold of an XHR action, in milliseconds, defining a satisfied user experience, when the configured KPM is not available. \n\n Values between 100 and 60000 are allowed.",
          "minimum" : 100,
          "maximum" : 60000
        },
        "frustratingFallbackThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Fallback threshold of an XHR action, in milliseconds, defining a tolerable user experience, when the configured KPM is not available. \n\n Values between 100 and 240000 are allowed.",
          "minimum" : 100,
          "maximum" : 240000
        },
        "considerJavaScriptErrors" : {
          "type" : "boolean",
          "description" : "Consider JavaScript errors in Apdex calculations enabled/disabled"
        }
      },
      "description" : "Defines the Apdex settings of an application."
    },
    "ContentCapture" : {
      "type" : "object",
      "required" : [ "javaScriptErrors", "resourceTimingSettings", "timeoutSettings", "visuallyCompleteAndSpeedIndex" ],
      "properties" : {
        "resourceTimingSettings" : {
          "description" : "Settings for resource timings capture.",
          "$ref" : "#/definitions/ResourceTimingSettings"
        },
        "javaScriptErrors" : {
          "type" : "boolean",
          "description" : "JavaScript errors monitoring enabled/disabled."
        },
        "timeoutSettings" : {
          "description" : "Settings for timed action capture.",
          "$ref" : "#/definitions/TimeoutSettings"
        },
        "visuallyCompleteAndSpeedIndex" : {
          "type" : "boolean",
          "description" : "Visually complete and Speed index support enabled/disabled."
        }
      },
      "description" : "Settings for content capture."
    },
    "ConversionGoal" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the conversion goal.",
          "minLength" : 1,
          "maxLength" : 50
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of conversion goal. \n\n Omit it while creating a new conversion goal."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the conversion goal.",
          "enum" : [ "Destination", "UserAction", "VisitDuration", "VisitNumActions" ]
        },
        "destinationDetails" : {
          "description" : "Configuration for the destination-based conversion goal\n\n Required if the **type** is `Destination`. Omit it otherwise.",
          "$ref" : "#/definitions/DestinationDetails"
        },
        "userActionDetails" : {
          "description" : "Configuration for the user action-based conversion goal.\n\n Required if the **type** is `UserAction`. Omit it otherwise.",
          "$ref" : "#/definitions/UserActionDetails"
        },
        "visitDurationDetails" : {
          "description" : "Configuration for the visit duration-based conversion goal.\n\n Required if the **type** is `VisitDuration`. Omit it otherwise.",
          "$ref" : "#/definitions/VisitDurationDetails"
        },
        "visitNumActionDetails" : {
          "description" : "Configuration for the number of user actions-based conversion goal.\n\n Required if the **type** is `VisitNumActions`. Omit it otherwise.",
          "$ref" : "#/definitions/VisitNumActionDetails"
        }
      },
      "description" : "A conversion goal of the application."
    },
    "DestinationDetails" : {
      "type" : "object",
      "required" : [ "urlOrPath" ],
      "properties" : {
        "urlOrPath" : {
          "type" : "string",
          "description" : "The path to be reached to hit the conversion goal."
        },
        "matchType" : {
          "type" : "string",
          "description" : "The operator of the match.",
          "enum" : [ "Begins", "Contains", "Ends" ]
        },
        "caseSensitive" : {
          "type" : "boolean",
          "description" : "The match is case-sensitive (`true`) or (`false`)."
        }
      },
      "description" : "Configuration of a destination-based conversion goal."
    },
    "EventWrapperSettings" : {
      "type" : "object",
      "required" : [ "blur", "change", "click", "mouseUp", "touchEnd", "touchStart" ],
      "properties" : {
        "click" : {
          "type" : "boolean",
          "description" : "Click enabled/disabled."
        },
        "mouseUp" : {
          "type" : "boolean",
          "description" : "MouseUp enabled/disabled."
        },
        "change" : {
          "type" : "boolean",
          "description" : "Change enabled/disabled."
        },
        "blur" : {
          "type" : "boolean",
          "description" : "Blur enabled/disabled."
        },
        "touchStart" : {
          "type" : "boolean",
          "description" : "TouchStart enabled/disabled."
        },
        "touchEnd" : {
          "type" : "boolean",
          "description" : "TouchEnd enabled/disabled."
        }
      },
      "description" : "In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page."
    },
    "GlobalEventCaptureSettings" : {
      "type" : "object",
      "required" : [ "additionalEventCapturedAsUserInput", "click", "doubleClick", "keyDown", "keyUp", "mouseDown", "mouseUp", "scroll" ],
      "properties" : {
        "mouseUp" : {
          "type" : "boolean",
          "description" : "MouseUp enabled/disabled."
        },
        "mouseDown" : {
          "type" : "boolean",
          "description" : "MouseDown enabled/disabled."
        },
        "click" : {
          "type" : "boolean",
          "description" : "Click enabled/disabled."
        },
        "doubleClick" : {
          "type" : "boolean",
          "description" : "DoubleClick enabled/disabled."
        },
        "keyUp" : {
          "type" : "boolean",
          "description" : "KeyUp enabled/disabled."
        },
        "keyDown" : {
          "type" : "boolean",
          "description" : "KeyDown enabled/disabled."
        },
        "scroll" : {
          "type" : "boolean",
          "description" : "Scroll enabled/disabled."
        },
        "additionalEventCapturedAsUserInput" : {
          "type" : "string",
          "description" : "Additional events to be captured globally as user input. \n\nFor example, DragStart or DragEnd.",
          "minLength" : 0,
          "maxLength" : 100,
          "pattern" : "[a-z,]*"
        }
      },
      "description" : "Global event capture settings."
    },
    "IpAddressRange" : {
      "type" : "object",
      "required" : [ "address" ],
      "properties" : {
        "subnetMask" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The subnet of the ip address range settings",
          "minimum" : 0,
          "maximum" : 128
        },
        "address" : {
          "type" : "string",
          "description" : "The ip address"
        },
        "addressTo" : {
          "type" : "string",
          "description" : "The ip address to"
        }
      },
      "description" : "Ip address range that can be specified as single ip address, addresses (from) and address to or address and subnet mask."
    },
    "JavaScriptFrameworkSupport" : {
      "type" : "object",
      "required" : [ "activeXObject", "angular", "dojo", "extJS", "icefaces", "jQuery", "mooTools", "prototype" ],
      "properties" : {
        "angular" : {
          "type" : "boolean",
          "description" : "AngularJS and Angular support enabled/disabled."
        },
        "dojo" : {
          "type" : "boolean",
          "description" : "Dojo support enabled/disabled."
        },
        "extJS" : {
          "type" : "boolean",
          "description" : "ExtJS, Sencha Touch support enabled/disabled."
        },
        "icefaces" : {
          "type" : "boolean",
          "description" : "ICEfaces support enabled/disabled."
        },
        "jQuery" : {
          "type" : "boolean",
          "description" : "jQuery, Backbone.js support enabled/disabled."
        },
        "mooTools" : {
          "type" : "boolean",
          "description" : "MooTools support enabled/disabled."
        },
        "prototype" : {
          "type" : "boolean",
          "description" : "Prototype support enabled/disabled."
        },
        "activeXObject" : {
          "type" : "boolean",
          "description" : "ActiveXObject detection support enabled/disabled."
        }
      },
      "description" : "Support of various JavaScript frameworks."
    },
    "JavaScriptInjectionRules" : {
      "type" : "object",
      "required" : [ "enabled", "rule", "urlOperator" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The enable or disable rule of the java script injection."
        },
        "urlOperator" : {
          "type" : "string",
          "description" : "The url operator of the java script injection.",
          "enum" : [ "ALL_PAGES", "CONTAINS", "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
        },
        "urlPattern" : {
          "type" : "string",
          "description" : "The url pattern of the java script injection."
        },
        "rule" : {
          "type" : "string",
          "description" : "The url rule of the java script injection.",
          "enum" : [ "AFTER_SPECIFIC_HTML", "AUTOMATIC_INJECTION", "BEFORE_SPECIFIC_HTML", "DO_NOT_INJECT" ]
        },
        "htmlPattern" : {
          "type" : "string",
          "description" : "The html pattern of the java script injection."
        }
      },
      "description" : "Rules for javascript injection"
    },
    "MetaDataCapturing" : {
      "type" : "object",
      "required" : [ "capturingName", "name", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the meta data to capture.",
          "enum" : [ "COOKIE", "CSS_SELECTOR", "JAVA_SCRIPT_VARIABLE", "META_TAG" ]
        },
        "capturingName" : {
          "type" : "string",
          "description" : "The name of the meta data to capture."
        },
        "name" : {
          "type" : "string",
          "description" : "Name for displaying the captured values in Dynatrace."
        },
        "uniqueId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The unique id of the meta data to capture.",
          "minimum" : 0
        }
      },
      "description" : "Configuration to capture meta data with the JavaScript agent."
    },
    "MonitoringSettings" : {
      "type" : "object",
      "required" : [ "advancedJavaScriptTagSettings", "cacheControlHeaderOptimizations", "contentCapture", "cookiePlacementDomain", "customConfigurationProperties", "excludeXhrRegex", "fetchRequests", "injectionMode", "javaScriptFrameworkSupport", "secureCookieAttribute", "serverRequestPathId", "xmlHttpRequest" ],
      "properties" : {
        "fetchRequests" : {
          "type" : "boolean",
          "description" : "`fetch()` request capture enabled/disabled."
        },
        "xmlHttpRequest" : {
          "type" : "boolean",
          "description" : "`XmlHttpRequest` support enabled/disabled."
        },
        "javaScriptFrameworkSupport" : {
          "description" : "Support of various JavaScript frameworks.",
          "$ref" : "#/definitions/JavaScriptFrameworkSupport"
        },
        "contentCapture" : {
          "description" : "Content capture settings.",
          "$ref" : "#/definitions/ContentCapture"
        },
        "excludeXhrRegex" : {
          "type" : "string",
          "description" : "You can exclude some actions from becoming XHR actions.\n\nPut a regular expression, matching all the required URLs, here.\n\nIf noting specified the feature is disabled."
        },
        "injectionMode" : {
          "type" : "string",
          "description" : "JavaScript injection mode.",
          "enum" : [ "CODE_SNIPPET", "CODE_SNIPPET_ASYNC", "INLINE_CODE", "JAVASCRIPT_TAG" ]
        },
        "addCrossOriginAnonymousAttribute" : {
          "type" : "boolean",
          "description" : "Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings."
        },
        "scriptTagCacheDurationInHours" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time duration for the cache settings."
        },
        "libraryFileLocation" : {
          "type" : "string",
          "description" : "The location of your application’s custom JavaScript library file.\n\nIf nothing specified the root directory of your web server is used.",
          "minLength" : 0,
          "maxLength" : 512
        },
        "monitoringDataPath" : {
          "type" : "string",
          "description" : "The location to send monitoring data from the JavaScript tag.\n\nSpecify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.",
          "minLength" : 0,
          "maxLength" : 512
        },
        "customConfigurationProperties" : {
          "type" : "string",
          "description" : "Additional JavaScript tag properties that are specific to your application. To do this, type key=value pairs separated using a (|) symbol.",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "serverRequestPathId" : {
          "type" : "string",
          "description" : "Path to identify the server’s request ID.",
          "minLength" : 0,
          "maxLength" : 150,
          "pattern" : "[a-zA-Z-~\\\\.]*"
        },
        "secureCookieAttribute" : {
          "type" : "boolean",
          "description" : "Secure attribute usage for Dynatrace cookies enabled/disabled."
        },
        "cookiePlacementDomain" : {
          "type" : "string",
          "description" : "Domain for cookie placement.",
          "minLength" : 0,
          "maxLength" : 150
        },
        "cacheControlHeaderOptimizations" : {
          "type" : "boolean",
          "description" : "Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled."
        },
        "advancedJavaScriptTagSettings" : {
          "description" : "Advanced JavaScript tag settings.",
          "$ref" : "#/definitions/AdvancedJavaScriptTagSettings"
        },
        "browserRestrictionSettings" : {
          "description" : "Browser restriction settings.",
          "$ref" : "#/definitions/WebApplicationConfigBrowserRestrictionSettings"
        },
        "ipAddressRestrictionSettings" : {
          "description" : "Ip address restriction settings.",
          "$ref" : "#/definitions/WebApplicationConfigIpAddressRestrictionSettings"
        },
        "javaScriptInjectionRules" : {
          "type" : "array",
          "description" : "Java script injection rules.",
          "items" : {
            "$ref" : "#/definitions/JavaScriptInjectionRules"
          }
        }
      },
      "description" : "Real user monitoring settings."
    },
    "ResourceTimingSettings" : {
      "type" : "object",
      "required" : [ "nonW3cResourceTimings", "nonW3cResourceTimingsInstrumentationDelay", "resourceTimingCaptureType", "resourceTimingsDomainLimit", "w3cResourceTimings" ],
      "properties" : {
        "w3cResourceTimings" : {
          "type" : "boolean",
          "description" : "W3C resource timings for third party/CDN enabled/disabled."
        },
        "nonW3cResourceTimings" : {
          "type" : "boolean",
          "description" : "Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled."
        },
        "nonW3cResourceTimingsInstrumentationDelay" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings. \n\nValid values range from 0 to 9999.\n\nOnly effective if **nonW3cResourceTimings** is enabled.",
          "minimum" : 0,
          "maximum" : 9999
        },
        "resourceTimingCaptureType" : {
          "type" : "string",
          "description" : "Defines how detailed resource timings are captured.\n\nOnly effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled.",
          "enum" : [ "CAPTURE_ALL_SUMMARIES", "CAPTURE_FULL_DETAILS", "CAPTURE_LIMITED_SUMMARIES" ]
        },
        "resourceTimingsDomainLimit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Limits the number of domains for which W3C resource timings are captured.\n\nOnly effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`.",
          "minimum" : 0,
          "maximum" : 50
        }
      },
      "description" : "Settings for resource timings capture."
    },
    "TimeoutSettings" : {
      "type" : "object",
      "required" : [ "temporaryActionLimit", "temporaryActionTotalTimeout", "timedActionSupport" ],
      "properties" : {
        "timedActionSupport" : {
          "type" : "boolean",
          "description" : "Timed action support enabled/disabled. \n\nEnable to detect actions that trigger sending of XHRs via *setTimout* methods."
        },
        "temporaryActionLimit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3."
        },
        "temporaryActionTotalTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total timeout of all cascaded timeouts that should still be able to create a temporary action"
        }
      },
      "description" : "Settings for timed action capture."
    },
    "UserActionDetails" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "The value to be matched to hit the conversion goal."
        },
        "caseSensitive" : {
          "type" : "boolean",
          "description" : "The match is case-sensitive (`true`) or (`false`)."
        },
        "matchType" : {
          "type" : "string",
          "description" : "The operator of the match.",
          "enum" : [ "Begins", "Contains", "Ends" ]
        },
        "matchEntity" : {
          "type" : "string",
          "description" : "The type of the entity to which the rule applies.",
          "enum" : [ "ActionName", "CssSelector", "JavaScriptVariable", "MetaTag", "PagePath", "PageTitle", "PageUrl", "UrlAnchor", "XhrUrl" ]
        },
        "actionType" : {
          "type" : "string",
          "description" : "Type of the action to which the rule applies.",
          "enum" : [ "Custom", "Load", "Xhr" ]
        }
      },
      "description" : "Configuration of a user action-based conversion goal."
    },
    "UserActionNamingPlaceholder" : {
      "type" : "object",
      "required" : [ "input", "name", "processingPart", "useGuessedElementIdentifier" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Placeholder name.",
          "minLength" : 1,
          "maxLength" : 50
        },
        "input" : {
          "type" : "string",
          "description" : "Input.",
          "enum" : [ "ELEMENT_IDENTIFIER", "INPUT_TYPE", "METADATA", "PAGE_TITLE", "PAGE_URL", "SOURCE_URL", "TOP_XHR_URL", "XHR_URL" ]
        },
        "processingPart" : {
          "type" : "string",
          "description" : "Part.",
          "enum" : [ "ALL", "ANCHOR", "PATH" ]
        },
        "processingSteps" : {
          "type" : "array",
          "description" : "Processing actions.",
          "items" : {
            "$ref" : "#/definitions/UserActionNamingPlaceholderProcessingStep"
          }
        },
        "metadataId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Id of the metadata."
        },
        "useGuessedElementIdentifier" : {
          "type" : "boolean",
          "description" : "Use the element identifier that was selected by Dynatrace."
        }
      },
      "description" : "The placeholder settings."
    },
    "UserActionNamingPlaceholderProcessingStep" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Action.",
          "enum" : [ "REPLACEMENT", "SUBSTRING" ]
        },
        "patternBefore" : {
          "type" : "string",
          "description" : "Before (to be removed)."
        },
        "patternBeforeSearchType" : {
          "type" : "string",
          "description" : "If patternBefore should be the first or the last occurrence",
          "enum" : [ "FIRST", "LAST" ]
        },
        "patternAfter" : {
          "type" : "string",
          "description" : "After (to be removed)."
        },
        "patternAfterSearchType" : {
          "type" : "string",
          "description" : "If patternAfter should be the first or the last occurrence",
          "enum" : [ "FIRST", "LAST" ]
        },
        "replacement" : {
          "type" : "string",
          "description" : "Replace with."
        }
      },
      "description" : "The processing step settings."
    },
    "UserActionNamingRule" : {
      "type" : "object",
      "required" : [ "template" ],
      "properties" : {
        "template" : {
          "type" : "string",
          "description" : "Naming pattern. Use { } to select placeholders.",
          "minLength" : 1
        },
        "conditions" : {
          "type" : "array",
          "description" : "Define the conditions when this naming rule should apply.",
          "items" : {
            "$ref" : "#/definitions/UserActionNamingRuleCondition"
          }
        }
      },
      "description" : "The settings of naming rule."
    },
    "UserActionNamingRuleCondition" : {
      "type" : "object",
      "required" : [ "operand1", "operator" ],
      "properties" : {
        "operand1" : {
          "type" : "string",
          "minLength" : 1
        },
        "operand2" : {
          "type" : "string"
        },
        "operator" : {
          "type" : "string",
          "enum" : [ "CONTAINS", "ENDS_WITH", "EQUALS", "IS_EMPTY", "IS_NOT_EMPTY", "NOT_CONTAINS", "NOT_ENDS_WITH", "NOT_EQUALS", "NOT_STARTS_WITH", "STARTS_WITH" ]
        }
      },
      "description" : "The settings of conditions for user action naming."
    },
    "UserActionNamingSettings" : {
      "type" : "object",
      "properties" : {
        "placeholders" : {
          "type" : "array",
          "description" : "User action placeholders.",
          "items" : {
            "$ref" : "#/definitions/UserActionNamingPlaceholder"
          }
        },
        "loadActionNamingRules" : {
          "type" : "array",
          "description" : "User action naming rules for loading actions.",
          "items" : {
            "$ref" : "#/definitions/UserActionNamingRule"
          }
        },
        "xhrActionNamingRules" : {
          "type" : "array",
          "description" : "User action naming rules for xhr actions.",
          "items" : {
            "$ref" : "#/definitions/UserActionNamingRule"
          }
        },
        "ignoreCase" : {
          "type" : "boolean",
          "description" : "Case insensitive naming."
        },
        "splitUserActionsByDomain" : {
          "type" : "boolean",
          "description" : "Deactivate this setting if different domains should not result in separate user actions."
        }
      },
      "description" : "The settings of user action naming."
    },
    "VisitDurationDetails" : {
      "type" : "object",
      "required" : [ "durationInMillis" ],
      "properties" : {
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The duration of session to hit the conversion goal, in milliseconds."
        }
      },
      "description" : "Configuration of a visit duration-based conversion goal."
    },
    "VisitNumActionDetails" : {
      "type" : "object",
      "properties" : {
        "numUserActions" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of user actions to hit the conversion goal."
        }
      },
      "description" : "Configuration of a number of user actions-based conversion goal."
    },
    "WaterfallSettings" : {
      "type" : "object",
      "required" : [ "resourceBrowserCachingThreshold", "resourcesThreshold", "slowCdnResourcesThreshold", "slowFirstPartyResourcesThreshold", "slowThirdPartyResourcesThreshold", "speedIndexVisuallyCompleteRatioThreshold", "uncompressedResourcesThreshold" ],
      "properties" : {
        "uncompressedResourcesThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Warn about uncompressed resources larger than *X* bytes.",
          "minimum" : 0,
          "maximum" : 99999
        },
        "resourcesThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Warn about resources larger than *X* bytes.",
          "minimum" : 0,
          "maximum" : 99999000
        },
        "resourceBrowserCachingThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Warn about resources with a lower browser cache rate above *X*%.",
          "minimum" : 1,
          "maximum" : 100
        },
        "slowFirstPartyResourcesThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Warn about slow 1st party resources with a response time above *X* ms.",
          "minimum" : 0,
          "maximum" : 99999000
        },
        "slowThirdPartyResourcesThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Warn about slow 3rd party resources with a response time above *X* ms.",
          "minimum" : 0,
          "maximum" : 99999000
        },
        "slowCdnResourcesThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Warn about slow CDN resources with a response time above *X* ms.",
          "minimum" : 0,
          "maximum" : 99999000
        },
        "speedIndexVisuallyCompleteRatioThreshold" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Warn if Speed index exceeds *X* % of Visually complete.",
          "minimum" : 1,
          "maximum" : 99
        }
      },
      "description" : "These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources."
    },
    "WebApplicationConfig" : {
      "type" : "object",
      "required" : [ "costControlUserSessionPercentage", "customActionApdexSettings", "loadActionApdexSettings", "loadActionKeyPerformanceMetric", "monitoringSettings", "name", "realUserMonitoringEnabled", "waterfallSettings", "xhrActionApdexSettings", "xhrActionKeyPerformanceMetric" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "identifier" : {
          "type" : "string",
          "description" : "Dynatrace entity ID of the web application.",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the web application, displayed in the UI.",
          "minLength" : 1,
          "maxLength" : 50
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the web application.",
          "enum" : [ "AUTO_INJECTED", "BROWSER_EXTENSION_INJECTED", "MANUALLY_INJECTED" ]
        },
        "realUserMonitoringEnabled" : {
          "type" : "boolean",
          "description" : "Real user monitoring enabled/disabled."
        },
        "costControlUserSessionPercentage" : {
          "type" : "number",
          "description" : "Analize *X*% of user sessions.",
          "minimum" : 0,
          "maximum" : 100
        },
        "loadActionKeyPerformanceMetric" : {
          "type" : "string",
          "description" : "The key performance metric of load actions.",
          "enum" : [ "ACTION_DURATION", "DOM_INTERACTIVE", "LOAD_EVENT_END", "LOAD_EVENT_START", "RESPONSE_END", "RESPONSE_START", "SPEED_INDEX", "VISUALLY_COMPLETE" ]
        },
        "xhrActionKeyPerformanceMetric" : {
          "type" : "string",
          "description" : "The key performance metric of XHR actions.",
          "enum" : [ "ACTION_DURATION", "RESPONSE_END", "RESPONSE_START", "VISUALLY_COMPLETE" ]
        },
        "loadActionApdexSettings" : {
          "description" : "The Apdex settings of load actions.",
          "$ref" : "#/definitions/Apdex"
        },
        "xhrActionApdexSettings" : {
          "description" : "The Apdex settings of XHR actions.",
          "$ref" : "#/definitions/Apdex"
        },
        "customActionApdexSettings" : {
          "description" : "The Apdex settings of custom actions.",
          "$ref" : "#/definitions/Apdex"
        },
        "waterfallSettings" : {
          "description" : "Content resource settings.",
          "$ref" : "#/definitions/WaterfallSettings"
        },
        "monitoringSettings" : {
          "description" : "Real user monitoring settings.",
          "$ref" : "#/definitions/MonitoringSettings"
        },
        "userActionNamingSettings" : {
          "description" : "User action naming settings.",
          "$ref" : "#/definitions/UserActionNamingSettings"
        },
        "metaDataCaptureSettings" : {
          "type" : "array",
          "description" : "Java script agent meta data capture settings.",
          "items" : {
            "$ref" : "#/definitions/MetaDataCapturing"
          }
        },
        "conversionGoals" : {
          "type" : "array",
          "description" : "A list of conversion goals of the application.",
          "items" : {
            "$ref" : "#/definitions/ConversionGoal"
          }
        },
        "urlInjectionPattern" : {
          "type" : "string",
          "description" : "Url injection pattern for manual web application."
        }
      },
      "description" : "Configuration of a web application.",
      "example" : {
        "name" : "application name",
        "type" : "AUTO_INJECTED",
        "realUserMonitoringEnabled" : true,
        "costControlUserSessionPercentage" : 100,
        "loadActionKeyPerformanceMetric" : "VISUALLY_COMPLETE",
        "xhrActionKeyPerformanceMetric" : "ACTION_DURATION",
        "loadActionApdexSettings" : {
          "toleratedThreshold" : 3000,
          "frustratingThreshold" : 12000,
          "toleratedFallbackThreshold" : 3000,
          "frustratingFallbackThreshold" : 12000,
          "considerJavaScriptErrors" : true
        },
        "xhrActionApdexSettings" : {
          "toleratedThreshold" : 2500,
          "frustratingThreshold" : 10000,
          "toleratedFallbackThreshold" : 3000,
          "frustratingFallbackThreshold" : 12000,
          "considerJavaScriptErrors" : false
        },
        "customActionApdexSettings" : {
          "toleratedThreshold" : 3000,
          "frustratingThreshold" : 12000,
          "toleratedFallbackThreshold" : 3000,
          "frustratingFallbackThreshold" : 12000,
          "considerJavaScriptErrors" : true
        },
        "waterfallSettings" : {
          "uncompressedResourcesThreshold" : 860,
          "resourcesThreshold" : 100000,
          "resourceBrowserCachingThreshold" : 50,
          "slowFirstPartyResourcesThreshold" : 200000,
          "slowThirdPartyResourcesThreshold" : 200000,
          "slowCdnResourcesThreshold" : 200000,
          "speedIndexVisuallyCompleteRatioThreshold" : 50
        },
        "monitoringSettings" : {
          "fetchRequests" : false,
          "xmlHttpRequest" : true,
          "javaScriptFrameworkSupport" : {
            "angular" : true,
            "dojo" : false,
            "extJS" : false,
            "icefaces" : false,
            "jQuery" : true,
            "mooTools" : false,
            "prototype" : true,
            "activeXObject" : false
          },
          "contentCapture" : {
            "resourceTimingSettings" : {
              "w3cResourceTimings" : true,
              "nonW3cResourceTimings" : false,
              "nonW3cResourceTimingsInstrumentationDelay" : 50,
              "resourceTimingCaptureType" : "CAPTURE_FULL_DETAILS",
              "resourceTimingsDomainLimit" : 10
            },
            "javaScriptErrors" : true,
            "timeoutSettings" : {
              "timedActionSupport" : false,
              "temporaryActionLimit" : 0,
              "temporaryActionTotalTimeout" : 100
            },
            "visuallyCompleteAndSpeedIndex" : true
          },
          "excludeXhrRegex" : "",
          "injectionMode" : "JAVASCRIPT_TAG",
          "libraryFileLocation" : "",
          "monitoringDataPath" : "",
          "customConfigurationProperties" : "",
          "serverRequestPathId" : "",
          "secureCookieAttribute" : false,
          "cookiePlacementDomain" : "",
          "cacheControlHeaderOptimizations" : true,
          "advancedJavaScriptTagSettings" : {
            "syncBeaconFirefox" : false,
            "syncBeaconInternetExplorer" : false,
            "instrumentUnsupportedAjaxFrameworks" : false,
            "specialCharactersToEscape" : "",
            "maxActionNameLength" : 100,
            "maxErrorsToCapture" : 10,
            "additionalEventHandlers" : {
              "userMouseupEventForClicks" : false,
              "clickEventHandler" : false,
              "mouseupEventHandler" : false,
              "blurEventHandler" : false,
              "changeEventHandler" : false,
              "toStringMethod" : false,
              "maxDomNodesToInstrument" : 5000
            },
            "eventWrapperSettings" : {
              "click" : false,
              "mouseUp" : false,
              "change" : false,
              "blur" : false,
              "touchStart" : false,
              "touchEnd" : false
            },
            "globalEventCaptureSettings" : {
              "mouseUp" : true,
              "mouseDown" : true,
              "click" : true,
              "doubleClick" : true,
              "keyUp" : true,
              "keyDown" : true,
              "scroll" : true,
              "additionalEventCapturedAsUserInput" : ""
            }
          },
          "browserRestrictionSettings" : {
            "browserRestrictions" : [ {
              "browserType" : "INTERNET_EXPLORER",
              "browserVersion" : "0",
              "platform" : "ALL",
              "comparator" : "EQUALS"
            } ],
            "mode" : "EXCLUDE"
          },
          "javaScriptInjectionRules" : [ {
            "enabled" : true,
            "urlOperator" : "CONTAINS",
            "urlPattern" : "/lorem/ipsum.jsp",
            "rule" : "AFTER_SPECIFIC_HTML",
            "htmlPattern" : "</title>"
          } ],
          "ipAddressRestrictionSettings" : {
            "ipAddressRestrictions" : [ {
              "subnetMask" : 3,
              "address" : "10.0.0.1"
            }, {
              "address" : "10.0.0.1",
              "addressTo" : "10.0.0.2"
            } ],
            "mode" : "EXCLUDE"
          }
        },
        "userActionNamingSettings" : {
          "placeholders" : [ {
            "name" : "myPlaceholder",
            "input" : "PAGE_URL",
            "processingPart" : "ALL",
            "processingSteps" : [ {
              "type" : "SUBSTRING",
              "patternBefore" : ".*b",
              "patternBeforeSearchType" : "FIRST",
              "patternAfter" : ".*a",
              "patternAfterSearchType" : "LAST",
              "replacement" : "value"
            } ],
            "metadataId" : 1,
            "useGuessedElementIdentifier" : false
          } ],
          "loadActionNamingRules" : [ {
            "template" : "Loading of {myPlaceholder}",
            "conditions" : [ {
              "operand1" : "{myPlaceholder}",
              "operand2" : "foo",
              "operator" : "CONTAINS"
            } ]
          } ],
          "xhrActionNamingRules" : [ {
            "template" : "Loading of {myPlaceholder}",
            "conditions" : [ {
              "operand1" : "{myPlaceholder}",
              "operand2" : "foo",
              "operator" : "CONTAINS"
            } ]
          } ],
          "ignoreCase" : true,
          "splitUserActionsByDomain" : true
        },
        "metaDataCaptureSettings" : [ {
          "type" : "JAVA_SCRIPT_VARIABLE",
          "capturingName" : "variableName",
          "name" : "display name"
        } ],
        "conversionGoals" : [ {
          "name" : "conversionGoalName",
          "type" : "UserAction",
          "destinationDetails" : {
            "urlOrPath" : "url or path",
            "matchType" : "Begins",
            "caseSensitive" : false
          },
          "userActionDetails" : {
            "value" : "value to match",
            "caseSensitive" : true,
            "matchType" : "Ends",
            "matchEntity" : "ActionName",
            "actionType" : "Load"
          },
          "visitDurationDetails" : {
            "durationInMillis" : 1
          },
          "visitNumActionDetails" : {
            "numUserActions" : 2
          }
        } ]
      }
    },
    "WebApplicationConfigBrowserRestriction" : {
      "type" : "object",
      "required" : [ "browserType" ],
      "properties" : {
        "browserVersion" : {
          "type" : "string",
          "description" : "The version of the browser that is used."
        },
        "browserType" : {
          "type" : "string",
          "description" : "The type of the browser that is used.",
          "enum" : [ "ANDROID_WEBKIT", "BOTS_SPIDERS", "CHROME", "EDGE", "FIREFOX", "INTERNET_EXPLORER", "OPERA", "SAFARI" ]
        },
        "platform" : {
          "type" : "string",
          "description" : "The platform on which the browser is being used.",
          "enum" : [ "ALL", "DESKTOP", "MOBILE" ]
        },
        "comparator" : {
          "type" : "string",
          "description" : "Compares different browsers together.",
          "enum" : [ "EQUALS", "GREATER_THAN_OR_EQUAL", "LOWER_THAN_OR_EQUAL" ]
        }
      },
      "description" : "Browser exclusion rules for the browsers that are to be excluded."
    },
    "WebApplicationConfigBrowserRestrictionSettings" : {
      "type" : "object",
      "required" : [ "mode" ],
      "properties" : {
        "mode" : {
          "type" : "string",
          "description" : "The mode of the list of browser restrictions.",
          "enum" : [ "EXCLUDE", "INCLUDE" ]
        },
        "browserRestrictions" : {
          "type" : "array",
          "description" : "A list of browser restrictions.",
          "items" : {
            "$ref" : "#/definitions/WebApplicationConfigBrowserRestriction"
          }
        }
      },
      "description" : "Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode."
    },
    "WebApplicationConfigIpAddressRestrictionSettings" : {
      "type" : "object",
      "required" : [ "mode" ],
      "properties" : {
        "mode" : {
          "type" : "string",
          "description" : "The mode of the list of ip address restrictions.",
          "enum" : [ "EXCLUDE", "INCLUDE" ]
        },
        "ipAddressRestrictions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IpAddressRange"
          }
        }
      },
      "description" : "Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode."
    },
    "ApplicationDataPrivacyList" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationDataPrivacy"
          }
        }
      }
    },
    "ApplicationDetectionRuleConfig" : {
      "type" : "object",
      "required" : [ "applicationIdentifier", "filterConfig" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadataDtoImpl"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "12345678-abcd-1234-abcd-1234567890ab",
          "description" : "The ID of the rule."
        },
        "order" : {
          "type" : "string",
          "description" : "The order of the rule in the rules list. \n\nThe rules are evaluated from top to bottom. The first matching rule applies.",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "applicationIdentifier" : {
          "type" : "string",
          "example" : "APPLICATION-123456",
          "description" : "The Dynatrace entity ID of the application, for example `APPLICATION-4A3B43`. \n\n You must use an existing ID. If you need to create a rule for an application that doesn't exist yet, [create an application first](https://www.dynatrace.com/support/help/shortlink/api-config-web-app-post-web-app) and then configure detection rules for it."
        },
        "filterConfig" : {
          "description" : "The condition of the rule.",
          "$ref" : "#/definitions/ApplicationFilter"
        }
      },
      "description" : "Application detection rule.",
      "example" : {
        "metadata" : {
          "configurationVersions" : [ 4, 2 ],
          "clusterVersion" : "0.0.0."
        },
        "id" : "12345678-abcd-1234-abcd-1234567890ab",
        "applicationIdentifier" : "APPLICATION-123456",
        "filterConfig" : {
          "pattern" : "myapp.example.com",
          "applicationMatchType" : "EQUALS",
          "applicationMatchTarget" : "DOMAIN"
        }
      }
    },
    "ApplicationFilter" : {
      "type" : "object",
      "required" : [ "applicationMatchTarget", "applicationMatchType", "pattern" ],
      "properties" : {
        "pattern" : {
          "type" : "string",
          "example" : "myapp.example.com",
          "description" : "The value to look for.",
          "minLength" : 1,
          "maxLength" : 200
        },
        "applicationMatchType" : {
          "type" : "string",
          "example" : "EQUALS",
          "description" : "The operator of the matching.",
          "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "MATCHES" ]
        },
        "applicationMatchTarget" : {
          "type" : "string",
          "example" : "DOMAIN",
          "description" : "Where to look for the the **pattern** value.",
          "enum" : [ "DOMAIN", "URL" ]
        }
      },
      "description" : "The condition of an application detection rule."
    },
    "ConfigurationMetadataDtoImpl" : {
      "type" : "object",
      "properties" : {
        "configurationVersions" : {
          "type" : "array",
          "description" : "A Sorted list of the version numbers of the configuration.",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "clusterVersion" : {
          "type" : "string",
          "description" : "Dynatrace server version."
        }
      },
      "description" : "Metadata useful for debugging"
    },
    "ApplicationTypeComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "AGENTLESS_MONITORING", "AMP", "AUTO_INJECTED", "DEFAULT", "SAAS_VENDOR" ]
          }
        },
        "description" : "Comparison for `APPLICATION_TYPE` attributes."
      } ]
    },
    "AutoTag" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "12345678-abcd-1234-abcd-1234567890ab",
          "description" : "The ID of the auto-tag."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the auto-tag, which is applied to entities. \n\nAdditionally you can specify a **valueFormat** in the tag rule. In that case the tag is used in the `name:valueFormat` format. \n\nFor example you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`.",
          "minLength" : 1,
          "maxLength" : 100
        },
        "rules" : {
          "type" : "array",
          "description" : "The list of rules for tag usage. \n\nWhen there are multiple rules, the OR logic applies.",
          "items" : {
            "$ref" : "#/definitions/AutoTagRule"
          }
        }
      },
      "description" : "Configuration of an auto-tag. It defines the conditions of tag usage and the tag value.",
      "example" : {
        "name" : "sampleAutoTag",
        "rules" : [ {
          "type" : "SERVICE",
          "enabled" : true,
          "valueFormat" : "myTagValue {Service:DetectedName}",
          "propagationTypes" : [ "SERVICE_TO_HOST_LIKE" ],
          "conditions" : [ {
            "key" : {
              "attribute" : "SERVICE_DATABASE_NAME"
            },
            "comparisonInfo" : {
              "type" : "STRING",
              "operator" : "BEGINS_WITH",
              "value" : "sample",
              "negate" : false,
              "caseSensitive" : false
            }
          }, {
            "key" : {
              "attribute" : "SERVICE_WEB_SERVER_NAME"
            },
            "comparisonInfo" : {
              "type" : "STRING",
              "operator" : "EXISTS",
              "negate" : false
            }
          }, {
            "key" : {
              "attribute" : "PROCESS_GROUP_CUSTOM_METADATA",
              "type" : "PROCESS_CUSTOM_METADATA_KEY",
              "dynamicKey" : {
                "source" : "KUBERNETES",
                "key" : "kubernetes.io/limit-ranger"
              }
            },
            "comparisonInfo" : {
              "type" : "STRING",
              "operator" : "BEGINS_WITH",
              "value" : "sample",
              "negate" : false,
              "caseSensitive" : false
            }
          } ]
        } ]
      }
    },
    "AutoTagRule" : {
      "type" : "object",
      "required" : [ "conditions", "enabled", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of entities to which the rule applies.",
          "enum" : [ "APPLICATION", "AWS_APPLICATION_LOAD_BALANCER", "AWS_CLASSIC_LOAD_BALANCER", "AWS_NETWORK_LOAD_BALANCER", "AWS_RELATIONAL_DATABASE_SERVICE", "AZURE", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "DCRUM_APPLICATION", "ESXI_HOST", "EXTERNAL_SYNTHETIC_TEST", "HOST", "HTTP_CHECK", "KUBERNETES_NODE", "MOBILE_APPLICATION", "PROCESS_GROUP", "SERVICE", "SYNTHETIC_TEST" ]
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Tag rule is enabled (`true`) or disabled (`false`)."
        },
        "valueFormat" : {
          "type" : "string",
          "description" : "The value of the auto-tag. If specified, the tag is used in the `name:valueFormat` format. \n\nFor example, you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`. \n\nYou can use the following placeholders here: \n\n* `{AwsAutoScalingGroup:Name}` \n* `{AwsAvailabilityZone:Name}` \n* `{AwsElasticLoadBalancer:Name}` \n* `{AwsRelationalDatabaseService:DBName}` \n* `{AwsRelationalDatabaseService:Endpoint}` \n* `{AwsRelationalDatabaseService:Engine}` \n* `{AwsRelationalDatabaseService:InstanceClass}` \n* `{AwsRelationalDatabaseService:Name}` \n* `{AwsRelationalDatabaseService:Port}` \n* `{AzureRegion:Name}` \n* `{AzureScaleSet:Name}` \n* `{AzureVm:Name}` \n* `{CloudFoundryOrganization:Name}` \n* `{CustomDevice:DetectedName}` \n* `{CustomDevice:DnsName}` \n* `{CustomDevice:IpAddress}` \n* `{CustomDevice:Port}` \n* `{DockerContainerGroupInstance:ContainerName}` \n* `{DockerContainerGroupInstance:FullImageName}` \n* `{DockerContainerGroupInstance:ImageVersion}` \n* `{DockerContainerGroupInstance:StrippedImageName}` \n* `{ESXIHost:HardwareModel}` \n* `{ESXIHost:HardwareVendor}` \n* `{ESXIHost:Name}` \n* `{ESXIHost:ProductName}` \n* `{ESXIHost:ProductVersion}` \n* `{Ec2Instance:AmiId}` \n* `{Ec2Instance:BeanstalkEnvironmentName}` \n* `{Ec2Instance:InstanceId}` \n* `{Ec2Instance:InstanceType}` \n* `{Ec2Instance:LocalHostName}` \n* `{Ec2Instance:Name}` \n* `{Ec2Instance:PublicHostName}` \n* `{Ec2Instance:SecurityGroup}` \n* `{GoogleComputeInstance:Id}` \n* `{GoogleComputeInstance:IpAddresses}` \n* `{GoogleComputeInstance:MachineType}` \n* `{GoogleComputeInstance:Name}` \n* `{GoogleComputeInstance:ProjectId}` \n* `{GoogleComputeInstance:Project}` \n* `{Host:AWSNameTag}` \n* `{Host:AixLogicalCpuCount}` \n* `{Host:AzureHostName}` \n* `{Host:AzureSiteName}` \n* `{Host:BoshDeploymentId}` \n* `{Host:BoshInstanceId}` \n* `{Host:BoshInstanceName}` \n* `{Host:BoshName}` \n* `{Host:BoshStemcellVersion}` \n* `{Host:CpuCores}` \n* `{Host:DetectedName}` \n* `{Host:Environment:AppName}` \n* `{Host:Environment:BoshReleaseVersion}` \n* `{Host:Environment:Environment}` \n* `{Host:Environment:Link}` \n* `{Host:Environment:Organization}` \n* `{Host:Environment:Owner}` \n* `{Host:Environment:Support}` \n* `{Host:IpAddress}` \n* `{Host:LogicalCpuCores}` \n* `{Host:OneAgentCustomHostName}` \n* `{Host:OperatingSystemVersion}` \n* `{Host:PaasMemoryLimit}` \n* `{HostGroup:Name}` \n* `{KubernetesCluster:Name}` \n* `{KubernetesNode:DetectedName}` \n* `{OpenstackAvailabilityZone:Name}` \n* `{OpenstackZone:Name}` \n* `{OpenstackComputeNode:Name}` \n* `{OpenstackProject:Name}` \n* `{OpenstackVm:UnstanceType}` \n* `{OpenstackVm:Name}` \n* `{OpenstackVm:SecurityGroup}` \n* `{ProcessGroup:AmazonECRImageAccountId}` \n* `{ProcessGroup:AmazonECRImageRegion}` \n* `{ProcessGroup:AmazonECSCluster}` \n* `{ProcessGroup:AmazonECSContainerName}` \n* `{ProcessGroup:AmazonECSFamily}` \n* `{ProcessGroup:AmazonECSRevision}` \n* `{ProcessGroup:AmazonLambdaFunctionName}` \n* `{ProcessGroup:AmazonRegion}` \n* `{ProcessGroup:ApacheConfigPath}` \n* `{ProcessGroup:ApacheSparkMasterIpAddress}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AspDotNetCoreApplicationPath}` \n* `{ProcessGroup:AzureHostName}` \n* `{ProcessGroup:AzureSiteName}` \n* `{ProcessGroup:CassandraClusterName}` \n* `{ProcessGroup:CatalinaBase}` \n* `{ProcessGroup:CatalinaHome}` \n* `{ProcessGroup:CloudFoundryAppId}` \n* `{ProcessGroup:CloudFoundryAppName}` \n* `{ProcessGroup:CloudFoundryInstanceIndex}` \n* `{ProcessGroup:CloudFoundrySpaceId}` \n* `{ProcessGroup:CloudFoundrySpaceName}` \n* `{ProcessGroup:ColdFusionJvmConfigFile}` \n* `{ProcessGroup:ColdFusionServiceName}` \n* `{ProcessGroup:CommandLineArgs}` \n* `{ProcessGroup:DetectedName}` \n* `{ProcessGroup:DotNetCommandPath}` \n* `{ProcessGroup:DotNetCommand}` \n* `{ProcessGroup:DotNetClusterId}` \n* `{ProcessGroup:DotNetNodeId}` \n* `{ProcessGroup:ElasticsearchClusterName}` \n* `{ProcessGroup:ElasticsearchNodeName}` \n* `{ProcessGroup:EquinoxConfigPath}` \n* `{ProcessGroup:ExeName}` \n* `{ProcessGroup:ExePath}` \n* `{ProcessGroup:GlassFishDomainName}` \n* `{ProcessGroup:GlassFishInstanceName}` \n* `{ProcessGroup:GoogleAppEngineInstance}` \n* `{ProcessGroup:GoogleAppEngineService}` \n* `{ProcessGroup:GoogleCloudProject}` \n* `{ProcessGroup:HybrisBinDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisConfigDirectory}` \n* `{ProcessGroup:HybrisDataDirectory}` \n* `{ProcessGroup:IBMCicsRegion}` \n* `{ProcessGroup:IBMCtgName}` \n* `{ProcessGroup:IBMImsConnectRegion}` \n* `{ProcessGroup:IBMImsControlRegion}` \n* `{ProcessGroup:IBMImsMessageProcessingRegion}` \n* `{ProcessGroup:IBMImsSoapGwName}` \n* `{ProcessGroup:IBMIntegrationNodeName}` \n* `{ProcessGroup:IBMIntegrationServerName}` \n* `{ProcessGroup:IISAppPool}` \n* `{ProcessGroup:IISRoleName}` \n* `{ProcessGroup:JbossHome}` \n* `{ProcessGroup:JbossMode}` \n* `{ProcessGroup:JbossServerName}` \n* `{ProcessGroup:JavaJarFile}` \n* `{ProcessGroup:JavaJarPath}` \n* `{ProcessGroup:JavaMainCLass}` \n* `{ProcessGroup:KubernetesBasePodName}` \n* `{ProcessGroup:KubernetesContainerName}` \n* `{ProcessGroup:KubernetesFullPodName}` \n* `{ProcessGroup:KubernetesNamespace}` \n* `{ProcessGroup:KubernetesPodUid}` \n* `{ProcessGroup:MssqlInstanceName}` \n* `{ProcessGroup:NodeJsAppBaseDirectory}` \n* `{ProcessGroup:NodeJsAppName}` \n* `{ProcessGroup:NodeJsScriptName}` \n* `{ProcessGroup:OracleSid}` \n* `{ProcessGroup:PHPScriptPath}` \n* `{ProcessGroup:PHPWorkingDirectory}` \n* `{ProcessGroup:Ports}` \n* `{ProcessGroup:RubyAppRootPath}` \n* `{ProcessGroup:RubyScriptPath}` \n* `{ProcessGroup:SoftwareAGInstallRoot}` \n* `{ProcessGroup:SoftwareAGProductPropertyName}` \n* `{ProcessGroup:SpringBootAppName}` \n* `{ProcessGroup:SpringBootProfileName}` \n* `{ProcessGroup:SpringBootStartupClass}` \n* `{ProcessGroup:TIBCOBusinessWorksAppNodeName}` \n* `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeAppName}` \n* `{ProcessGroup:TIBCOBusinessWorksCeVersion}` \n* `{ProcessGroup:TIBCOBusinessWorksDomainName}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}` \n* `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}` \n* `{ProcessGroup:TIBCOBusinessWorksHome}` \n* `{ProcessGroup:VarnishInstanceName}` \n* `{ProcessGroup:WebLogicClusterName}` \n* `{ProcessGroup:WebLogicDomainName}` \n* `{ProcessGroup:WebLogicHome}` \n* `{ProcessGroup:WebLogicName}` \n* `{ProcessGroup:WebSphereCellName}` \n* `{ProcessGroup:WebSphereClusterName}` \n* `{ProcessGroup:WebSphereNodeName}` \n* `{ProcessGroup:WebSphereServerName}` \n* `{ProcessGroup:ActorSystem}` \n* `{Service:STGServerName}` \n* `{Service:DatabaseHostName}` \n* `{Service:DatabaseName}` \n* `{Service:DatabaseVendor}` \n* `{Service:DetectedName}` \n* `{Service:EndpointPath}` \n* `{Service:EndpointPathGatewayUrl}` \n* `{Service:IIBApplicationName}` \n* `{Service:MessageListenerClassName}` \n* `{Service:Port}` \n* `{Service:PublicDomainName}` \n* `{Service:RemoteEndpoint}` \n* `{Service:RemoteName}` \n* `{Service:WebApplicationId}` \n* `{Service:WebContextRoot}` \n* `{Service:WebServerName}` \n* `{Service:WebServiceNamespace}` \n* `{Service:WebServiceName}` \n* `{VmwareDatacenter:Name}` \n* `{VmwareVm:Name}` \n"
        },
        "propagationTypes" : {
          "type" : "array",
          "description" : "How to apply the tag to underlying entities: \n\n* `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services. \n * `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services. \n\n* `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups. \n * `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by the process groups. \n\n* `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts.",
          "items" : {
            "type" : "string",
            "enum" : [ "HOST_TO_PROCESS_GROUP_INSTANCE", "PROCESS_GROUP_TO_HOST", "PROCESS_GROUP_TO_SERVICE", "SERVICE_TO_HOST_LIKE", "SERVICE_TO_PROCESS_GROUP_LIKE" ]
          }
        },
        "conditions" : {
          "type" : "array",
          "description" : "A list of matching rules for the auto-tag. \n\nThe tag applies only when **all** conditions are fulfilled.",
          "items" : {
            "$ref" : "#/definitions/EntityRuleEngineCondition"
          },
          "maxItems" : 30,
          "minItems" : 1
        }
      },
      "description" : "A rule for the auto-tag. \n\n Defines the conditions of tag usage."
    },
    "AzureComputeModeComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "DEDICATED", "SHARED" ]
          }
        },
        "description" : "Comparison for `AZURE_COMPUTE_MODE` attributes."
      } ]
    },
    "AzureSkuComparision" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "BASIC", "FREE", "PREMIUM", "SHARED", "STANDARD" ]
          }
        },
        "description" : "Comparison for `AZURE_SKU` attributes."
      } ]
    },
    "BitnessComparision" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "32", "64" ]
          }
        },
        "description" : "Comparison for `BITNESS` attributes."
      } ]
    },
    "CloudTypeComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "AZURE", "EC2", "GOOGLE_CLOUD_PLATFORM", "OPENSTACK", "ORACLE" ]
          }
        },
        "description" : "Comparison for `CLOUD_TYPE` attributes."
      } ]
    },
    "ComparisonBasic" : {
      "type" : "object",
      "required" : [ "negate", "operator", "type" ],
      "discriminator" : "type",
      "properties" : {
        "operator" : {
          "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
          "$ref" : "#/definitions/Enum"
        },
        "value" : {
          "type" : "object",
          "description" : "The value to compare to."
        },
        "negate" : {
          "type" : "boolean",
          "description" : "Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**."
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nSTRING -> StringComparison\nINDEXED_NAME -> IndexedNameComparison\nINDEXED_STRING -> IndexedStringComparison\nINTEGER -> IntegerComparison\nSERVICE_TYPE -> ServiceTypeComparison\nPAAS_TYPE -> PaasTypeComparison\nCLOUD_TYPE -> CloudTypeComparison\nAZURE_SKU -> AzureSkuComparision\nAZURE_COMPUTE_MODE -> AzureComputeModeComparison\nENTITY_ID -> EntityIdComparison\nSIMPLE_TECH -> SimpleTechComparison\nSIMPLE_HOST_TECH -> SimpleHostTechComparison\nSERVICE_TOPOLOGY -> ServiceTopologyComparison\nDATABASE_TOPOLOGY -> DatabaseTopologyComparison\nOS_TYPE -> OsTypeComparison\nHYPERVISOR_TYPE -> HypervisorTypeComparision\nIP_ADDRESS -> IpAddressComparison\nOS_ARCHITECTURE -> OsArchitectureComparison\nBITNESS -> BitnessComparision\nAPPLICATION_TYPE -> ApplicationTypeComparison\nMOBILE_PLATFORM -> MobilePlatformComparison\nCUSTOM_APPLICATION_TYPE -> CustomApplicationTypeComparison\nDCRUM_DECODER_TYPE -> DcrumDecoderComparison\nSYNTHETIC_ENGINE_TYPE -> SyntheticEngineTypeComparison\nTAG -> TagComparison\nINDEXED_TAG -> IndexedTagComparison\n",
          "enum" : [ "STRING", "INDEXED_NAME", "INDEXED_STRING", "INTEGER", "SERVICE_TYPE", "PAAS_TYPE", "CLOUD_TYPE", "AZURE_SKU", "AZURE_COMPUTE_MODE", "ENTITY_ID", "SIMPLE_TECH", "SIMPLE_HOST_TECH", "SERVICE_TOPOLOGY", "DATABASE_TOPOLOGY", "OS_TYPE", "HYPERVISOR_TYPE", "IP_ADDRESS", "OS_ARCHITECTURE", "BITNESS", "APPLICATION_TYPE", "MOBILE_PLATFORM", "CUSTOM_APPLICATION_TYPE", "DCRUM_DECODER_TYPE", "SYNTHETIC_ENGINE_TYPE", "TAG", "INDEXED_TAG" ]
        }
      },
      "description" : "Defines how the matching is actually performed: what and how are we comparing. \n\nThe actual field set and the list of possible values of the **operator** field depend on the **type** of the comparison. \n\nFind the list of actual models in the description of the **type** field and check the description of the model you need."
    },
    "ConditionKey" : {
      "type" : "object",
      "required" : [ "attribute" ],
      "discriminator" : "type",
      "properties" : {
        "attribute" : {
          "type" : "string",
          "description" : "The attribute to be used for comparision.",
          "enum" : [ "APPMON_SERVER_NAME", "APPMON_SYSTEM_PROFILE_NAME", "AWS_ACCOUNT_ID", "AWS_ACCOUNT_NAME", "AWS_APPLICATION_LOAD_BALANCER_NAME", "AWS_APPLICATION_LOAD_BALANCER_TAGS", "AWS_AUTO_SCALING_GROUP_NAME", "AWS_AUTO_SCALING_GROUP_TAGS", "AWS_AVAILABILITY_ZONE_NAME", "AWS_CLASSIC_LOAD_BALANCER_BACKEND_PORTS", "AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS", "AWS_CLASSIC_LOAD_BALANCER_NAME", "AWS_CLASSIC_LOAD_BALANCER_TAGS", "AWS_NETWORK_LOAD_BALANCER_NAME", "AWS_NETWORK_LOAD_BALANCER_TAGS", "AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME", "AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT", "AWS_RELATIONAL_DATABASE_SERVICE_ENGINE", "AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS", "AWS_RELATIONAL_DATABASE_SERVICE_NAME", "AWS_RELATIONAL_DATABASE_SERVICE_PORT", "AWS_RELATIONAL_DATABASE_SERVICE_TAGS", "AZURE_ENTITY_NAME", "AZURE_ENTITY_TAGS", "AZURE_MGMT_GROUP_NAME", "AZURE_MGMT_GROUP_UUID", "AZURE_REGION_NAME", "AZURE_SCALE_SET_NAME", "AZURE_SUBSCRIPTION_NAME", "AZURE_SUBSCRIPTION_UUID", "AZURE_TENANT_NAME", "AZURE_TENANT_UUID", "AZURE_VM_NAME", "BROWSER_MONITOR_NAME", "BROWSER_MONITOR_TAGS", "CLOUD_APPLICATION_NAME", "CLOUD_APPLICATION_NAMESPACE_NAME", "CLOUD_FOUNDRY_FOUNDATION_NAME", "CLOUD_FOUNDRY_ORG_NAME", "CUSTOM_APPLICATION_NAME", "CUSTOM_APPLICATION_PLATFORM", "CUSTOM_APPLICATION_TAGS", "CUSTOM_APPLICATION_TYPE", "CUSTOM_DEVICE_DETECTED_NAME", "CUSTOM_DEVICE_DNS_ADDRESS", "CUSTOM_DEVICE_GROUP_NAME", "CUSTOM_DEVICE_GROUP_TAGS", "CUSTOM_DEVICE_IP_ADDRESS", "CUSTOM_DEVICE_METADATA", "CUSTOM_DEVICE_NAME", "CUSTOM_DEVICE_PORT", "CUSTOM_DEVICE_TAGS", "CUSTOM_DEVICE_TECHNOLOGY", "DATA_CENTER_SERVICE_DECODER_TYPE", "DATA_CENTER_SERVICE_IP_ADDRESS", "DATA_CENTER_SERVICE_METADATA", "DATA_CENTER_SERVICE_NAME", "DATA_CENTER_SERVICE_PORT", "DATA_CENTER_SERVICE_TAGS", "DOCKER_CONTAINER_NAME", "DOCKER_FULL_IMAGE_NAME", "DOCKER_IMAGE_VERSION", "DOCKER_STRIPPED_IMAGE_NAME", "EC2_INSTANCE_AMI_ID", "EC2_INSTANCE_AWS_INSTANCE_TYPE", "EC2_INSTANCE_AWS_SECURITY_GROUP", "EC2_INSTANCE_BEANSTALK_ENV_NAME", "EC2_INSTANCE_ID", "EC2_INSTANCE_NAME", "EC2_INSTANCE_PRIVATE_HOST_NAME", "EC2_INSTANCE_PUBLIC_HOST_NAME", "EC2_INSTANCE_TAGS", "ENTERPRISE_APPLICATION_DECODER_TYPE", "ENTERPRISE_APPLICATION_IP_ADDRESS", "ENTERPRISE_APPLICATION_METADATA", "ENTERPRISE_APPLICATION_NAME", "ENTERPRISE_APPLICATION_PORT", "ENTERPRISE_APPLICATION_TAGS", "ESXI_HOST_CLUSTER_NAME", "ESXI_HOST_HARDWARE_MODEL", "ESXI_HOST_HARDWARE_VENDOR", "ESXI_HOST_NAME", "ESXI_HOST_PRODUCT_NAME", "ESXI_HOST_PRODUCT_VERSION", "ESXI_HOST_TAGS", "EXTERNAL_MONITOR_ENGINE_DESCRIPTION", "EXTERNAL_MONITOR_ENGINE_NAME", "EXTERNAL_MONITOR_ENGINE_TYPE", "EXTERNAL_MONITOR_NAME", "EXTERNAL_MONITOR_TAGS", "GEOLOCATION_SITE_NAME", "GOOGLE_CLOUD_PLATFORM_ZONE_NAME", "GOOGLE_COMPUTE_INSTANCE_ID", "GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE", "GOOGLE_COMPUTE_INSTANCE_NAME", "GOOGLE_COMPUTE_INSTANCE_PROJECT", "GOOGLE_COMPUTE_INSTANCE_PROJECT_ID", "GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES", "HOST_AIX_LOGICAL_CPU_COUNT", "HOST_AIX_SIMULTANEOUS_THREADS", "HOST_AIX_VIRTUAL_CPU_COUNT", "HOST_ARCHITECTURE", "HOST_AWS_NAME_TAG", "HOST_AZURE_COMPUTE_MODE", "HOST_AZURE_SKU", "HOST_AZURE_WEB_APPLICATION_HOST_NAMES", "HOST_AZURE_WEB_APPLICATION_SITE_NAMES", "HOST_BITNESS", "HOST_BOSH_AVAILABILITY_ZONE", "HOST_BOSH_DEPLOYMENT_ID", "HOST_BOSH_INSTANCE_ID", "HOST_BOSH_INSTANCE_NAME", "HOST_BOSH_NAME", "HOST_BOSH_STEMCELL_VERSION", "HOST_CLOUD_TYPE", "HOST_CPU_CORES", "HOST_CUSTOM_METADATA", "HOST_DETECTED_NAME", "HOST_GROUP_ID", "HOST_GROUP_NAME", "HOST_HYPERVISOR_TYPE", "HOST_IP_ADDRESS", "HOST_KUBERNETES_LABELS", "HOST_LOGICAL_CPU_CORES", "HOST_NAME", "HOST_ONEAGENT_CUSTOM_HOST_NAME", "HOST_OS_TYPE", "HOST_OS_VERSION", "HOST_PAAS_MEMORY_LIMIT", "HOST_PAAS_TYPE", "HOST_TAGS", "HOST_TECHNOLOGY", "HTTP_MONITOR_NAME", "HTTP_MONITOR_TAGS", "KUBERNETES_CLUSTER_NAME", "KUBERNETES_NODE_NAME", "MOBILE_APPLICATION_NAME", "MOBILE_APPLICATION_PLATFORM", "MOBILE_APPLICATION_TAGS", "NAME_OF_COMPUTE_NODE", "OPENSTACK_ACCOUNT_NAME", "OPENSTACK_ACCOUNT_PROJECT_NAME", "OPENSTACK_AVAILABILITY_ZONE_NAME", "OPENSTACK_PROJECT_NAME", "OPENSTACK_REGION_NAME", "OPENSTACK_VM_INSTANCE_TYPE", "OPENSTACK_VM_NAME", "OPENSTACK_VM_SECURITY_GROUP", "PROCESS_GROUP_AZURE_HOST_NAME", "PROCESS_GROUP_AZURE_SITE_NAME", "PROCESS_GROUP_CUSTOM_METADATA", "PROCESS_GROUP_DETECTED_NAME", "PROCESS_GROUP_ID", "PROCESS_GROUP_INSTANCE_CUSTOM_METADATA", "PROCESS_GROUP_LISTEN_PORT", "PROCESS_GROUP_NAME", "PROCESS_GROUP_PREDEFINED_METADATA", "PROCESS_GROUP_TAGS", "PROCESS_GROUP_TECHNOLOGY", "PROCESS_GROUP_TECHNOLOGY_EDITION", "PROCESS_GROUP_TECHNOLOGY_VERSION", "SERVICE_AKKA_ACTOR_SYSTEM", "SERVICE_CTG_SERVICE_NAME", "SERVICE_DATABASE_HOST_NAME", "SERVICE_DATABASE_NAME", "SERVICE_DATABASE_TOPOLOGY", "SERVICE_DATABASE_VENDOR", "SERVICE_DETECTED_NAME", "SERVICE_ESB_APPLICATION_NAME", "SERVICE_IBM_CTG_GATEWAY_URL", "SERVICE_IIB_APPLICATION_NAME", "SERVICE_MESSAGING_LISTENER_CLASS_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REMOTE_ENDPOINT", "SERVICE_REMOTE_SERVICE_NAME", "SERVICE_TAGS", "SERVICE_TECHNOLOGY", "SERVICE_TECHNOLOGY_EDITION", "SERVICE_TECHNOLOGY_VERSION", "SERVICE_TOPOLOGY", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_ENDPOINT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "VMWARE_DATACENTER_NAME", "VMWARE_VM_NAME", "WEB_APPLICATION_NAME", "WEB_APPLICATION_NAME_PATTERN", "WEB_APPLICATION_TAGS", "WEB_APPLICATION_TYPE" ]
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nPROCESS_CUSTOM_METADATA_KEY -> CustomProcessMetadataConditionKey\nHOST_CUSTOM_METADATA_KEY -> CustomHostMetadataConditionKey\nPROCESS_PREDEFINED_METADATA_KEY -> ProcessMetadataConditionKey\nSTRING -> StringConditionKey\n",
          "enum" : [ "PROCESS_CUSTOM_METADATA_KEY", "HOST_CUSTOM_METADATA_KEY", "PROCESS_PREDEFINED_METADATA_KEY", "STRING" ]
        }
      },
      "description" : "The key to identify the data we're matching. \n\nDepending on the type of the key, the actual JSON may contain additional fields. Find the list in the description of the **type** field."
    },
    "CustomApplicationTypeComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "AMAZON_ECHO", "DESKTOP", "EMBEDDED", "IOT", "MICROSOFT_HOLOLENS", "UFO" ]
          }
        },
        "description" : "Comparison for `CUSTOM_APPLICATION_TYPE` attributes."
      } ]
    },
    "CustomHostMetadataConditionKey" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ConditionKey"
      }, {
        "type" : "object",
        "required" : [ "dynamicKey" ],
        "properties" : {
          "dynamicKey" : {
            "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key.",
            "$ref" : "#/definitions/CustomHostMetadataKey"
          }
        },
        "description" : "Key for dynamic attributes with the `HOST_CUSTOM_METADATA_KEY` key format."
      } ]
    },
    "CustomHostMetadataKey" : {
      "type" : "object",
      "required" : [ "key", "source" ],
      "properties" : {
        "source" : {
          "type" : "string",
          "description" : "The source of the custom metadata.",
          "enum" : [ "ENVIRONMENT", "GOOGLE_COMPUTE_ENGINE", "PLUGIN" ]
        },
        "key" : {
          "type" : "string",
          "description" : "The actual key of the custom metadata.",
          "minLength" : 1,
          "maxLength" : 256
        }
      }
    },
    "CustomProcessMetadataConditionKey" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ConditionKey"
      }, {
        "type" : "object",
        "required" : [ "dynamicKey" ],
        "properties" : {
          "dynamicKey" : {
            "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key.",
            "$ref" : "#/definitions/CustomProcessMetadataKey"
          }
        },
        "description" : "Key for dynamic attributes with the `PROCESS_CUSTOM_METADATA_KEY` key format."
      } ]
    },
    "CustomProcessMetadataKey" : {
      "type" : "object",
      "required" : [ "key", "source" ],
      "properties" : {
        "source" : {
          "type" : "string",
          "description" : "The source of the custom metadata.",
          "enum" : [ "CLOUD_FOUNDRY", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES", "PLUGIN" ]
        },
        "key" : {
          "type" : "string",
          "description" : "The actual key of the custom metadata.",
          "minLength" : 1,
          "maxLength" : 256
        }
      }
    },
    "DatabaseTopologyComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "CLUSTER", "EMBEDDED", "FAILOVER", "IPC", "LOAD_BALANCING", "SINGLE_SERVER", "UNSPECIFIED" ]
          }
        },
        "description" : "Comparison for `DATABASE_TOPOLOGY` attributes."
      } ]
    },
    "DcrumDecoderComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "ALL_OTHER", "CITRIX_APPFLOW", "CITRIX_ICA", "CITRIX_ICA_OVER_SSL", "DB2_DRDA", "HTTP", "HTTPS", "HTTP_EXPRESS", "INFORMIX", "MYSQL", "ORACLE", "SAP_GUI", "SAP_GUI_OVER_HTTP", "SAP_GUI_OVER_HTTPS", "SAP_HANA_DB", "SAP_RFC", "SSL", "TDS" ]
          }
        },
        "description" : "Comparison for `DCRUM_DECODER_TYPE` attributes."
      } ]
    },
    "EntityIdComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to."
          }
        },
        "description" : "Comparison for `ENTITY_ID` attributes."
      } ]
    },
    "EntityRuleEngineCondition" : {
      "type" : "object",
      "required" : [ "comparisonInfo", "key" ],
      "properties" : {
        "key" : {
          "description" : "The key to identify the data we're matching.",
          "$ref" : "#/definitions/ConditionKey"
        },
        "comparisonInfo" : {
          "description" : "Defines how the matching is actually performed: what and how are we comparing.",
          "$ref" : "#/definitions/ComparisonBasic"
        }
      },
      "description" : "A condition defines how to execute matching logic for an entity."
    },
    "Enum" : {
      "type" : "object"
    },
    "HypervisorTypeComparision" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "HYPER_V", "KVM", "LPAR", "QEMU", "VIRTUAL_BOX", "VMWARE", "WPAR", "XEN" ]
          }
        },
        "description" : "Comparison for `HYPERVISOR_TYPE` attributes."
      } ]
    },
    "IndexedNameComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "CONTAINS", "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "minLength" : 0,
            "maxLength" : 80
          }
        },
        "description" : "Comparison for `INDEXED_NAME` attributes."
      } ]
    },
    "IndexedStringComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "minLength" : 0,
            "maxLength" : 80
          }
        },
        "description" : "Comparison for `INDEXED_STRING` attributes."
      } ]
    },
    "IndexedTagComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "description" : "The value to compare to.",
            "$ref" : "#/definitions/TagInfo"
          }
        },
        "description" : "Comparison for `INDEXED_TAG` attributes."
      } ]
    },
    "IntegerComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
          },
          "value" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The value to compare to."
          }
        },
        "description" : "Comparison for `INTEGER` attributes."
      } ]
    },
    "IpAddressComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "EXISTS", "IS_IP_IN_RANGE", "REGEX_MATCHES" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "minLength" : 0,
            "maxLength" : 80
          },
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "Make the comparison case-sensitive."
          }
        },
        "description" : "Comparison for `IP_ADDRESS` attributes."
      } ]
    },
    "MobilePlatformComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "ANDROID", "IOS", "LINUX", "MAC_OS", "OTHER", "TVOS", "WINDOWS" ]
          }
        },
        "description" : "Comparison for `MOBILE_PLATFORM` attributes."
      } ]
    },
    "OsArchitectureComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "ARM", "IA64", "PARISC", "PPC", "PPCLE", "S390", "SPARC", "X86", "ZOS" ]
          }
        },
        "description" : "Comparison for `OS_ARCHITECTURE` attributes."
      } ]
    },
    "OsTypeComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "AIX", "DARWIN", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS" ]
          }
        },
        "description" : "Comparison for `OS_TYPE` attributes."
      } ]
    },
    "PaasTypeComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "AWS_ECS_EC2", "AWS_ECS_FARGATE", "AWS_LAMBDA", "AZURE_WEBSITES", "CLOUD_FOUNDRY", "GOOGLE_APP_ENGINE", "HEROKU", "KUBERNETES", "OPENSHIFT" ]
          }
        },
        "description" : "Comparison for `PAAS_TYPE` attributes."
      } ]
    },
    "ProcessMetadataConditionKey" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ConditionKey"
      }, {
        "type" : "object",
        "required" : [ "dynamicKey" ],
        "properties" : {
          "dynamicKey" : {
            "type" : "string",
            "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key.",
            "enum" : [ "AMAZON_ECR_IMAGE_ACCOUNT_ID", "AMAZON_ECR_IMAGE_REGION", "AMAZON_LAMBDA_FUNCTION_NAME", "AMAZON_REGION", "APACHE_CONFIG_PATH", "APACHE_SPARK_MASTER_IP_ADDRESS", "ASP_DOT_NET_CORE_APPLICATION_PATH", "AWS_ECS_CLUSTER", "AWS_ECS_CONTAINERNAME", "AWS_ECS_FAMILY", "AWS_ECS_REVISION", "CASSANDRA_CLUSTER_NAME", "CATALINA_BASE", "CATALINA_HOME", "CLOUD_FOUNDRY_APP_ID", "CLOUD_FOUNDRY_APP_NAME", "CLOUD_FOUNDRY_INSTANCE_INDEX", "CLOUD_FOUNDRY_SPACE_ID", "CLOUD_FOUNDRY_SPACE_NAME", "COLDFUSION_JVM_CONFIG_FILE", "COLDFUSION_SERVICE_NAME", "COMMAND_LINE_ARGS", "DOTNET_COMMAND", "DOTNET_COMMAND_PATH", "DYNATRACE_CLUSTER_ID", "DYNATRACE_NODE_ID", "ELASTICSEARCH_CLUSTER_NAME", "ELASTICSEARCH_NODE_NAME", "EQUINOX_CONFIG_PATH", "EXE_NAME", "EXE_PATH", "GLASS_FISH_DOMAIN_NAME", "GLASS_FISH_INSTANCE_NAME", "GOOGLE_APP_ENGINE_INSTANCE", "GOOGLE_APP_ENGINE_SERVICE", "GOOGLE_CLOUD_PROJECT", "HYBRIS_BIN_DIRECTORY", "HYBRIS_CONFIG_DIRECTORY", "HYBRIS_DATA_DIRECTORY", "IBM_CICS_REGION", "IBM_CTG_NAME", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GW_NAME", "IBM_INTEGRATION_NODE_NAME", "IBM_INTEGRATION_SERVER_NAME", "IIS_APP_POOL", "IIS_ROLE_NAME", "JAVA_JAR_FILE", "JAVA_JAR_PATH", "JAVA_MAIN_CLASS", "JAVA_MAIN_MODULE", "JBOSS_HOME", "JBOSS_MODE", "JBOSS_SERVER_NAME", "KUBERNETES_BASE_POD_NAME", "KUBERNETES_CONTAINER_NAME", "KUBERNETES_FULL_POD_NAME", "KUBERNETES_NAMESPACE", "KUBERNETES_POD_UID", "MSSQL_INSTANCE_NAME", "NODE_JS_APP_BASE_DIRECTORY", "NODE_JS_APP_NAME", "NODE_JS_SCRIPT_NAME", "ORACLE_SID", "PHP_SCRIPT_PATH", "PHP_WORKING_DIRECTORY", "RUBY_APP_ROOT_PATH", "RUBY_SCRIPT_PATH", "RULE_RESULT", "SOFTWAREAG_INSTALL_ROOT", "SOFTWAREAG_PRODUCTPROPNAME", "SPRINGBOOT_APP_NAME", "SPRINGBOOT_PROFILE_NAME", "SPRINGBOOT_STARTUP_CLASS", "TIBCO_BUSINESSWORKS_CE_APP_NAME", "TIBCO_BUSINESSWORKS_CE_VERSION", "TIBCO_BUSINESS_WORKS_APP_NODE_NAME", "TIBCO_BUSINESS_WORKS_APP_SPACE_NAME", "TIBCO_BUSINESS_WORKS_DOMAIN_NAME", "TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE", "TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH", "TIBCO_BUSINESS_WORKS_HOME", "VARNISH_INSTANCE_NAME", "WEB_LOGIC_CLUSTER_NAME", "WEB_LOGIC_DOMAIN_NAME", "WEB_LOGIC_HOME", "WEB_LOGIC_NAME", "WEB_SPHERE_CELL_NAME", "WEB_SPHERE_CLUSTER_NAME", "WEB_SPHERE_NODE_NAME", "WEB_SPHERE_SERVER_NAME" ]
          }
        },
        "description" : "Key for dynamic attributes with the `PROCESS_PREDEFINED_METADATA_KEY` key format."
      } ]
    },
    "ServiceTopologyComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "EXTERNAL_SERVICE", "FULLY_MONITORED", "OPAQUE_SERVICE" ]
          }
        },
        "description" : "Comparison for `SERVICE_TOPOLOGY` attributes."
      } ]
    },
    "ServiceTypeComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "BACKGROUND_ACTIVITY", "CICS_SERVICE", "CUSTOM_SERVICE", "DATABASE_SERVICE", "ENTERPRISE_SERVICE_BUS_SERVICE", "EXTERNAL", "IBM_INTEGRATION_BUS_SERVICE", "IMS_SERVICE", "MESSAGING_SERVICE", "QUEUE_LISTENER_SERVICE", "RMI_SERVICE", "RPC_SERVICE", "WEB_REQUEST_SERVICE", "WEB_SERVICE" ]
          }
        },
        "description" : "Comparison for `SERVICE_TYPE` attributes."
      } ]
    },
    "SimpleHostTech" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Predefined technology, if technology is not predefined, then the verbatim type must be set",
          "enum" : [ "APPARMOR", "BOSH", "BOSHBPM", "CLOUDFOUNDRY", "CONTAINERD", "CRIO", "DIEGO_CELL", "DOCKER", "GARDEN", "GRSECURITY", "KUBERNETES", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "SELINUX" ]
        },
        "verbatimType" : {
          "type" : "string",
          "description" : "Non-predefined technology, use for custom technologies.",
          "minLength" : 0,
          "maxLength" : 128
        }
      }
    },
    "SimpleHostTechComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "description" : "The value to compare to.",
            "$ref" : "#/definitions/SimpleHostTech"
          }
        },
        "description" : "Comparison for `SIMPLE_HOST_TECH` attributes."
      } ]
    },
    "SimpleTech" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Predefined technology, if technology is not predefined, then the verbatim type must be set",
          "enum" : [ "ACTIVE_MQ", "ACTIVE_MQ_ARTEMIS", "ADO_NET", "AIX", "AKKA", "AMAZON_REDSHIFT", "AMQP", "APACHE_CAMEL", "APACHE_CASSANDRA", "APACHE_COUCH_DB", "APACHE_DERBY", "APACHE_HTTP_SERVER", "APACHE_KAFKA", "APACHE_SOLR", "APACHE_STORM", "APACHE_SYNAPSE", "APACHE_TOMCAT", "APPARMOR", "APPLICATION_INSIGHTS_SDK", "ASP_DOTNET", "ASP_DOTNET_CORE", "ASP_DOTNET_CORE_SIGNALR", "ASP_DOTNET_SIGNALR", "AWS_LAMBDA", "AWS_RDS", "AWS_SERVICE", "AXIS", "AZURE_FUNCTIONS", "AZURE_SERVICE_BUS", "AZURE_SERVICE_FABRIC", "AZURE_STORAGE", "BOSHBPM", "CITRIX", "CLOUDFOUNDRY", "CLOUDFOUNDRY_AUCTIONEER", "CLOUDFOUNDRY_BOSH", "CLOUDFOUNDRY_GOROUTER", "COLDFUSION", "CONTAINERD", "COUCHBASE", "CRIO", "CXF", "DATASTAX", "DB2", "DIEGO_CELL", "DOCKER", "DOTNET", "DOTNET_REMOTING", "ELASTIC_SEARCH", "ENVOY", "ERLANG", "ETCD", "F5_LTM", "GARDEN", "GLASSFISH", "GO", "GRPC", "GRSECURITY", "HADOOP", "HADOOP_HDFS", "HADOOP_YARN", "HAPROXY", "HEAT", "HESSIAN", "HORNET_Q", "IBM_CICS_REGION", "IBM_CICS_TRANSACTION_GATEWAY", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GATEWAY", "IBM_INTEGRATION_BUS", "IBM_MQ", "IBM_MQ_CLIENT", "IBM_WEBSHPRERE_APPLICATION_SERVER", "IBM_WEBSHPRERE_LIBERTY", "IIS", "IIS_APP_POOL", "ISTIO", "JAVA", "JAX_WS", "JBOSS", "JBOSS_EAP", "JDK_HTTP_SERVER", "JERSEY", "JETTY", "JRUBY", "JYTHON", "KUBERNETES", "LIBVIRT", "LINKERD", "MARIADB", "MEMCACHED", "MICROSOFT_SQL_SERVER", "MONGODB", "MSSQL_CLIENT", "MULE_ESB", "MYSQL", "MYSQL_CONNECTOR", "NETFLIX_SERVO", "NETTY", "NGINX", "NODE_JS", "ONEAGENT_SDK", "OPENCENSUS", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "OPENTELEMETRY", "OPENTRACING", "OPEN_LIBERTY", "ORACLE_DATABASE", "ORACLE_WEBLOGIC", "OWIN", "PERL", "PHP", "PHP_FPM", "PLAY", "POSTGRE_SQL", "POSTGRE_SQL_DOTNET_DATA_PROVIDER", "PROGRESS", "PYTHON", "RABBIT_MQ", "REDIS", "RESTEASY", "RESTLET", "RIAK", "RUBY", "SAG_WEBMETHODS_IS", "SAP", "SAP_HANADB", "SAP_HYBRIS", "SAP_MAXDB", "SAP_SYBASE", "SCALA", "SELINUX", "SHAREPOINT", "SPARK", "SPRING", "SQLITE", "THRIFT", "TIBCO", "TIBCO_BUSINESS_WORKS", "TIBCO_EMS", "VARNISH_CACHE", "VIM2", "VIRTUAL_MACHINE_KVM", "VIRTUAL_MACHINE_QEMU", "WILDFLY", "WINDOWS_CONTAINERS", "WINK", "ZERO_MQ" ]
        },
        "verbatimType" : {
          "type" : "string",
          "description" : "Non-predefined technology, use for custom technologies.",
          "minLength" : 0,
          "maxLength" : 128
        }
      }
    },
    "SimpleTechComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "description" : "The value to compare to.",
            "$ref" : "#/definitions/SimpleTech"
          }
        },
        "description" : "Comparison for `SIMPLE_TECH` attributes."
      } ]
    },
    "StringComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "EXISTS", "REGEX_MATCHES" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "minLength" : 0,
            "maxLength" : 80
          },
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "The comparison is case-sensitive (`true`) or insensitive (`false`)."
          }
        },
        "description" : "Comparison for `STRING` attributes."
      } ]
    },
    "StringConditionKey" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ConditionKey"
      }, {
        "type" : "object",
        "required" : [ "dynamicKey" ],
        "properties" : {
          "dynamicKey" : {
            "type" : "string",
            "description" : "The key of the attribute, which need dynamic keys. \n\nNot applicable otherwise, as the attibute itself acts as a key."
          }
        },
        "description" : "Key for dynamic attributes with the `STRING` key format."
      } ]
    },
    "SyntheticEngineTypeComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "CLASSIC", "CUSTOM" ]
          }
        },
        "description" : "Comparison for `SYNTHETIC_ENGINE_TYPE` attributes."
      } ]
    },
    "TagComparison" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonBasic"
      }, {
        "type" : "object",
        "required" : [ "operator" ],
        "properties" : {
          "operator" : {
            "type" : "string",
            "description" : "Operator of the comparision. \n\nYou can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "TAG_KEY_EQUALS" ]
          },
          "value" : {
            "description" : "The value to compare to.",
            "$ref" : "#/definitions/TagInfo"
          }
        },
        "description" : "Comparison for `TAG` attributes."
      } ]
    },
    "TagInfo" : {
      "type" : "object",
      "required" : [ "context", "key" ],
      "properties" : {
        "context" : {
          "type" : "string",
          "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\n Custom tags use the `CONTEXTLESS` value.",
          "enum" : [ "AWS", "AWS_GENERIC", "AZURE", "CLOUD_FOUNDRY", "CONTEXTLESS", "ENVIRONMENT", "GOOGLE_CLOUD", "KUBERNETES" ]
        },
        "key" : {
          "type" : "string",
          "description" : "The key of the tag. \n\n Custom tags have the tag value here.",
          "minLength" : 1,
          "maxLength" : 2000
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the tag. \n\n Not applicable to custom tags.",
          "minLength" : 0,
          "maxLength" : 2000
        }
      },
      "description" : "Tag of a Dynatrace entity."
    },
    "AwsIamToken" : {
      "type" : "object",
      "required" : [ "token" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "description" : "The external ID token for setting IAM Role in AWS."
        }
      },
      "description" : "The external ID token for setting IAM Role in AWS."
    },
    "AwsAuthenticationData" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the authentication: role-based or key-based.",
          "enum" : [ "KEYS", "ROLE" ]
        },
        "keyBasedAuthentication" : {
          "description" : "The credentials for the key-based authentication.\n\n Only applicable when the **type** parameter is set to `KEYS`.",
          "$ref" : "#/definitions/KeyBasedAuthentication"
        },
        "roleBasedAuthentication" : {
          "description" : "The credentials for the role-based authentication.\n\n Only applicable when the **type** parameter is set to `ROLE`.",
          "$ref" : "#/definitions/RoleBasedAuthentication"
        }
      },
      "description" : "A credentials for the AWS authentication."
    },
    "AwsConfigTag" : {
      "type" : "object",
      "required" : [ "name", "value" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The key of the AWS tag."
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the AWS tag."
        }
      },
      "description" : "An AWS tag of the resource to be monitored."
    },
    "AwsCredentialsConfig" : {
      "type" : "object",
      "required" : [ "authenticationData", "label", "partitionType", "taggedOnly", "tagsToMonitor" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "description" : "The unique ID of the credentials.",
          "readOnly" : true
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "The status of the connection to the AWS environment. \n\n * `CONNECTED`: There was a connection within last 10 minutes. \n* `DISCONNECTED`: A problem occurred with establishing connection using these credentials. Check whether the data is correct. \n* `UNINITIALIZED`: The successful connection has never been established for these credentials.",
          "readOnly" : true,
          "enum" : [ "CONNECTED", "DISCONNECTED", "UNINITIALIZED" ]
        },
        "label" : {
          "type" : "string",
          "description" : "The name of the credentials.",
          "minLength" : 1
        },
        "partitionType" : {
          "type" : "string",
          "description" : "The type of the AWS partition.",
          "enum" : [ "AWS_CN", "AWS_DEFAULT", "AWS_US_GOV" ]
        },
        "authenticationData" : {
          "description" : "The type of the AWS authentication and the respective credentials.",
          "$ref" : "#/definitions/AwsAuthenticationData"
        },
        "taggedOnly" : {
          "type" : "boolean",
          "description" : "Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)."
        },
        "tagsToMonitor" : {
          "type" : "array",
          "description" : "A list of AWS tags to be monitored. \n\nYou can specify up to 10 tags. \n\nOnly applicable when the **taggedOnly** parameter is set to `true`.",
          "items" : {
            "$ref" : "#/definitions/AwsConfigTag"
          },
          "maxItems" : 10,
          "minItems" : 0
        },
        "supportingServicesToMonitor" : {
          "type" : "array",
          "description" : "A list of supporting services to be monitored.",
          "items" : {
            "$ref" : "#/definitions/AwsSupportingServiceConfig"
          }
        }
      },
      "description" : "Configuration of an AWS credentials."
    },
    "AwsSupportingServiceConfig" : {
      "type" : "object",
      "required" : [ "monitoredMetrics", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the supporting service."
        },
        "monitoredMetrics" : {
          "type" : "array",
          "description" : "A list of metrics to be monitored for this service.",
          "items" : {
            "$ref" : "#/definitions/AwsSupportingServiceMetric"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        }
      },
      "description" : "A supporting service to be monitored."
    },
    "AwsSupportingServiceMetric" : {
      "type" : "object",
      "required" : [ "dimensions", "name", "statistic" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the metric of the supporting service."
        },
        "statistic" : {
          "type" : "string",
          "description" : "The statistic (aggregation) to be used for the metric. AVG_MIN_MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM",
          "enum" : [ "AVERAGE", "AVG_MIN_MAX", "MAXIMUM", "MINIMUM", "SAMPLE_COUNT", "SUM" ]
        },
        "dimensions" : {
          "type" : "array",
          "description" : "A list of metric's dimensions names.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        }
      },
      "description" : "A metric of supporting service to be monitored."
    },
    "KeyBasedAuthentication" : {
      "type" : "object",
      "required" : [ "accessKey", "secretKey" ],
      "properties" : {
        "accessKey" : {
          "type" : "string",
          "description" : "The ID of the access key.",
          "minLength" : 1
        },
        "secretKey" : {
          "type" : "string",
          "description" : "The secret access key.",
          "minLength" : 1
        }
      },
      "description" : "The credentials for the key-based authentication."
    },
    "RoleBasedAuthentication" : {
      "type" : "object",
      "required" : [ "accountId", "iamRole" ],
      "properties" : {
        "iamRole" : {
          "type" : "string",
          "description" : "The IAM role to be used by Dynatrace to get monitoring data.",
          "minLength" : 1
        },
        "accountId" : {
          "type" : "string",
          "description" : "The ID of the Amazon account.",
          "minLength" : 1
        },
        "externalId" : {
          "type" : "string",
          "description" : "The external ID token for setting an IAM role. \n\n You can obtain it with the `GET /aws/iamExternalId` request.",
          "readOnly" : true
        }
      },
      "description" : "The credentials for the role-based authentication."
    },
    "CredentialsResponseElement" : {
      "type" : "object",
      "required" : [ "description", "name", "owner", "ownerAccessOnly", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the credentials set."
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the credentials set."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the credentials set.",
          "enum" : [ "CERTIFICATE", "TOKEN", "UNKNOWN", "USERNAME_PASSWORD" ]
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the credentials set."
        },
        "owner" : {
          "type" : "string",
          "description" : "The owner of the credential."
        },
        "ownerAccessOnly" : {
          "type" : "boolean",
          "description" : "Flag indicating that this credential is visible only to the owner."
        }
      },
      "description" : "Metadata of the credentials set.",
      "example" : {
        "name" : "Sample username-password credentials",
        "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
        "type" : "USERNAME_PASSWORD",
        "description" : "Sample credentials for demo purposes.",
        "owner" : "user@domain.com",
        "ownerAccessOnly" : "true"
      }
    },
    "CertificateCredentials" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Credentials"
      }, {
        "type" : "object",
        "required" : [ "certificate", "certificateFormat", "password" ],
        "properties" : {
          "certificate" : {
            "type" : "string",
            "description" : "The certificate in the string format."
          },
          "password" : {
            "type" : "string",
            "description" : "The password of the credential."
          },
          "certificateFormat" : {
            "type" : "string",
            "description" : "The certificate format.",
            "enum" : [ "PEM", "PKCS12", "UNKNOWN" ]
          }
        },
        "description" : "A credentials set of the `CERTIFICATE` type."
      } ]
    },
    "Credentials" : {
      "type" : "object",
      "required" : [ "description", "name", "type" ],
      "discriminator" : "type",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the credentials set."
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the credentials set."
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the credentials set.."
        },
        "ownerAccessOnly" : {
          "type" : "boolean",
          "description" : "The credentials set is available to every user (`false`) or to owner only (`true`)."
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nCERTIFICATE -> CertificateCredentials\nUSERNAME_PASSWORD -> UserPasswordCredentials\nTOKEN -> TokenCredentials\n",
          "enum" : [ "CERTIFICATE", "USERNAME_PASSWORD", "TOKEN" ]
        }
      },
      "description" : "A set of credentials for synthetic monitors.",
      "example" : {
        "name" : "Sample credentials",
        "type" : "USERNAME_PASSWORD",
        "description" : "Sample set of credentials for API documentation",
        "user" : "john.smith",
        "password" : "1234abcd",
        "ownerAccessOnly" : "true"
      }
    },
    "TokenCredentials" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Credentials"
      }, {
        "type" : "object",
        "required" : [ "token" ],
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Token in the string format."
          }
        },
        "description" : "A credentials set of the `TOKEN` type."
      } ]
    },
    "UserPasswordCredentials" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Credentials"
      }, {
        "type" : "object",
        "required" : [ "password", "user" ],
        "properties" : {
          "user" : {
            "type" : "string",
            "description" : "The username of the credentials set."
          },
          "password" : {
            "type" : "string",
            "description" : "The password of the credential."
          }
        },
        "description" : "A credentials set of the `USERNAME_PASSWORD` type."
      } ]
    },
    "CredentialsList" : {
      "type" : "object",
      "required" : [ "credentials" ],
      "properties" : {
        "credentials" : {
          "type" : "array",
          "description" : "A list of credentials sets for Synthetic monitors.",
          "items" : {
            "$ref" : "#/definitions/CredentialsResponseElement"
          }
        }
      },
      "description" : "A list of credentials sets for Synthetic monitors.",
      "example" : {
        "credentials" : [ {
          "name" : "Sample username-password credentials",
          "id" : "CREDENTIALS_VAULT-E80203F993472E6D",
          "type" : "USERNAME_PASSWORD",
          "description" : "Sample credentials for demo purposes",
          "owner" : "admin"
        }, {
          "name" : "Sample certificate credentials",
          "id" : "CREDENTIALS_VAULT-842DEF439999E15B",
          "type" : "CERTIFICATE",
          "description" : "Sample credentials for demo purposes",
          "owner" : "John.Doe@domain.com"
        }, {
          "name" : "Sample token credentials",
          "id" : "CREDENTIALS_VAULT-854345639999E15B",
          "type" : "TOKEN",
          "description" : "Sample token for demo purposes",
          "owner" : "John.Doe@domain.com"
        } ]
      }
    },
    "CustomService" : {
      "type" : "object",
      "required" : [ "enabled", "name", "queueEntryPoint", "rules" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the custom service."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the custom service, displayed in the UI.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "order" : {
          "type" : "string",
          "description" : "The order string. Sorting custom services alphabetically by their order string determines their relative ordering.\n\nTypically this is managed by Dynatrace internally and will not be present in GET responses.",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Custom service enabled/disabled."
        },
        "rules" : {
          "type" : "array",
          "description" : "The list of rules defining the custom service.",
          "items" : {
            "$ref" : "#/definitions/DetectionRule"
          },
          "maxItems" : 2000,
          "minItems" : 1
        },
        "queueEntryPoint" : {
          "type" : "boolean",
          "description" : "The queue entry point flag. \n\nSet to `true` for custom messaging services."
        },
        "queueEntryPointType" : {
          "type" : "string",
          "description" : "The queue entry point type..",
          "enum" : [ "IBM_MQ", "JMS", "KAFKA", "MSMQ", "RABBIT_MQ" ]
        },
        "processGroups" : {
          "type" : "array",
          "description" : "The list of process groups the custom service should belong to.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "example" : {
        "name" : "CustomService",
        "enabled" : true,
        "rules" : [ {
          "enabled" : true,
          "className" : "com.your.company.ClassName",
          "methodRules" : [ {
            "methodName" : "AMethod",
            "argumentTypes" : [ "java.lang.String" ],
            "returnType" : "void"
          } ]
        } ],
        "queueEntryPoint" : false
      }
    },
    "DetectionRule" : {
      "type" : "object",
      "required" : [ "enabled", "methodRules" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the detection rule."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Rule enabled/disabled."
        },
        "fileName" : {
          "type" : "string",
          "description" : "The PHP file containing the class or methods to instrument. \n\nRequired for PHP custom service. \n\n Not applicable to Java and .NET."
        },
        "fileNameMatcher" : {
          "type" : "string",
          "description" : "Matcher applying to the file name. Default value is `ENDS_WITH` (if applicable).",
          "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
        },
        "className" : {
          "type" : "string",
          "description" : "The fully qualified class or interface to instrument. \n\nRequired for Java and .NET custom services. \n\n Not applicable to PHP."
        },
        "matcher" : {
          "type" : "string",
          "description" : "Matcher applying to the class name. `STARTS_WITH` can only be used if there is at least one annotation defined. Default value is `EQUALS`.",
          "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
        },
        "methodRules" : {
          "type" : "array",
          "description" : "List of methods to instrument.",
          "items" : {
            "$ref" : "#/definitions/MethodRule"
          },
          "maxItems" : 2000,
          "minItems" : 1
        },
        "annotations" : {
          "type" : "array",
          "description" : "Additional annotations filter of the rule. \n\nOnly classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. \n\nNot applicable to PHP.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "MethodRule" : {
      "type" : "object",
      "required" : [ "methodName", "returnType" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the method rule."
        },
        "methodName" : {
          "type" : "string",
          "description" : "The method to instrument.",
          "minLength" : 1
        },
        "argumentTypes" : {
          "type" : "array",
          "description" : "Fully qualified types of argument the method expects.",
          "items" : {
            "type" : "string"
          }
        },
        "returnType" : {
          "type" : "string",
          "description" : "Fully qualified type the method returns.",
          "minLength" : 1
        }
      }
    },
    "DashboardList" : {
      "type" : "object",
      "required" : [ "dashboards" ],
      "properties" : {
        "dashboards" : {
          "type" : "array",
          "description" : "A list of short representations of dashboards.",
          "items" : {
            "$ref" : "#/definitions/DashboardStub"
          }
        }
      },
      "description" : "A list of short representations of dashboards.",
      "example" : {
        "dashboards" : [ {
          "id" : "d6740373-ff26-4681-b95f-fd5b858c97f7",
          "name" : "Home dashboard",
          "owner" : "admin"
        }, {
          "id" : "54b34dbb-2ae7-4c27-9dbc-90a4f4c68b10",
          "name" : "Databases",
          "owner" : "viewer"
        }, {
          "id" : "8525b0bf-e33c-4a92-a534-9dedc1391e10",
          "name" : "Business value",
          "owner" : "rocks"
        } ]
      }
    },
    "DashboardStub" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The ID of the dashboard."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the dashboard.",
          "readOnly" : true
        },
        "owner" : {
          "type" : "string",
          "description" : "The owner of the dashboard.",
          "readOnly" : true
        }
      },
      "description" : "A short representation of a dashboard."
    },
    "AssignedEntitiesTile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Tile"
      }, {
        "type" : "object",
        "required" : [ "assignedEntities" ],
        "properties" : {
          "assignedEntities" : {
            "type" : "array",
            "description" : "The list of Dynatrace entities, assigned to the tile.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Configuration of a tile with an assigned Dynatrace entity. \n\nAn example is the Bounce rate tile, showing the data from an assigned application."
      } ]
    },
    "AssignedEntitiesWithMetricTile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Tile"
      }, {
        "type" : "object",
        "required" : [ "assignedEntities" ],
        "properties" : {
          "assignedEntities" : {
            "type" : "array",
            "description" : "The list of Dynatrace entities, assigned to the tile.",
            "items" : {
              "type" : "string"
            }
          },
          "metric" : {
            "type" : "string",
            "description" : "The metric assigned to the tile."
          }
        },
        "description" : "Configuration of a tile with an assigned Dynatrace entity and an assigned metric. \n\nAn example is the Worldmap tile, showing the data from an assigned performance or behavior metric of an assigned application."
      } ]
    },
    "CustomChartingItemMetadataConfig" : {
      "type" : "object",
      "required" : [ "customColor" ],
      "properties" : {
        "lastModified" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The timestamp of the last metadata modification, in UTC milliseconds."
        },
        "customColor" : {
          "type" : "string",
          "description" : "The color of the metric in the chart, hex format."
        }
      },
      "description" : "Additional metadata for charted metric."
    },
    "CustomChartingTile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Tile"
      }, {
        "type" : "object",
        "properties" : {
          "filterConfig" : {
            "description" : "How the data is filtered for charting.",
            "$ref" : "#/definitions/CustomFilterConfig"
          }
        },
        "description" : "Configuration of a custom chart tile."
      } ]
    },
    "CustomFilterChartConfig" : {
      "type" : "object",
      "required" : [ "resultMetadata", "series", "type" ],
      "properties" : {
        "legendShown" : {
          "type" : "boolean",
          "description" : "Defines if a legend should be shown."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the chart.",
          "enum" : [ "PIE", "SINGLE_VALUE", "TIMESERIES", "TOP_LIST" ]
        },
        "series" : {
          "type" : "array",
          "description" : "A list of charted metrics.",
          "items" : {
            "$ref" : "#/definitions/CustomFilterChartSeriesConfig"
          }
        },
        "resultMetadata" : {
          "type" : "object",
          "description" : "Additional information about charted metric.",
          "additionalProperties" : {
            "$ref" : "#/definitions/CustomChartingItemMetadataConfig"
          }
        }
      },
      "description" : "Configuration of a custom chart."
    },
    "CustomFilterChartSeriesConfig" : {
      "type" : "object",
      "required" : [ "aggregation", "dimensions", "entityType", "metric", "type" ],
      "properties" : {
        "metric" : {
          "type" : "string",
          "description" : "The name of the charted metric."
        },
        "aggregation" : {
          "type" : "string",
          "description" : "The charted aggregation of the metric.",
          "enum" : [ "AVG", "COUNT", "DISTINCT", "FASTEST10PERCENT", "MAX", "MEDIAN", "MIN", "NONE", "OF_INTEREST_RATIO", "OTHER_RATIO", "PERCENTILE", "PER_MIN", "SLOWEST10PERCENT", "SLOWEST5PERCENT", "SUM" ]
        },
        "percentile" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The charted percentile. \n\n Only applicable if the **aggregation** is set to `PERCENTILE`."
        },
        "type" : {
          "type" : "string",
          "description" : "The visualization of the timeseries chart.",
          "enum" : [ "AREA", "BAR", "LINE" ]
        },
        "entityType" : {
          "type" : "string",
          "description" : "The type of the Dynatrace entity that delivered the charted metric."
        },
        "dimensions" : {
          "type" : "array",
          "description" : "Configuration of the charted metric splitting.",
          "items" : {
            "$ref" : "#/definitions/CustomFilterChartSeriesDimensionConfig"
          }
        },
        "sortAscending" : {
          "type" : "boolean",
          "description" : "Sort ascending (`true`) or descending (`false`). "
        },
        "sortColumn" : {
          "type" : "boolean"
        },
        "aggregationRate" : {
          "type" : "string",
          "enum" : [ "HOUR", "MINUTE", "SECOND", "TOTAL" ]
        }
      },
      "description" : "Configuration of a charted metric."
    },
    "CustomFilterChartSeriesDimensionConfig" : {
      "type" : "object",
      "required" : [ "id", "values" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The ID of the dimension by which the metric is split."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the dimension by which the metric is split."
        },
        "values" : {
          "type" : "array",
          "description" : "The splitting value.",
          "items" : {
            "type" : "string"
          }
        },
        "entityDimension" : {
          "type" : "boolean"
        }
      },
      "description" : "Configuration of the charted metric splitting."
    },
    "CustomFilterConfig" : {
      "type" : "object",
      "required" : [ "chartConfig", "customName", "defaultName", "filtersPerEntityType", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the filter. \n\n It shows to which entity the filter belongs. \n\n Custom charts have the `MIXED` type.",
          "enum" : [ "ALB", "APPLICATION", "APPLICATION_METHOD", "APPMON", "ASG", "AWS_CREDENTIALS", "AWS_CUSTOM_SERVICE", "AWS_LAMBDA_FUNCTION", "CLOUD_APPLICATION", "CLOUD_APPLICATION_NAMESPACE", "CONTAINER_GROUP_INSTANCE", "CUSTOM_APPLICATION", "CUSTOM_DEVICES", "CUSTOM_SERVICES", "DATABASE", "DATABASE_KEY_REQUEST", "DCRUM_APPLICATION", "DCRUM_ENTITY", "DYNAMO_DB", "EBS", "EC2", "ELB", "ENVIRONMENT", "ESXI", "EXTERNAL_SYNTHETIC_TEST", "GLOBAL_BACKGROUND_ACTIVITY", "HOST", "IOT", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "MDA_SERVICE", "MIXED", "MOBILE_APPLICATION", "MONITORED_ENTITY", "NLB", "PG_BACKGROUND_ACTIVITY", "PROBLEM", "PROCESS_GROUP_INSTANCE", "RDS", "REMOTE_PLUGIN", "SERVICE", "SERVICE_KEY_REQUEST", "SYNTHETIC_BROWSER_MONITOR", "SYNTHETIC_HTTPCHECK", "SYNTHETIC_HTTPCHECK_STEP", "SYNTHETIC_LOCATION", "SYNTHETIC_TEST", "SYNTHETIC_TEST_STEP", "UI_ENTITY", "VIRTUAL_MACHINE", "WEB_CHECK" ]
        },
        "customName" : {
          "type" : "string",
          "description" : "The name of the tile, set by user"
        },
        "defaultName" : {
          "type" : "string",
          "description" : "The default name of the tile",
          "minLength" : 1
        },
        "chartConfig" : {
          "description" : "The configuration of a custom chart.",
          "$ref" : "#/definitions/CustomFilterChartConfig"
        },
        "filtersPerEntityType" : {
          "type" : "object",
          "description" : "A list of filters, applied to specific entity types.",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "description" : "Configuration of the custom filter of a tile."
    },
    "Dashboard" : {
      "type" : "object",
      "required" : [ "dashboardMetadata", "tiles" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the dashboard."
        },
        "dashboardMetadata" : {
          "description" : "Parameters of the dashboard.",
          "$ref" : "#/definitions/DashboardMetadata"
        },
        "tiles" : {
          "type" : "array",
          "description" : "The list of tiles on the dashboard.",
          "items" : {
            "$ref" : "#/definitions/Tile"
          }
        }
      },
      "description" : "Configuration of a dashboard.",
      "example" : {
        "metadata" : {
          "configurationVersions" : [ 4, 2 ],
          "clusterVersion" : "Mock version"
        },
        "dashboardMetadata" : {
          "name" : "Example Dashboard",
          "shared" : true,
          "sharingDetails" : {
            "linkShared" : true,
            "published" : false
          },
          "dashboardFilter" : {
            "timeframe" : "l_72_HOURS",
            "managementZone" : {
              "id" : "3438779970106539862",
              "name" : "Example Management Zone"
            }
          }
        },
        "tiles" : [ {
          "name" : "Hosts",
          "tileType" : "HEADER",
          "configured" : true,
          "bounds" : {
            "top" : 0,
            "left" : 0,
            "width" : 304,
            "height" : 38
          },
          "tileFilter" : { }
        }, {
          "name" : "Applications",
          "tileType" : "HEADER",
          "configured" : true,
          "bounds" : {
            "top" : 0,
            "left" : 304,
            "width" : 304,
            "height" : 38
          },
          "tileFilter" : { }
        }, {
          "name" : "Host health",
          "tileType" : "HOSTS",
          "configured" : true,
          "bounds" : {
            "top" : 38,
            "left" : 0,
            "width" : 304,
            "height" : 304
          },
          "tileFilter" : {
            "managementZone" : {
              "id" : "3438779970106539862",
              "name" : "Example Management Zone"
            }
          },
          "chartVisible" : true
        }, {
          "name" : "Application health",
          "tileType" : "APPLICATIONS",
          "configured" : true,
          "bounds" : {
            "top" : 38,
            "left" : 304,
            "width" : 304,
            "height" : 304
          },
          "tileFilter" : {
            "managementZone" : {
              "id" : "3438779970106539862",
              "name" : "Example Management Zone"
            }
          },
          "chartVisible" : true
        } ]
      }
    },
    "DashboardFilter" : {
      "type" : "object",
      "properties" : {
        "timeframe" : {
          "type" : "string",
          "description" : "The default timeframe of the dashboard."
        },
        "managementZone" : {
          "description" : "The management zone to which the dashboard belongs.",
          "$ref" : "#/definitions/EntityShortRepresentation"
        }
      },
      "description" : "Filters, applied to a dashboard."
    },
    "DashboardMetadata" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the dashboard."
        },
        "shared" : {
          "type" : "boolean",
          "description" : "The dashboard is shared (`true`) or private (`false`)."
        },
        "owner" : {
          "type" : "string",
          "description" : "The owner of the dashboard."
        },
        "sharingDetails" : {
          "description" : "How the dashboard is shared. \n\n If **shared** is set to `false` these settings are saved but not used.",
          "$ref" : "#/definitions/SharingInfo"
        },
        "dashboardFilter" : {
          "description" : "Filters, applied to the dashboard.",
          "$ref" : "#/definitions/DashboardFilter"
        },
        "tags" : {
          "type" : "array",
          "description" : "A set of tags assigned to the dashboard.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Parameters of a dashboard."
    },
    "FilterableEntityTile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Tile"
      }, {
        "type" : "object",
        "properties" : {
          "filterConfig" : {
            "description" : "The configuration of the custom filter.",
            "$ref" : "#/definitions/CustomFilterConfig"
          },
          "chartVisible" : {
            "type" : "boolean"
          }
        },
        "description" : "Configuration of a tile with the built-in custom filter. \n\nAn example is the Service health tile, which may use a custom timeframe."
      } ]
    },
    "MarkdownTile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Tile"
      }, {
        "type" : "object",
        "required" : [ "markdown" ],
        "properties" : {
          "markdown" : {
            "type" : "string",
            "description" : "The markdown-formatted content of the tile."
          }
        },
        "description" : "Configuration of the Markdown tile."
      } ]
    },
    "SharingInfo" : {
      "type" : "object",
      "properties" : {
        "linkShared" : {
          "type" : "boolean",
          "description" : "If `true`, the dashboard is shared via link and authenticated users with the link can view."
        },
        "published" : {
          "type" : "boolean",
          "description" : "If `true`, the dashboard is published to anyone on this environment."
        }
      },
      "description" : "Sharing configuration of a dashboard."
    },
    "SyntheticSingleWebcheckTile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Tile"
      }, {
        "type" : "object",
        "required" : [ "assignedEntities" ],
        "properties" : {
          "assignedEntities" : {
            "type" : "array",
            "description" : "The list of Dynatrace entities, assigned to the tile.",
            "items" : {
              "type" : "string"
            }
          },
          "excludeMaintenanceWindows" : {
            "type" : "boolean",
            "description" : "Include (`false') or exclude (`true`) maintenance windows from availability calculations."
          }
        },
        "description" : "Configuration of the Browser monitor tile."
      } ]
    },
    "Tile" : {
      "type" : "object",
      "required" : [ "bounds", "name", "tileType" ],
      "discriminator" : "tileType",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the tile."
        },
        "tileType" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nCUSTOM_CHARTING -> CustomChartingTile\nDTAQL -> UserSessionQueryTile\nMARKDOWN -> MarkdownTile\nHOSTS -> FilterableEntityTile\nAPPLICATIONS -> FilterableEntityTile\nSERVICES -> FilterableEntityTile\nDATABASES_OVERVIEW -> FilterableEntityTile\nSYNTHETIC_TESTS -> FilterableEntityTile\nAPPLICATION_WORLDMAP -> AssignedEntitiesWithMetricTile\nRESOURCES -> AssignedEntitiesWithMetricTile\nTHIRD_PARTY_MOST_ACTIVE -> AssignedEntitiesWithMetricTile\nUEM_CONVERSIONS_PER_GOAL -> AssignedEntitiesWithMetricTile\nHOST -> AssignedEntitiesWithMetricTile\nPROCESS_GROUPS_ONE -> AssignedEntitiesWithMetricTile\nSYNTHETIC_SINGLE_WEBCHECK -> SyntheticSingleWebcheckTile\nAPPLICATION -> AssignedEntitiesTile\nVIRTUALIZATION -> AssignedEntitiesTile\nAWS -> AssignedEntitiesTile\nSERVICE_VERSATILE -> AssignedEntitiesTile\nSESSION_METRICS -> AssignedEntitiesTile\nUSERS -> AssignedEntitiesTile\nUEM_KEY_USER_ACTIONS -> AssignedEntitiesTile\nBOUNCE_RATE -> AssignedEntitiesTile\nUEM_CONVERSIONS_OVERALL -> AssignedEntitiesTile\nUEM_JSERRORS_OVERALL -> AssignedEntitiesTile\nMOBILE_APPLICATION -> AssignedEntitiesTile\nSYNTHETIC_SINGLE_EXT_TEST -> AssignedEntitiesTile\nSYNTHETIC_HTTP_MONITOR -> AssignedEntitiesTile\nDATABASE -> AssignedEntitiesTile\nCUSTOM_APPLICATION -> AssignedEntitiesTile\nAPPLICATION_METHOD -> AssignedEntitiesTile\nLOG_ANALYTICS -> AssignedEntitiesTile\nOPENSTACK -> AssignedEntitiesTile\nOPENSTACK_PROJECT -> AssignedEntitiesTile\nOPENSTACK_AV_ZONE -> AssignedEntitiesTile\n",
          "enum" : [ "CUSTOM_CHARTING", "DTAQL", "MARKDOWN", "HOSTS", "APPLICATIONS", "SERVICES", "DATABASES_OVERVIEW", "SYNTHETIC_TESTS", "APPLICATION_WORLDMAP", "RESOURCES", "THIRD_PARTY_MOST_ACTIVE", "UEM_CONVERSIONS_PER_GOAL", "HOST", "PROCESS_GROUPS_ONE", "SYNTHETIC_SINGLE_WEBCHECK", "APPLICATION", "VIRTUALIZATION", "AWS", "SERVICE_VERSATILE", "SESSION_METRICS", "USERS", "UEM_KEY_USER_ACTIONS", "BOUNCE_RATE", "UEM_CONVERSIONS_OVERALL", "UEM_JSERRORS_OVERALL", "MOBILE_APPLICATION", "SYNTHETIC_SINGLE_EXT_TEST", "SYNTHETIC_HTTP_MONITOR", "DATABASE", "CUSTOM_APPLICATION", "APPLICATION_METHOD", "LOG_ANALYTICS", "OPENSTACK", "OPENSTACK_PROJECT", "OPENSTACK_AV_ZONE" ]
        },
        "configured" : {
          "type" : "boolean",
          "description" : "The tile is configured and ready to use (`true`) or just placed on the dashboard (`false`)."
        },
        "bounds" : {
          "description" : "The position and size of the tile.",
          "$ref" : "#/definitions/TileBounds"
        },
        "tileFilter" : {
          "description" : "A filter, applied to the tile.",
          "$ref" : "#/definitions/TileFilter"
        }
      },
      "description" : "Configuration of a tile. \n\nThe actual set of fields depends on the type of the tile. See the description of the **tileType** field."
    },
    "TileBounds" : {
      "type" : "object",
      "properties" : {
        "top" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The vertical distance from the top left corner of the dashboard to the top left corner of the tile, in pixels."
        },
        "left" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The horizontal distance from the top left corner of the dashboard to the top left corner of the tile, in pixels."
        },
        "width" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The width of the tile, in pixels."
        },
        "height" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The height of the tile, in pixels."
        }
      },
      "description" : "The position and size of a tile."
    },
    "TileFilter" : {
      "type" : "object",
      "properties" : {
        "timeframe" : {
          "type" : "string",
          "description" : "The default timeframe of the tile."
        },
        "managementZone" : {
          "description" : "The management zone to which the tile belongs.",
          "$ref" : "#/definitions/EntityShortRepresentation"
        }
      },
      "description" : "A filter applied to a tile. \n\n It overrides dashboard's filter."
    },
    "UserSessionQueryTile" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Tile"
      }, {
        "type" : "object",
        "required" : [ "customName", "query", "type" ],
        "properties" : {
          "customName" : {
            "type" : "string",
            "description" : "The name of the tile, set by user."
          },
          "query" : {
            "type" : "string",
            "description" : "A [user session query](https://www.dynatrace.com/support/help/shortlink/usql-info) executed by the tile."
          },
          "type" : {
            "type" : "string",
            "description" : "The visualization of the tile.",
            "enum" : [ "COLUMN_CHART", "FUNNEL", "LINE_CHART", "PIE_CHART", "SINGLE_VALUE", "TABLE" ]
          },
          "timeFrameShift" : {
            "type" : "string",
            "description" : "The comparison timeframe of the query. \n\n If specified, you additionally get the results of the same query with the specified time shift."
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The limit of the results, if not set will use the default value of the system"
          }
        },
        "description" : "Configuration of a User session query tile."
      } ]
    },
    "InputStream" : {
      "type" : "object"
    },
    "FormDataContentDisposition" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "fileName" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modificationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "readDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "FrequentIssueDetectionConfig" : {
      "type" : "object",
      "required" : [ "frequentIssueDetectionApplicationEnabled", "frequentIssueDetectionInfrastructureEnabled", "frequentIssueDetectionServiceEnabled" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "frequentIssueDetectionApplicationEnabled" : {
          "type" : "boolean",
          "description" : "The detection for applications is enabled (`true`) or disabled (`false`)."
        },
        "frequentIssueDetectionServiceEnabled" : {
          "type" : "boolean",
          "description" : "The detection for services is enabled (`true`) or disabled (`false`)."
        },
        "frequentIssueDetectionInfrastructureEnabled" : {
          "type" : "boolean",
          "description" : "The detection for infrastructure is enabled (`true`) or disabled (`false`)."
        }
      },
      "description" : "Parameters of the frequent issue detection. See our help documentation about frequent issue detection: https://www.dynatrace.com/support/help/shortlink/frequent-issues",
      "example" : {
        "frequentIssueDetectionApplicationEnabled" : true,
        "frequentIssueDetectionServiceEnabled" : true,
        "frequentIssueDetectionInfrastructureEnabled" : true
      }
    },
    "IbmMQImsEntryQueue" : {
      "type" : "object",
      "required" : [ "queueManagerName", "queueName" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "12345678-abcd-1234-abcd-1234567890ab",
          "description" : "The ID of the IMS entry queue."
        },
        "queueManagerName" : {
          "type" : "string",
          "description" : "The name of the queue manager.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "queueName" : {
          "type" : "string",
          "description" : "The name of the queue.",
          "minLength" : 1,
          "maxLength" : 500
        }
      },
      "description" : "Ibm MQ queue which is an entrypoint to IMS.",
      "example" : {
        "queueManagerName" : "MyQueueManagerName",
        "queueName" : "MyQueueName"
      }
    },
    "AliasQueue" : {
      "type" : "object",
      "required" : [ "aliasQueue", "baseQueue", "clusterVisibility" ],
      "properties" : {
        "aliasQueue" : {
          "type" : "string",
          "description" : "The name of the alias queue.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "baseQueue" : {
          "type" : "string",
          "description" : "The name of the base queue, which the alias queue should point to.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "clusterVisibility" : {
          "type" : "array",
          "description" : "The alias queue is visible in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm). The queue manager must be part of these clusters.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 10000,
          "minItems" : 0
        }
      },
      "description" : "Define an alias for a so called base queue. This can either be a local queue owned by this queue manager, a local definition of a remote queue or a cluster queue visible but owned by another queue manager. The alias can be made visible in one or more clusters."
    },
    "ClusterQueue" : {
      "type" : "object",
      "required" : [ "clusterVisibility", "localQueue" ],
      "properties" : {
        "localQueue" : {
          "type" : "string",
          "description" : "The name of the local queue.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "clusterVisibility" : {
          "type" : "array",
          "description" : "The local queue is visible in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm). The queue manager must be part of these clusters.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 10000,
          "minItems" : 1
        }
      },
      "description" : "This local queue is visible in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm). The queue manager must be part of these clusters."
    },
    "QueueManager" : {
      "type" : "object",
      "required" : [ "aliasQueues", "clusterQueues", "clusters", "name", "remoteQueues" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the queue manager.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "clusters" : {
          "type" : "array",
          "description" : "The queue manager will have access to all cluster visible queues in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm).",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 10000,
          "minItems" : 0
        },
        "aliasQueues" : {
          "type" : "array",
          "description" : "The list of alias queues in the queue manager.",
          "items" : {
            "$ref" : "#/definitions/AliasQueue"
          },
          "maxItems" : 10000,
          "minItems" : 0
        },
        "remoteQueues" : {
          "type" : "array",
          "description" : "The list of remote queues in the queue manager.",
          "items" : {
            "$ref" : "#/definitions/RemoteQueue"
          },
          "maxItems" : 10000,
          "minItems" : 0
        },
        "clusterQueues" : {
          "type" : "array",
          "description" : "The list of cluster queues in the queue manager.",
          "items" : {
            "$ref" : "#/definitions/ClusterQueue"
          },
          "maxItems" : 10000,
          "minItems" : 0
        }
      },
      "description" : "Parameters of the queue manager.",
      "example" : {
        "name" : "name of a queue manager",
        "clusters" : [ "name of a cluster this queue manager is part of", "another name of a cluster this queue manager is part of" ],
        "aliasQueues" : [ {
          "aliasQueue" : "alias queue name",
          "baseQueue" : "real queue name",
          "clusterVisibility" : [ "name of a cluster this alias should be visible in", "another cluster" ]
        } ],
        "remoteQueues" : [ {
          "localQueue" : "local definition of the remote queue",
          "remoteQueue" : "remote queue name",
          "remoteQueueManager" : "remote queue manager name",
          "clusterVisibility" : [ "name of a cluster this local definition of the remote queue should be visible in", "another cluster" ]
        } ],
        "clusterQueues" : [ {
          "localQueue" : "name of a local queue",
          "clusterVisibility" : [ "name of a cluster this local queue should be visible in", "another cluster" ]
        } ]
      }
    },
    "RemoteQueue" : {
      "type" : "object",
      "required" : [ "clusterVisibility", "localQueue", "remoteQueue", "remoteQueueManager" ],
      "properties" : {
        "localQueue" : {
          "type" : "string",
          "description" : "The name of the local definition of the remote queue.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "remoteQueue" : {
          "type" : "string",
          "description" : "The name of the remote queue.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "remoteQueueManager" : {
          "type" : "string",
          "description" : "The name of the remote queue manager.",
          "minLength" : 1,
          "maxLength" : 500
        },
        "clusterVisibility" : {
          "type" : "array",
          "description" : "The local definition of the remote queue is visible in these [clusters](https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q002750_.htm). The queue manager must be part of these clusters.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 10000,
          "minItems" : 0
        }
      },
      "description" : "Define a local definition of a remote queue owned by another queue manager. The local definition can be made visible in one or more clusters."
    },
    "LogSourceFilter" : {
      "type" : "object",
      "properties" : {
        "pathDefinitions" : {
          "type" : "array",
          "description" : "A list of filtering criteria for log path. \n\nIf several criteria are specified, the OR logic applies.",
          "items" : {
            "$ref" : "#/definitions/PathDefinition"
          }
        },
        "sourceEntities" : {
          "type" : "array",
          "description" : "A list of Dynatrace entities, where the log can originate from. Specify Dynatrace entity IDs here. \n\n Allowed types of entities are `PROCESS_GROUP` and `PROCESS_GROUP_INSTANCE`. You can't mix entity types. \n\nIf several entities are specified, the OR logic applies. \n\nThis field is mutually exclusive with the **osTypes** field.",
          "items" : {
            "type" : "string"
          }
        },
        "hostFilters" : {
          "type" : "array",
          "description" : "A list of hosts, where the log can originate from. Specify Dynatrace entity IDs here. \n\nIf several hosts are specified, the OR logic applies.",
          "items" : {
            "type" : "string"
          }
        },
        "osTypes" : {
          "type" : "array",
          "description" : "A list of operating system types, where the log can originate from. \n\nIf set, **only OS logs** are included in the result. \n\nIf several OS are specified, the OR logic applies. \n\nThis field is mutually exclusive with the **sourceEntities** field.",
          "items" : {
            "type" : "string",
            "enum" : [ "AIX", "DARWIN", "HPUX", "LINUX", "SOLARIS", "WINDOWS", "ZOS" ]
          },
          "maxItems" : 1,
          "minItems" : 0
        }
      },
      "description" : "Configuration of the log filter for a custom log metric. \n\nIf several criteria are specified, the AND logic applies."
    },
    "PathDefinition" : {
      "type" : "object",
      "required" : [ "definition", "type" ],
      "properties" : {
        "definition" : {
          "type" : "string",
          "example" : "/var/log/sample.log",
          "description" : "The path to the required log path. \n\n If the **type** is set to `WILDCARD`, it may contain wildcard characters (`*`).",
          "minLength" : 1
        },
        "type" : {
          "type" : "string",
          "example" : "FIXED",
          "description" : "The type of the log path **definition**: fixed or an expression with wildcards.",
          "enum" : [ "FIXED", "WILDCARD" ]
        }
      },
      "description" : "A filtering criterion for log path."
    },
    "MaintenanceWindow" : {
      "type" : "object",
      "required" : [ "description", "name", "schedule", "suppression", "type" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the maintenance window."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the maintenance window, displayed in the UI.",
          "minLength" : 1
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the maintenance purpose."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the maintenance: planned or unplanned.",
          "enum" : [ "PLANNED", "UNPLANNED" ]
        },
        "suppression" : {
          "type" : "string",
          "description" : "The type of suppression of alerting and problem detection during the maintenance.",
          "enum" : [ "DETECT_PROBLEMS_AND_ALERT", "DETECT_PROBLEMS_DONT_ALERT", "DONT_DETECT_PROBLEMS" ]
        },
        "scope" : {
          "description" : "The scope of the maintenance window. \n\n The scope restricts the alert/problem detection suppression to certain Dynatrace entities. It can contain a list of entities and/or matching rules for dynamic formation of the scope. \n\n If no scope is specified, the alert/problem detection suppression applies to the entire environment.",
          "$ref" : "#/definitions/Scope"
        },
        "schedule" : {
          "description" : "The date, time, and recurrence of the maintenance window.",
          "$ref" : "#/definitions/Schedule"
        }
      },
      "description" : "Configuration of a maintenance window.",
      "example" : {
        "metadata" : {
          "configurationVersions" : [ 4, 2 ],
          "clusterVersion" : "0.0.0."
        },
        "name" : "Example Window",
        "description" : "An example Maintenance window",
        "type" : "UNPLANNED",
        "suppression" : "DETECT_PROBLEMS_AND_ALERT",
        "scope" : {
          "entities" : [ "HOST-0000000000123456" ],
          "matches" : [ {
            "type" : "HOST",
            "managementZoneId" : 123456789,
            "tags" : [ {
              "key" : "testkey",
              "value" : "testvalue",
              "context" : "AWS"
            } ],
            "tagCombination" : "AND"
          } ]
        },
        "schedule" : {
          "recurrenceType" : "MONTHLY",
          "recurrence" : {
            "dayOfMonth" : "23",
            "startTime" : "16:28",
            "durationMinutes" : "60"
          },
          "start" : "2018-08-02 00:00",
          "end" : "2019-02-27 00:00",
          "zoneId" : "Europe/Vienna"
        }
      }
    },
    "MonitoredEntityFilter" : {
      "type" : "object",
      "required" : [ "tags" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching.",
          "enum" : [ "APPLICATION", "APPLICATION_METHOD", "APPLICATION_METHOD_GROUP", "AUTO_SCALING_GROUP", "AUXILIARY_SYNTHETIC_TEST", "AWS_APPLICATION_LOAD_BALANCER", "AWS_AVAILABILITY_ZONE", "AWS_CREDENTIALS", "AWS_LAMBDA_FUNCTION", "AWS_NETWORK_LOAD_BALANCER", "AZURE_API_MANAGEMENT_SERVICE", "AZURE_APPLICATION_GATEWAY", "AZURE_COSMOS_DB", "AZURE_CREDENTIALS", "AZURE_EVENT_HUB", "AZURE_EVENT_HUB_NAMESPACE", "AZURE_FUNCTION_APP", "AZURE_IOT_HUB", "AZURE_LOAD_BALANCER", "AZURE_MGMT_GROUP", "AZURE_REDIS_CACHE", "AZURE_REGION", "AZURE_SERVICE_BUS_NAMESPACE", "AZURE_SERVICE_BUS_QUEUE", "AZURE_SERVICE_BUS_TOPIC", "AZURE_SQL_DATABASE", "AZURE_SQL_ELASTIC_POOL", "AZURE_SQL_SERVER", "AZURE_STORAGE_ACCOUNT", "AZURE_SUBSCRIPTION", "AZURE_TENANT", "AZURE_VM", "AZURE_VM_SCALE_SET", "AZURE_WEB_APP", "CF_APPLICATION", "CF_FOUNDATION", "CINDER_VOLUME", "CLOUD_APPLICATION", "CLOUD_APPLICATION_INSTANCE", "CLOUD_APPLICATION_NAMESPACE", "CONTAINER_GROUP", "CONTAINER_GROUP_INSTANCE", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "CUSTOM_DEVICE_GROUP", "DCRUM_APPLICATION", "DCRUM_SERVICE", "DCRUM_SERVICE_INSTANCE", "DEVICE_APPLICATION_METHOD", "DISK", "DOCKER_CONTAINER_GROUP_INSTANCE", "DYNAMO_DB_TABLE", "EBS_VOLUME", "EC2_INSTANCE", "ELASTIC_LOAD_BALANCER", "ENVIRONMENT", "EXTERNAL_SYNTHETIC_TEST_STEP", "GCP_ZONE", "GEOLOCATION", "GEOLOC_SITE", "GOOGLE_COMPUTE_ENGINE", "HOST", "HOST_GROUP", "HTTP_CHECK", "HTTP_CHECK_STEP", "HYPERVISOR", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "MOBILE_APPLICATION", "NETWORK_INTERFACE", "NEUTRON_SUBNET", "OPENSTACK_PROJECT", "OPENSTACK_REGION", "OPENSTACK_VM", "OS", "PROCESS_GROUP", "PROCESS_GROUP_INSTANCE", "RELATIONAL_DATABASE_SERVICE", "SERVICE", "SERVICE_INSTANCE", "SERVICE_METHOD", "SERVICE_METHOD_GROUP", "SWIFT_CONTAINER", "SYNTHETIC_LOCATION", "SYNTHETIC_TEST", "SYNTHETIC_TEST_STEP", "VIRTUALMACHINE", "VMWARE_DATACENTER" ]
        },
        "managementZoneId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of a management zone to which the matched entities must belong."
        },
        "tags" : {
          "type" : "array",
          "description" : "The tag you want to use for matching. \n\nYou can use custom tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes, and tags based on environment variables.",
          "items" : {
            "$ref" : "#/definitions/TagInfo"
          }
        },
        "tagCombination" : {
          "type" : "string",
          "description" : "The logic that applies when several tags are specified: AND/OR. \n\nIf not set, the OR logic is used.",
          "enum" : [ "AND", "OR" ]
        }
      },
      "description" : "A matching rule for Dynatrace entities."
    },
    "Recurrence" : {
      "type" : "object",
      "required" : [ "durationMinutes", "startTime" ],
      "properties" : {
        "dayOfWeek" : {
          "type" : "string",
          "description" : "The day of the week for weekly maintenance. \n\nThe format is the full name of the day in upper case, for example `THURSDAY`.",
          "enum" : [ "FRIDAY", "MONDAY", "SATURDAY", "SUNDAY", "THURSDAY", "TUESDAY", "WEDNESDAY" ]
        },
        "dayOfMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The day of the month for monthly maintenance. \n\nThe value of `31` is treated as the last day of the month for months that don't have a 31st day.\nThe value of `30` is also treated as the last day of the month for February.",
          "minimum" : 1,
          "maximum" : 31
        },
        "startTime" : {
          "type" : "string",
          "description" : "The start time of the maintenance window in HH:mm format."
        },
        "durationMinutes" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The duration of the maintenance window in minutes.",
          "minimum" : 1,
          "maximum" : 1440
        }
      },
      "description" : "The recurrence of the maintenance window."
    },
    "Schedule" : {
      "type" : "object",
      "required" : [ "end", "recurrenceType", "start", "zoneId" ],
      "properties" : {
        "recurrenceType" : {
          "type" : "string",
          "description" : "The type of the schedule recurrence.",
          "enum" : [ "DAILY", "MONTHLY", "ONCE", "WEEKLY" ]
        },
        "recurrence" : {
          "description" : "The recurrence of the schedule. \n\n Not applicable if **recurrenceType** is `Once`.",
          "$ref" : "#/definitions/Recurrence"
        },
        "start" : {
          "type" : "string",
          "description" : "The start date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format."
        },
        "end" : {
          "type" : "string",
          "description" : "The end date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format."
        },
        "zoneId" : {
          "type" : "string",
          "description" : "The time zone of the start and end time. Default time zone is UTC. \n\nYou can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)."
        }
      },
      "description" : "The schedule of the maintenance window."
    },
    "Scope" : {
      "type" : "object",
      "required" : [ "entities", "matches" ],
      "properties" : {
        "entities" : {
          "type" : "array",
          "description" : "A list of Dynatrace entities (for example, hosts or services) to be included in the scope. \n\nAllowed values are Dynatrace entity IDs.",
          "items" : {
            "type" : "string"
          }
        },
        "matches" : {
          "type" : "array",
          "description" : "A list of matching rules for dynamic scope formation. \n\nIf several rules are set, the OR logic applies.",
          "items" : {
            "$ref" : "#/definitions/MonitoredEntityFilter"
          }
        }
      },
      "description" : "The scope of the maintenance window. \n\n The scope restricts the alert/problem detection suppression to certain Dynatrace entities. It can contain a list of entities and/or matching rules for dynamic formation of the scope. \n\n If no scope is specified, the alert/problem detection suppression applies to the entire environment."
    },
    "ManagementZone" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "example" : "123456",
          "description" : "The ID of the management zone."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the management zone.",
          "minLength" : 1,
          "maxLength" : 100
        },
        "rules" : {
          "type" : "array",
          "description" : "The list of rules to where the management zone applies. Each rule is evaluated independently of all other rules.",
          "items" : {
            "$ref" : "#/definitions/ManagementZoneRule"
          },
          "maxItems" : 150,
          "minItems" : 0
        }
      },
      "description" : "The configuration of the management zone. It defines where the management zone should be applied.",
      "example" : {
        "name" : "sampleManagementZone",
        "rules" : [ {
          "type" : "SERVICE",
          "enabled" : true,
          "propagationTypes" : [ "SERVICE_TO_HOST_LIKE" ],
          "conditions" : [ {
            "key" : {
              "attribute" : "SERVICE_DATABASE_NAME"
            },
            "comparisonInfo" : {
              "type" : "STRING",
              "operator" : "BEGINS_WITH",
              "value" : "sample",
              "negate" : false,
              "caseSensitive" : false
            }
          }, {
            "key" : {
              "attribute" : "SERVICE_WEB_SERVER_NAME"
            },
            "comparisonInfo" : {
              "type" : "STRING",
              "operator" : "EXISTS",
              "negate" : false
            }
          }, {
            "key" : {
              "attribute" : "PROCESS_GROUP_CUSTOM_METADATA",
              "type" : "PROCESS_CUSTOM_METADATA_KEY",
              "dynamicKey" : {
                "source" : "KUBERNETES",
                "key" : "kubernetes.io/limit-ranger"
              }
            },
            "comparisonInfo" : {
              "type" : "STRING",
              "operator" : "BEGINS_WITH",
              "value" : "sample",
              "negate" : false,
              "caseSensitive" : false
            }
          } ]
        } ]
      }
    },
    "ManagementZoneRule" : {
      "type" : "object",
      "required" : [ "conditions", "enabled", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of Dynatrace entities the management zone can be applied to.",
          "enum" : [ "APPMON_SERVER", "APPMON_SYSTEM_PROFILE", "AWS_ACCOUNT", "AWS_APPLICATION_LOAD_BALANCER", "AWS_AUTO_SCALING_GROUP", "AWS_CLASSIC_LOAD_BALANCER", "AWS_NETWORK_LOAD_BALANCER", "AWS_RELATIONAL_DATABASE_SERVICE", "AZURE", "BROWSER_MONITOR", "CLOUD_APPLICATION", "CLOUD_APPLICATION_NAMESPACE", "CLOUD_FOUNDRY_FOUNDATION", "CUSTOM_APPLICATION", "CUSTOM_DEVICE", "CUSTOM_DEVICE_GROUP", "DATA_CENTER_SERVICE", "ENTERPRISE_APPLICATION", "ESXI_HOST", "EXTERNAL_MONITOR", "HOST", "HTTP_MONITOR", "KUBERNETES_CLUSTER", "KUBERNETES_NODE", "MOBILE_APPLICATION", "OPENSTACK_ACCOUNT", "PROCESS_GROUP", "SERVICE", "WEB_APPLICATION" ]
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The evaluation rule is enabled(`true`) or disabled(`false`)."
        },
        "propagationTypes" : {
          "type" : "array",
          "description" : "How to apply the management zone to underlying entities: \n\n`SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services. \n`SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services. \n\n`PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups. \n`PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by matching process groups. \n\n`HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts. \n\n`CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`: Apply to custom devices in matching custom device groups.",
          "items" : {
            "type" : "string",
            "enum" : [ "CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE", "HOST_TO_PROCESS_GROUP_INSTANCE", "PROCESS_GROUP_TO_HOST", "PROCESS_GROUP_TO_SERVICE", "SERVICE_TO_HOST_LIKE", "SERVICE_TO_PROCESS_GROUP_LIKE" ]
          }
        },
        "conditions" : {
          "type" : "array",
          "description" : "Matching rules of the management zone. The management zone applies only if all conditions are fulfilled.",
          "items" : {
            "$ref" : "#/definitions/EntityRuleEngineCondition"
          },
          "maxItems" : 30,
          "minItems" : 1
        }
      },
      "description" : "A rule defines when to apply a management zone. Each rule is evaluated independently of all other rules."
    },
    "ColumnDefinition" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "discriminator" : "type",
      "properties" : {
        "name" : {
          "type" : "string",
          "minLength" : 1
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nCUSTOM -> CustomColumnDefinition\nJSON -> JsonColumnDefinition\n",
          "enum" : [ "CUSTOM", "JSON" ]
        }
      },
      "description" : "Definition of numeric column."
    },
    "CustomColumnDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ColumnDefinition"
      }, {
        "type" : "object",
        "required" : [ "name", "prefix", "suffix" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "minLength" : 1
          },
          "prefix" : {
            "type" : "string",
            "readOnly" : true,
            "minLength" : 1
          },
          "suffix" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Definition of a custom column."
      } ]
    },
    "JsonColumnDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ColumnDefinition"
      }, {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "minLength" : 1
          }
        },
        "description" : "Definition of a JSON column."
      } ]
    },
    "LogMetricConfig" : {
      "type" : "object",
      "required" : [ "displayName", "logSourceFilters", "metricKey", "metricValueType", "searchString", "unit" ],
      "properties" : {
        "metricKey" : {
          "type" : "string",
          "example" : "calc:log.metric",
          "description" : "The unique key of the metric. \n\nThe key must have the `calc:log.` prefix.",
          "minLength" : 1
        },
        "active" : {
          "type" : "boolean",
          "description" : "The metric is enabled (`true`) or disabled (`false`)."
        },
        "displayName" : {
          "type" : "string",
          "description" : "The name of the metric, displayed in the UI.",
          "minLength" : 1
        },
        "unit" : {
          "type" : "string",
          "description" : "The unit of the metric.",
          "enum" : [ "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "GIBI_BYTE", "GIGA_BYTE", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "MICRO_SECOND", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PROMILLE", "RATIO", "SECOND", "STATE", "UNSPECIFIED" ]
        },
        "unitDisplayName" : {
          "type" : "string",
          "description" : "The display name of the unit. \n\n Only applicable if the **unit** is set to `UNSPECIFIED`."
        },
        "searchString" : {
          "type" : "string",
          "example" : "prefix1* OR prefix2*",
          "description" : "The pattern to look for in logs. \n\n Use the [Dynatrace search query language](https://www.dynatrace.com/support/help/shortlink/log-viewer#search-for-text-patterns-in-log-files) to specify it. Quotes must be escaped. \n\n To return all results, leave the field blank."
        },
        "metricValueType" : {
          "type" : "string",
          "example" : "OCCURRENCES",
          "description" : "The type of the metric data points calculation. For now the only allowed value is `OCCURRENCES`.",
          "enum" : [ "FP_COLUMN_AVG", "FP_COLUMN_COUNT", "FP_COLUMN_MAX", "FP_COLUMN_MIN", "FP_COLUMN_SUM", "FP_COLUMN_TOP_X_AVG", "FP_COLUMN_TOP_X_COUNT", "FP_COLUMN_TOP_X_MAX", "FP_COLUMN_TOP_X_MIN", "FP_COLUMN_TOP_X_SUM", "INT_COLUMN_AVG", "INT_COLUMN_COUNT", "INT_COLUMN_MAX", "INT_COLUMN_MIN", "INT_COLUMN_SUM", "INT_COLUMN_TOP_X_AVG", "INT_COLUMN_TOP_X_COUNT", "INT_COLUMN_TOP_X_MAX", "INT_COLUMN_TOP_X_MIN", "INT_COLUMN_TOP_X_SUM", "OCCURRENCES" ]
        },
        "columnDefiningValue" : {
          "description" : "Field defines value of metric using numeric column. \n\n If **metricValueType** is set to `OCCURRENCES`, the metric counts the occurrences of specified column.",
          "$ref" : "#/definitions/ColumnDefinition"
        },
        "logSourceFilters" : {
          "type" : "array",
          "description" : "A list of filters to define the logs to look into. \n\n If several filters are specified, the OR logic applies.",
          "items" : {
            "$ref" : "#/definitions/LogSourceFilter"
          },
          "minItems" : 1
        }
      },
      "description" : "Custom log metric definition.",
      "example" : {
        "metricKey" : "calc:log.metric",
        "active" : true,
        "displayName" : "Sample metric",
        "unit" : "HOUR",
        "unitDisplayName" : "",
        "searchString" : "\"memory fault\"",
        "metricValueType" : "OCCURRENCES",
        "logSourceFilters" : [ {
          "pathDefinitions" : [ {
            "definition" : "/var/log/sample.log",
            "type" : "FIXED"
          } ],
          "sourceEntities" : [ "PROCESS_GROUP_INSTANCE-63FC6E7C73DC893F" ],
          "hostFilters" : [ "HOST-066703AD79C38DB5" ],
          "osTypes" : [ ]
        } ]
      }
    },
    "RumDimensionDefinition" : {
      "type" : "object",
      "required" : [ "dimension", "topX" ],
      "properties" : {
        "topX" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of top values to be calculated.",
          "minimum" : 1,
          "maximum" : 200
        },
        "dimension" : {
          "type" : "string",
          "description" : "The dimension of this metric.",
          "enum" : [ "Browser", "ErrorContext", "ErrorOrigin", "ErrorType", "GeoLocation", "StringProperty", "UserActionType" ]
        },
        "propertyKey" : {
          "type" : "string",
          "description" : "The key of the user action property. Only required if dimension is set to \"StringProperty\""
        }
      }
    },
    "RumMetric" : {
      "type" : "object",
      "required" : [ "applicationIdentifier", "enabled", "metricDefinition", "metricKey", "name" ],
      "properties" : {
        "applicationIdentifier" : {
          "type" : "string",
          "description" : "The application identifier of the application where this RumMetric should belong to"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the RumMetric config",
          "minLength" : 0,
          "maxLength" : 100
        },
        "metricKey" : {
          "type" : "string",
          "description" : "The unique key of this RumMetric. Has to start with \"calc:apps.\""
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "RumMetric enabled/disabled"
        },
        "metricDefinition" : {
          "description" : "Specifies the metric definition for this RumMetric.",
          "$ref" : "#/definitions/RumMetricDefinition"
        },
        "dimensions" : {
          "type" : "array",
          "description" : "Specifies the optional dimensions for this RumMetric.",
          "items" : {
            "$ref" : "#/definitions/RumDimensionDefinition"
          },
          "maxItems" : 2,
          "minItems" : 0
        },
        "userActionFilter" : {
          "description" : "An optional filter. Only user actions matching this filter are used for metric calculation.",
          "$ref" : "#/definitions/UserActionFilter"
        }
      },
      "example" : {
        "enabled" : true,
        "name" : "MyMetric",
        "metricKey" : "calc:apps.web.mymetric",
        "metricDefinition" : {
          "metric" : "UserActionDuration"
        },
        "applicationIdentifier" : "APPLICATION-1234",
        "userActionFilter" : {
          "loadAction" : true,
          "country" : "GEOLOCATION-1234",
          "browserType" : "BROWSER-1234"
        },
        "dimensions" : [ {
          "dimension" : "GeoLocation",
          "topX" : 20
        } ]
      }
    },
    "RumMetricDefinition" : {
      "type" : "object",
      "required" : [ "metric" ],
      "properties" : {
        "metric" : {
          "type" : "string",
          "description" : "The type of metric this RumMetricDefinition holds",
          "enum" : [ "ApplicationCache", "Callback", "DNSLookup", "DOMComplete", "DOMContentLoaded", "DOMInteractive", "DoubleProperty", "ErrorCount", "HTMLDownloaded", "LoadEventEnd", "LoadEventStart", "NavigationStart", "OnDOMContentLoaded", "OnLoad", "Processing", "RedirectTime", "Request", "RequestStart", "Response", "SecureConnect", "SpeedIndex", "TCPConnect", "TimeToFirstByte", "UserActionDuration", "VisuallyComplete" ]
        },
        "propertyKey" : {
          "type" : "string",
          "description" : "The key of the user action property. Only required if metric is set to \"DoubleProperty\""
        }
      }
    },
    "UserActionFilter" : {
      "type" : "object",
      "properties" : {
        "actionDurationFromMilliseconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Filter by user actions with an action duration >= this value"
        },
        "actionDurationToMilliseconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Filter by user actions with an action duration <= this value"
        },
        "loadAction" : {
          "type" : "boolean",
          "description" : "Filter by LoadActions"
        },
        "xhrAction" : {
          "type" : "boolean",
          "description" : "Filter by XhrActions"
        },
        "customAction" : {
          "type" : "boolean",
          "description" : "Filter by CustomActions"
        },
        "apdex" : {
          "type" : "string",
          "description" : "Filter by Apdex",
          "enum" : [ "Frustrated", "Satisfied", "Tolerating", "Unknown" ]
        },
        "domain" : {
          "type" : "string",
          "description" : "Filter by domain"
        },
        "userActionName" : {
          "type" : "string",
          "description" : "Filter by userAction name"
        },
        "realUser" : {
          "type" : "boolean",
          "description" : "Filter by realUsers"
        },
        "robot" : {
          "type" : "boolean",
          "description" : "Filter by robots"
        },
        "synthetic" : {
          "type" : "boolean",
          "description" : "Filter by synthetic"
        },
        "browserFamily" : {
          "type" : "string",
          "description" : "Filter by browser family"
        },
        "browserType" : {
          "type" : "string",
          "description" : "Filter by browser family"
        },
        "browserVersion" : {
          "type" : "string",
          "description" : "Filter by browser version"
        },
        "hasCustomErrors" : {
          "type" : "boolean",
          "description" : "Filter by custom errors"
        },
        "hasAnyError" : {
          "type" : "boolean",
          "description" : "Filter by any error"
        },
        "hasHttpErrors" : {
          "type" : "boolean",
          "description" : "Filter by http errors"
        },
        "hasJavascriptErrors" : {
          "type" : "boolean",
          "description" : "Filter by javascript errors"
        },
        "city" : {
          "type" : "string",
          "description" : "Filter by city"
        },
        "continent" : {
          "type" : "string",
          "description" : "Filter by continent"
        },
        "country" : {
          "type" : "string",
          "description" : "Filter by country"
        },
        "region" : {
          "type" : "string",
          "description" : "Filter by region"
        },
        "ip" : {
          "type" : "string",
          "description" : "Filter by ip"
        },
        "ipV6Traffic" : {
          "type" : "boolean",
          "description" : "Filter by ipV6Traffic"
        },
        "osFamily" : {
          "type" : "string",
          "description" : "Filter by osFamily"
        },
        "osVersion" : {
          "type" : "string",
          "description" : "Filter by osVersion"
        },
        "userActionProperties" : {
          "type" : "array",
          "description" : "Filter by user action properties",
          "items" : {
            "$ref" : "#/definitions/UserActionPropertyFilter"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      }
    },
    "UserActionPropertyFilter" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "The key of the user action property"
        },
        "value" : {
          "type" : "string",
          "description" : "Filter by a string value (only for properties of type string)"
        },
        "from" : {
          "type" : "number",
          "format" : "double",
          "description" : "Filter by values >= this value (only for properties of numeric type)"
        },
        "to" : {
          "type" : "number",
          "format" : "double",
          "description" : "Filter by values <= this value (only for properties of numeric type)"
        }
      }
    },
    "RumMetricUpdate" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "If the RumMetric should be enabled/disabled"
        }
      }
    },
    "BooleanComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "boolean",
            "description" : "The value to compare to."
          }
        },
        "description" : "Comparison for `BOOLEAN` attributes."
      } ]
    },
    "CalculatedMetricDefinition" : {
      "type" : "object",
      "required" : [ "metric" ],
      "properties" : {
        "metric" : {
          "type" : "string",
          "description" : "The metric to be captured.",
          "enum" : [ "CPU_TIME", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "EXCEPTION_COUNT", "FAILED_REQUEST_COUNT", "FAILED_REQUEST_COUNT_CLIENT", "FAILURE_RATE", "FAILURE_RATE_CLIENT", "HTTP_4XX_ERROR_COUNT", "HTTP_4XX_ERROR_COUNT_CLIENT", "HTTP_5XX_ERROR_COUNT", "HTTP_5XX_ERROR_COUNT_CLIENT", "IO_TIME", "LOCK_TIME", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESSING_TIME", "REQUEST_ATTRIBUTE", "REQUEST_COUNT", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "SUCCESSFUL_REQUEST_COUNT", "SUCCESSFUL_REQUEST_COUNT_CLIENT", "WAIT_TIME" ]
        },
        "requestAttribute" : {
          "type" : "string",
          "description" : "The request attribute to be captured. \n\n Only applicable when the **metric** parameter is set to `REQUEST_ATTRIBUTE`."
        }
      },
      "description" : "The definition of a calculated service metric."
    },
    "CalculatedServiceMetric" : {
      "type" : "object",
      "required" : [ "enabled", "metricDefinition", "name", "tsmMetricKey", "unit" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "tsmMetricKey" : {
          "type" : "string",
          "description" : "The key of the calculated service metric.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "name" : {
          "type" : "string",
          "description" : "The displayed name of the metric.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The metric is enabled (`true`) or disabled (`false`)."
        },
        "metricDefinition" : {
          "description" : "The source of the metric.",
          "$ref" : "#/definitions/CalculatedMetricDefinition"
        },
        "unit" : {
          "type" : "string",
          "description" : "The unit of the metric.",
          "enum" : [ "BIT", "BIT_PER_HOUR", "BIT_PER_MINUTE", "BIT_PER_SECOND", "BYTE", "BYTE_PER_HOUR", "BYTE_PER_MINUTE", "BYTE_PER_SECOND", "CORES", "COUNT", "GIBI_BYTE", "GIGA_BYTE", "HOUR", "KIBI_BYTE", "KIBI_BYTE_PER_HOUR", "KIBI_BYTE_PER_MINUTE", "KIBI_BYTE_PER_SECOND", "KILO_BYTE", "KILO_BYTE_PER_HOUR", "KILO_BYTE_PER_MINUTE", "KILO_BYTE_PER_SECOND", "MEBI_BYTE", "MEBI_BYTE_PER_HOUR", "MEBI_BYTE_PER_MINUTE", "MEBI_BYTE_PER_SECOND", "MEGA_BYTE", "MEGA_BYTE_PER_HOUR", "MEGA_BYTE_PER_MINUTE", "MEGA_BYTE_PER_SECOND", "MICRO_SECOND", "MILLI_CORES", "MILLI_SECOND", "MILLI_SECOND_PER_MINUTE", "MINUTE", "NANO_SECOND", "NANO_SECOND_PER_MINUTE", "NOT_APPLICABLE", "PERCENT", "PER_HOUR", "PER_MINUTE", "PER_SECOND", "PROMILLE", "RATIO", "SECOND", "STATE", "UNSPECIFIED" ]
        },
        "unitDisplayName" : {
          "type" : "string",
          "description" : "The display name of the metric's unit. \n\n Only applicable when the **unit** parameter is set to `UNSPECIFIED`."
        },
        "entityId" : {
          "type" : "string",
          "description" : "Restricts the metric usage to the specified service. \n\n This field is mutually exclusive with the **managementZones** field."
        },
        "managementZones" : {
          "type" : "array",
          "description" : "Restricts the metric usage to specified management zones. \n\n This field is mutually exclusive with the **entityId** field.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 1,
          "minItems" : 0
        },
        "conditions" : {
          "type" : "array",
          "description" : "The set of conditions for the metric usage. \n\n **All** the specified conditions must be fulfilled to use the metric.",
          "items" : {
            "$ref" : "#/definitions/Condition"
          }
        },
        "dimensionDefinition" : {
          "description" : "The dimensions splitting of the metric.",
          "$ref" : "#/definitions/DimensionDefinition"
        }
      },
      "description" : "Descriptor of a calculated service metric.",
      "example" : {
        "tsmMetricKey" : "calc:service.mymetric",
        "name" : "My Metric",
        "enabled" : true,
        "metricDefinition" : {
          "metric" : "CPU_TIME"
        },
        "managementZones" : [ "zone1" ],
        "unit" : "MICRO_SECOND",
        "conditions" : [ {
          "attribute" : "WEBREQUEST_URL_PATH",
          "comparisonInfo" : {
            "type" : "STRING",
            "comparison" : "BEGINS_WITH",
            "value" : "/url_path",
            "negate" : false,
            "caseSensitive" : false
          }
        } ],
        "dimensionDefinition" : {
          "name" : "my dimension",
          "dimension" : "{myPlaceholder}",
          "placeholders" : [ {
            "name" : "myPlaceholder",
            "attribute" : "WEBREQUEST_URL_PATH",
            "kind" : "BEFORE_DELIMITER",
            "delimiterOrRegex" : "/booking",
            "normalization" : "ORIGINAL"
          } ],
          "topX" : 10,
          "topXDirection" : "DESCENDING",
          "topXAggregation" : "AVERAGE"
        }
      }
    },
    "ComparisonInfo" : {
      "type" : "object",
      "required" : [ "comparison", "negate", "type" ],
      "discriminator" : "type",
      "properties" : {
        "comparison" : {
          "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
          "$ref" : "#/definitions/Enum"
        },
        "value" : {
          "type" : "object",
          "description" : "The value to compare to."
        },
        "negate" : {
          "type" : "boolean",
          "description" : "Reverse the comparison **operator**. For example, it turns **equals** into **does not equal**."
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nSTRING -> StringComparisonInfo\nNUMBER -> NumberComparisonInfo\nBOOLEAN -> BooleanComparisonInfo\nHTTP_METHOD -> HttpMethodComparisonInfo\nSTRING_REQUEST_ATTRIBUTE -> StringRequestAttributeComparisonInfo\nNUMBER_REQUEST_ATTRIBUTE -> NumberRequestAttributeComparisonInfo\nZOS_CALL_TYPE -> ZosComparisonInfo\nIIB_INPUT_NODE_TYPE -> IIBInputNodeTypeComparisonInfo\nESB_INPUT_NODE_TYPE -> ESBInputNodeTypeComparisonInfo\nFAILED_STATE -> FailedStateComparisonInfo\nFLAW_STATE -> FlawStateComparisonInfo\nFAILURE_REASON -> FailureReasonComparisonInfo\nHTTP_STATUS_CLASS -> HttpStatusClassComparisonInfo\nTAG -> TagComparisonInfo\nFAST_STRING -> FastStringComparisonInfo\nSERVICE_TYPE -> ServiceTypeComparisonInfo\n",
          "enum" : [ "STRING", "NUMBER", "BOOLEAN", "HTTP_METHOD", "STRING_REQUEST_ATTRIBUTE", "NUMBER_REQUEST_ATTRIBUTE", "ZOS_CALL_TYPE", "IIB_INPUT_NODE_TYPE", "ESB_INPUT_NODE_TYPE", "FAILED_STATE", "FLAW_STATE", "FAILURE_REASON", "HTTP_STATUS_CLASS", "TAG", "FAST_STRING", "SERVICE_TYPE" ]
        }
      },
      "description" : "Type-specific comparison for attributes. The actual set of fields depends on the `type` of the comparison."
    },
    "Condition" : {
      "type" : "object",
      "required" : [ "attribute", "comparisonInfo" ],
      "properties" : {
        "attribute" : {
          "type" : "string",
          "description" : "The attribute to be matched.",
          "enum" : [ "ACTOR_SYSTEM", "AKKA_ACTOR_CLASS_NAME", "AKKA_ACTOR_MESSAGE_TYPE", "AKKA_ACTOR_PATH", "AZURE_FUNCTIONS_FUNCTION_NAME", "AZURE_FUNCTIONS_SITE_NAME", "CICS_PROGRAM_NAME", "CICS_SYSTEM_ID", "CICS_TASK_ID", "CICS_TRANSACTION_ID", "CPU_TIME", "CTG_GATEWAY_URL", "CTG_PROGRAM", "CTG_SERVER_NAME", "CTG_TRANSACTION_ID", "CUSTOMSERVICE_CLASS", "CUSTOMSERVICE_METHOD", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "ERROR_COUNT", "ESB_APPLICATION_NAME", "ESB_INPUT_TYPE", "ESB_LIBRARY_NAME", "ESB_MESSAGE_FLOW_NAME", "EXCEPTION_CLASS", "EXCEPTION_MESSAGE", "FAILED_STATE", "FAILURE_REASON", "FLAW_STATE", "HTTP_REQUEST_METHOD", "HTTP_STATUS", "HTTP_STATUS_CLASS", "IMS_PROGRAM_NAME", "IMS_TRANSACTION_ID", "IO_TIME", "LOCK_TIME", "MESSAGING_DESTINATION_TYPE", "MESSAGING_IS_TEMPORARY_QUEUE", "MESSAGING_QUEUE_NAME", "MESSAGING_QUEUE_VENDOR", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESS_GROUP_NAME", "PROCESS_GROUP_TAG", "REMOTE_ENDPOINT", "REMOTE_METHOD", "REMOTE_SERVICE_NAME", "REQUEST_NAME", "REQUEST_TYPE", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "RMI_CLASS", "RMI_METHOD", "SERVICE_DISPLAY_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REQUEST_ATTRIBUTE", "SERVICE_TAG", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "SUSPENSION_TIME", "TOTAL_PROCESSING_TIME", "WAIT_TIME", "WEBREQUEST_QUERY", "WEBREQUEST_URL", "WEBREQUEST_URL_HOST", "WEBREQUEST_URL_PATH", "WEBREQUEST_URL_PORT", "WEBSERVICE_ENDPOINT", "WEBSERVICE_METHOD", "ZOS_CALL_TYPE" ]
        },
        "comparisonInfo" : {
          "description" : "How to match the attribute.",
          "$ref" : "#/definitions/ComparisonInfo"
        }
      },
      "description" : "A condition of a rule usage."
    },
    "DimensionDefinition" : {
      "type" : "object",
      "required" : [ "dimension", "name", "topX", "topXAggregation", "topXDirection" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the dimension.",
          "minLength" : 0,
          "maxLength" : 200
        },
        "dimension" : {
          "type" : "string",
          "description" : "The dimension value pattern. \n\n You can define custom placeholders in the **placeholders** field and use them here.",
          "minLength" : 0,
          "maxLength" : 400
        },
        "placeholders" : {
          "type" : "array",
          "description" : "The list of custom placeholders to be used in a dimension value pattern.",
          "items" : {
            "$ref" : "#/definitions/Placeholder"
          }
        },
        "topX" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of top values to be calculated.",
          "minimum" : 1,
          "maximum" : 100
        },
        "topXDirection" : {
          "type" : "string",
          "description" : "How to calculate the **topX** values.",
          "enum" : [ "ASCENDING", "DESCENDING" ]
        },
        "topXAggregation" : {
          "type" : "string",
          "description" : "The aggregation of the dimension.",
          "enum" : [ "AVERAGE", "COUNT", "MAX", "MIN", "OF_INTEREST_RATIO", "OTHER_RATIO", "SINGLE_VALUE", "SUM" ]
        }
      },
      "description" : "Parameters of a definition of a calculated service metric."
    },
    "ESBInputNodeTypeComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
          }
        },
        "description" : "Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'.This model also inherits fields from the parent model ComparisonInfo."
      } ]
    },
    "FailedStateComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "FAILED", "SUCCESSFUL" ]
          }
        },
        "description" : "Comparison for `FAILED_STATE` attributes."
      } ]
    },
    "FailureReasonComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "EXCEPTION_AT_ENTRY_NODE", "EXCEPTION_ON_ANY_NODE", "HTTP_CODE", "REQUEST_ATTRIBUTE" ]
          }
        },
        "description" : "Comparison for `FAILURE_REASON` attributes."
      } ]
    },
    "FastStringComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "CONTAINS", "EQUALS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to."
          },
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
          }
        },
        "description" : "Comparison for `FAST_STRING` attributes."
      } ]
    },
    "FlawStateComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "FLAWED", "NOT_FLAWED" ]
          }
        },
        "description" : "Comparison for `FLAW_STATE` attributes."
      } ]
    },
    "HttpMethodComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE" ]
          }
        },
        "description" : "Comparison for `HTTP_METHOD` attributes."
      } ]
    },
    "HttpStatusClassComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "C_1XX", "C_2XX", "C_3XX", "C_4XX", "C_5XX", "NO_RESPONSE" ]
          }
        },
        "description" : "Comparison for `HTTP_STATUS_CLASS` attributes."
      } ]
    },
    "IIBInputNodeTypeComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "CALLABLE_FLOW_ASYNC_RESPONSE_NODE", "CALLABLE_FLOW_INPUT_NODE", "DATABASE_INPUT_NODE", "DOTNET_INPUT_NODE", "EMAIL_INPUT_NODE", "EVENT_INPUT", "EVENT_INPUT_NODE", "FILE_INPUT_NODE", "FTE_INPUT_NODE", "HTTP_ASYNC_RESPONSE", "JD_EDWARDS_INPUT_NODE", "JMS_CLIENT_INPUT_NODE", "LABEL_NODE", "MQ_INPUT_NODE", "PEOPLE_SOFT_INPUT_NODE", "REST_ASYNC_RESPONSE", "REST_REQUEST", "SAP_INPUT_NODE", "SCA_ASYNC_RESPONSE_NODE", "SCA_INPUT_NODE", "SIEBEL_INPUT_NODE", "SOAP_INPUT_NODE", "TCPIP_CLIENT_INPUT_NODE", "TCPIP_CLIENT_REQUEST_NODE", "TCPIP_SERVER_INPUT_NODE", "TCPIP_SERVER_REQUEST_NODE", "TIMEOUT_NOTIFICATION_NODE", "WS_INPUT_NODE" ]
          }
        },
        "description" : "Comparison for `IIB_INPUT_NODE_TYPE` attributes."
      } ]
    },
    "Number" : {
      "type" : "object"
    },
    "NumberComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
          },
          "value" : {
            "description" : "The value to compare to.",
            "$ref" : "#/definitions/Number"
          }
        },
        "description" : "Comparison for `NUMBER` attributes."
      } ]
    },
    "NumberRequestAttributeComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison", "requestAttribute" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LOWER_THAN", "LOWER_THAN_OR_EQUAL" ]
          },
          "value" : {
            "description" : "The value to compare to.",
            "$ref" : "#/definitions/Number"
          },
          "requestAttribute" : {
            "type" : "string"
          }
        },
        "description" : "Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes, specifically of the generic **Number** type."
      } ]
    },
    "Placeholder" : {
      "type" : "object",
      "required" : [ "attribute", "delimiterOrRegex", "kind", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the placeholder. Use it in the naming pattern as `{name}`."
        },
        "attribute" : {
          "type" : "string",
          "description" : "The attribute to extract from. You can only use attributes of the **string** type.",
          "enum" : [ "ACTOR_SYSTEM", "AKKA_ACTOR_CLASS_NAME", "AKKA_ACTOR_MESSAGE_TYPE", "AKKA_ACTOR_PATH", "AZURE_FUNCTIONS_FUNCTION_NAME", "AZURE_FUNCTIONS_SITE_NAME", "CICS_PROGRAM_NAME", "CICS_SYSTEM_ID", "CICS_TASK_ID", "CICS_TRANSACTION_ID", "CPU_TIME", "CTG_GATEWAY_URL", "CTG_PROGRAM", "CTG_SERVER_NAME", "CTG_TRANSACTION_ID", "CUSTOMSERVICE_CLASS", "CUSTOMSERVICE_METHOD", "DATABASE_CHILD_CALL_COUNT", "DATABASE_CHILD_CALL_TIME", "ERROR_COUNT", "ESB_APPLICATION_NAME", "ESB_INPUT_TYPE", "ESB_LIBRARY_NAME", "ESB_MESSAGE_FLOW_NAME", "EXCEPTION_CLASS", "EXCEPTION_MESSAGE", "FAILED_STATE", "FAILURE_REASON", "FLAW_STATE", "HTTP_REQUEST_METHOD", "HTTP_STATUS", "HTTP_STATUS_CLASS", "IMS_PROGRAM_NAME", "IMS_TRANSACTION_ID", "IO_TIME", "LOCK_TIME", "MESSAGING_DESTINATION_TYPE", "MESSAGING_IS_TEMPORARY_QUEUE", "MESSAGING_QUEUE_NAME", "MESSAGING_QUEUE_VENDOR", "NON_DATABASE_CHILD_CALL_COUNT", "NON_DATABASE_CHILD_CALL_TIME", "PROCESS_GROUP_NAME", "PROCESS_GROUP_TAG", "REMOTE_ENDPOINT", "REMOTE_METHOD", "REMOTE_SERVICE_NAME", "REQUEST_NAME", "REQUEST_TYPE", "RESPONSE_TIME", "RESPONSE_TIME_CLIENT", "RMI_CLASS", "RMI_METHOD", "SERVICE_DISPLAY_NAME", "SERVICE_NAME", "SERVICE_PORT", "SERVICE_PUBLIC_DOMAIN_NAME", "SERVICE_REQUEST_ATTRIBUTE", "SERVICE_TAG", "SERVICE_TYPE", "SERVICE_WEB_APPLICATION_ID", "SERVICE_WEB_CONTEXT_ROOT", "SERVICE_WEB_SERVER_NAME", "SERVICE_WEB_SERVICE_NAME", "SERVICE_WEB_SERVICE_NAMESPACE", "SUSPENSION_TIME", "TOTAL_PROCESSING_TIME", "WAIT_TIME", "WEBREQUEST_QUERY", "WEBREQUEST_URL", "WEBREQUEST_URL_HOST", "WEBREQUEST_URL_PATH", "WEBREQUEST_URL_PORT", "WEBSERVICE_ENDPOINT", "WEBSERVICE_METHOD", "ZOS_CALL_TYPE" ]
        },
        "kind" : {
          "type" : "string",
          "description" : "The type of extraction. \n\n Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted.",
          "enum" : [ "AFTER_DELIMITER", "BEFORE_DELIMITER", "BETWEEN_DELIMITER", "REGEX_EXTRACTION" ]
        },
        "delimiterOrRegex" : {
          "type" : "string",
          "description" : "Depending on the **type** value: \n\n * `REGEX_EXTRACTION`: The regular expression. \n * `BETWEEN_DELIMITER`: The opening delimiter string to look for. \n * All other values: The delimiter string to look for."
        },
        "endDelimiter" : {
          "type" : "string",
          "description" : "The closing delimiter string to look for. \n\n Required if the **kind** value is `BETWEEN_DELIMITER`. Not applicable otherwise."
        },
        "requestAttribute" : {
          "type" : "string",
          "description" : "The request attribute to extract from. \n\n Required if the **kind** value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise."
        },
        "normalization" : {
          "type" : "string",
          "description" : "The format of the extracted string.",
          "enum" : [ "ORIGINAL", "TO_LOWER_CASE", "TO_UPPER_CASE" ]
        }
      },
      "description" : "The custom placeholder to be used as a naming value pattern. \n\n It enables you to extract a request attribute value or other request attribute and use it in the naming pattern."
    },
    "ServiceTypeComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "BACKGROUND_ACTIVITY", "CICS_SERVICE", "CUSTOM_SERVICE", "DATABASE_SERVICE", "ENTERPRISE_SERVICE_BUS_SERVICE", "EXTERNAL", "IBM_INTEGRATION_BUS_SERVICE", "IMS_SERVICE", "MESSAGING_SERVICE", "QUEUE_LISTENER_SERVICE", "RMI_SERVICE", "RPC_SERVICE", "WEB_REQUEST_SERVICE", "WEB_SERVICE" ]
          }
        },
        "description" : "Comparison for `SERVICE_TYPE` attributes."
      } ]
    },
    "StringComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "EXISTS", "REGEX_MATCHES" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to."
          },
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
          }
        },
        "description" : "Comparison for `STRING` attributes."
      } ]
    },
    "StringRequestAttributeComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison", "requestAttribute" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS", "EXISTS", "REGEX_MATCHES" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to."
          },
          "requestAttribute" : {
            "type" : "string"
          },
          "caseSensitive" : {
            "type" : "boolean",
            "description" : "The comparison is case-sensitive (`true`) or not case-sensitive (`false`)."
          }
        },
        "description" : "Comparison for `STRING_REQUEST_ATTRIBUTE` attributes, specifically of the **String** type."
      } ]
    },
    "TagComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "TAG_KEY_EQUALS" ]
          },
          "value" : {
            "description" : "The value to compare to.",
            "$ref" : "#/definitions/TagInfo"
          }
        },
        "description" : "Comparison for `TAG` attributes."
      } ]
    },
    "ZosComparisonInfo" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComparisonInfo"
      }, {
        "type" : "object",
        "required" : [ "comparison" ],
        "properties" : {
          "comparison" : {
            "type" : "string",
            "description" : "Operator of the comparision. You can reverse it by setting **negate** to `true`.",
            "enum" : [ "EQUALS", "EXISTS" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value to compare to.",
            "enum" : [ "CTG", "DPL", "EXPLICIT_ADK", "IMS_CONNECT", "IMS_CONNECT_API", "IMS_ITRA", "IMS_MSC", "IMS_PGM_SWITCH", "IMS_SHARED_QUEUES", "IMS_TRANS_EXEC", "MQ", "SOAP", "START", "TX", "UNKNOWN" ]
          }
        },
        "description" : "Comparison for `ZOS_CALL_TYPE` attributes."
      } ]
    },
    "NotificationConfigStub" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The ID of the Dynatrace entity."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the Dynatrace entity.",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the Dynatrace entity.",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the notification.",
          "enum" : [ "ANSIBLETOWER", "EMAIL", "HIPCHAT", "JIRA", "OPS_GENIE", "PAGER_DUTY", "SERVICE_NOW", "SLACK", "TRELLO", "VICTOROPS", "WEBHOOK", "XMATTERS" ]
        }
      },
      "description" : "The short representation of a notification."
    },
    "NotificationConfigStubListDto" : {
      "type" : "object",
      "properties" : {
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NotificationConfigStub"
          }
        }
      }
    },
    "AnsibleTowerNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "acceptAnyCertificate", "customMessage", "jobTemplateID", "jobTemplateURL", "name", "username" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "jobTemplateURL" : {
            "type" : "string",
            "description" : "The URL of the target Ansible Tower job template.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "acceptAnyCertificate" : {
            "type" : "boolean",
            "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
          },
          "username" : {
            "type" : "string",
            "description" : "The username of the Ansible Tower account.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "password" : {
            "type" : "string",
            "description" : "The password for the Ansible Tower account.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "jobTemplateID" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The ID of the target Ansible Tower job template."
          },
          "customMessage" : {
            "type" : "string",
            "description" : "The custom message of the notification. \n\n This message will be displayed in the extra variables **Message** field of your job template.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 0,
            "maxLength" : 1000
          }
        },
        "description" : "Configuration of the Ansible Tower notification."
      } ]
    },
    "EmailNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "body", "name", "receivers", "shouldSendForResolvedProblems", "subject" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "subject" : {
            "type" : "string",
            "description" : "The subject of the email notifications.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "body" : {
            "type" : "string",
            "description" : "The template of the email notification.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 1
          },
          "receivers" : {
            "type" : "array",
            "description" : "The list of the email recipients.",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            },
            "minItems" : 1
          },
          "ccReceivers" : {
            "type" : "array",
            "description" : "The list of the email CC-recipients.",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "shouldSendForResolvedProblems" : {
            "type" : "boolean",
            "description" : "Send (`true`) or doesn't send (`false`) an email, confirming problem resolution."
          }
        },
        "description" : "Configuration of the email notification."
      } ]
    },
    "HipChatNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "message", "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the HipChat WebHook.\n\n This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "message" : {
            "type" : "string",
            "description" : "The content of the notification message.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 1
          }
        },
        "description" : "Configuration of the HipChat notification."
      } ]
    },
    "HttpHeader" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the HTTP header.",
          "minLength" : 1
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the HTTP header. May contain an empty value. \n\n Required when creating a new notification. \n\nFor the **Authorization** header, GET requests return the `null` value. \n\nIf you want update a notification configuration with an **Authorization** header which you want to remain intact, set the **Authorization** header with the `null` value."
        }
      },
      "description" : "The HTTP header."
    },
    "JiraNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "description", "issueType", "name", "projectKey", "summary", "url", "username" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "username" : {
            "type" : "string",
            "description" : "The username of the Jira profile.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "password" : {
            "type" : "string",
            "description" : "The password for the Jira profile.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the Jira API endpoint.",
            "minLength" : 1
          },
          "projectKey" : {
            "type" : "string",
            "description" : "The project key of the Jira issue to be created by this notification.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "issueType" : {
            "type" : "string",
            "description" : "The type of the Jira issue to be created by this notification.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "summary" : {
            "type" : "string",
            "description" : "The summary of the Jira issue to be created by this notification.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the Jira issue to be created by this notification. \n\n You can use same placeholders as in issue summary.",
            "minLength" : 1
          }
        },
        "description" : "Configuration of the Jira notification."
      } ]
    },
    "NotificationConfig" : {
      "type" : "object",
      "required" : [ "active", "alertingProfile", "name", "type" ],
      "discriminator" : "type",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the notification configuration."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the notification configuration.",
          "minLength" : 1,
          "maxLength" : 100
        },
        "alertingProfile" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the associated alerting profile."
        },
        "active" : {
          "type" : "boolean",
          "description" : "The configuration is enabled (`true`) or disabled (`false`)."
        },
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nEMAIL -> EmailNotificationConfig\nPAGER_DUTY -> PagerDutyNotificationConfig\nWEBHOOK -> WebHookNotificationConfig\nSLACK -> SlackNotificationConfig\nHIPCHAT -> HipChatNotificationConfig\nVICTOROPS -> VictorOpsNotificationConfig\nSERVICE_NOW -> ServiceNowNotificationConfig\nXMATTERS -> XMattersNotificationConfig\nANSIBLETOWER -> AnsibleTowerNotificationConfig\nOPS_GENIE -> OpsGenieNotificationConfig\nJIRA -> JiraNotificationConfig\nTRELLO -> TrelloNotificationConfig\n",
          "enum" : [ "EMAIL", "PAGER_DUTY", "WEBHOOK", "SLACK", "HIPCHAT", "VICTOROPS", "SERVICE_NOW", "XMATTERS", "ANSIBLETOWER", "OPS_GENIE", "JIRA", "TRELLO" ]
        }
      },
      "description" : "Configuration of a notification. The actual set of fields depends on the `type` of the notification.\nSee the [Notifications API - JSON models](https://www.dynatrace.com/support/help/shortlink/api-config-notifications-models) help topic for example models of every notification type.",
      "example" : {
        "type" : "JIRA",
        "id" : "acbed0c4-4ef1-4303-991f-102510a69322",
        "name" : "REST example",
        "alertingProfile" : "4f5e00f4-39b3-455a-820b-3514843615f3",
        "active" : true,
        "username" : "john.smith",
        "password" : "",
        "url" : "https://my-jira.atlassian.net/rest/api/2/",
        "projectKey" : "DEV",
        "issueType" : "Task",
        "summary" : "Problem {ProblemID}: {ProblemTitle}",
        "description" : "{ProblemDetailsText}"
      }
    },
    "OpsGenieNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "domain", "message", "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "apiKey" : {
            "type" : "string",
            "description" : "The API key to access OpsGenie.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "domain" : {
            "type" : "string",
            "description" : "The region domain of the OpsGenie.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "message" : {
            "type" : "string",
            "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n",
            "minLength" : 1,
            "maxLength" : 80
          }
        },
        "description" : "Configuration of the OpsGenie notification."
      } ]
    },
    "PagerDutyNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "account", "name", "serviceName" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "account" : {
            "type" : "string",
            "description" : "The name of the PagerDuty account.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "serviceApiKey" : {
            "type" : "string",
            "description" : "The API key to access PagerDuty.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "serviceName" : {
            "type" : "string",
            "description" : "The name of the service.",
            "minLength" : 1,
            "maxLength" : 1000
          }
        },
        "description" : "Configuration of the PagerDuty notification."
      } ]
    },
    "ServiceNowNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "message", "name", "sendEvents", "sendIncidents", "username" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "instanceName" : {
            "type" : "string",
            "description" : "The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL. \n\n This field is mutually exclusive with the **url** field. You can only use one of them.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the on-premise ServiceNow installation. \n\n This field is mutually exclusive with the **instanceName** field. You can only use one of them.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "username" : {
            "type" : "string",
            "description" : "The username of the ServiceNow account. \n\n Make sure that your user account has the `rest_service`, `web_request_admin`, and `x_dynat_ruxit.Integration` roles.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "password" : {
            "type" : "string",
            "description" : "The username to the ServiceNow account",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "message" : {
            "type" : "string",
            "description" : "The content of the ServiceNow description. \n\n It is limited to 80 characters.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 1,
            "maxLength" : 80
          },
          "sendIncidents" : {
            "type" : "boolean",
            "description" : "Send incidents into ServiceNow ITSM (`true`)."
          },
          "sendEvents" : {
            "type" : "boolean",
            "description" : "Send events into ServiceNow ITOM (`true`)."
          }
        },
        "description" : "Configuration of the ServiceNow notification."
      } ]
    },
    "SlackNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "channel", "name", "title" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the Slack WebHook.\n\n This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "channel" : {
            "type" : "string",
            "description" : "The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "title" : {
            "type" : "string",
            "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 1
          }
        },
        "description" : "Configuration of the Slack notification."
      } ]
    },
    "TrelloNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "applicationKey", "boardId", "description", "listId", "name", "resolvedListId", "text" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "applicationKey" : {
            "type" : "string",
            "description" : "The application key for the Trello account.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "authorizationToken" : {
            "type" : "string",
            "description" : "The application token for the Trello account.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "boardId" : {
            "type" : "string",
            "description" : "The Trello board to which the card should be assigned.",
            "minLength" : 1
          },
          "listId" : {
            "type" : "string",
            "description" : "The Trello list to which the card should be assigned.",
            "minLength" : 1
          },
          "resolvedListId" : {
            "type" : "string",
            "description" : "The Trello list to which the card of the resolved problem should be assigned.",
            "minLength" : 1
          },
          "text" : {
            "type" : "string",
            "description" : "The text of the generated Trello card.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 1
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the Trello card. \n\n You can use same placeholders as in card text.",
            "minLength" : 1
          }
        },
        "description" : "Configuration of the Trello notification."
      } ]
    },
    "VictorOpsNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "message", "name", "routingKey" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "apiKey" : {
            "type" : "string",
            "description" : "The API key for the target VictorOps account.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "routingKey" : {
            "type" : "string",
            "description" : "The routing key, defining the group to be notified.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "message" : {
            "type" : "string",
            "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n",
            "minLength" : 1
          }
        },
        "description" : "Configuration of the VictorOps notification."
      } ]
    },
    "WebHookNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "acceptAnyCertificate", "name", "payload", "url" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the WebHook endpoint.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "acceptAnyCertificate" : {
            "type" : "boolean",
            "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
          },
          "payload" : {
            "type" : "string",
            "description" : "The content of the notification message.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 1
          },
          "headers" : {
            "type" : "array",
            "description" : "A list of the additional HTTP headers.",
            "items" : {
              "$ref" : "#/definitions/HttpHeader"
            }
          }
        },
        "description" : "Configuration of the custom WebHook notification."
      } ]
    },
    "XMattersNotificationConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/NotificationConfig"
      }, {
        "type" : "object",
        "required" : [ "acceptAnyCertificate", "name", "payload", "url" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the notification configuration.",
            "minLength" : 1,
            "maxLength" : 100
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the xMatters WebHook.",
            "minLength" : 1,
            "maxLength" : 1000
          },
          "acceptAnyCertificate" : {
            "type" : "boolean",
            "description" : "Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates."
          },
          "headers" : {
            "type" : "array",
            "description" : "A list of the additional HTTP headers.",
            "items" : {
              "$ref" : "#/definitions/HttpHeader"
            }
          },
          "payload" : {
            "type" : "string",
            "description" : "The content of the message.\n\n You can use the following placeholders: \n* `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array. \n* `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities. \n* `{PID}`: The ID of the reported problem. \n* `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string. \n* `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object. \n* `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string. \n* `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string. \n* `{ProblemID}`: The display number of the reported problem. \n* `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`. \n* `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`. \n* `{ProblemTitle}`: A short description of the problem. \n* `{ProblemURL}`: The URL of the problem within Dynatrace. \n* `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`. If the problem has been merged into another problem, it has the `MERGED` value. \n* `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas. \n",
            "minLength" : 1,
            "maxLength" : 600
          }
        },
        "description" : "Configuration of the xMatters notification."
      } ]
    },
    "OutputStream" : {
      "type" : "object"
    },
    "PluginState" : {
      "type" : "object",
      "properties" : {
        "pluginId" : {
          "type" : "string",
          "description" : "The ID of the plugin."
        },
        "version" : {
          "type" : "string",
          "description" : "The version of the plugin (for example `1.0.0`)."
        },
        "endpointId" : {
          "type" : "string",
          "description" : "The ID of the endpoint where the state is detected - Active Gate only."
        },
        "state" : {
          "type" : "string",
          "description" : "The state of the plugin.",
          "enum" : [ "DISABLED", "ERROR_AUTH", "ERROR_COMMUNICATION_FAILURE", "ERROR_CONFIG", "ERROR_TIMEOUT", "ERROR_UNKNOWN", "INCOMPATIBLE", "LIMIT_REACHED", "NOTHING_TO_REPORT", "OK", "STATE_TYPE_UNKNOWN", "UNINITIALIZED", "UNSUPPORTED", "WAITING_FOR_STATE" ]
        },
        "stateDescription" : {
          "type" : "string",
          "description" : "A short description of the state."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The timestamp when the state was detected, in UTC milliseconds."
        },
        "hostId" : {
          "type" : "string",
          "description" : "The ID of the host on which the plugin runs."
        },
        "processId" : {
          "type" : "string",
          "description" : "The ID of the entity on which the plugin is active."
        }
      },
      "description" : "The state of the plugin."
    },
    "PluginStateList" : {
      "type" : "object",
      "properties" : {
        "states" : {
          "type" : "array",
          "description" : "A list of plugin states.",
          "items" : {
            "$ref" : "#/definitions/PluginState"
          }
        }
      },
      "description" : "A list of plugin states.",
      "example" : {
        "pluginId" : "custom.remote.python.demo",
        "version" : "1.0.0",
        "endpointId" : "-8213819843595439277",
        "state" : "ERROR_AUTH",
        "stateDescription" : "Could not authorize",
        "timestamp" : 1556199097994
      }
    },
    "RemotePluginEndpoint" : {
      "type" : "object",
      "required" : [ "activeGatePluginModule" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The ID of the endpoint."
        },
        "pluginId" : {
          "type" : "string",
          "description" : "The ID of the plugin to which the endpoint belongs."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the endpoint, displayed in Dynatrace."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The endpoint is enabled (`true`) or disabled (`false`)."
        },
        "properties" : {
          "type" : "object",
          "description" : "The list of endpoint parameters. \n\n Each parameter is a property-value pair.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "activeGatePluginModule" : {
          "description" : "The ActiveGate plugin module that hosts the endpoint.",
          "$ref" : "#/definitions/EntityShortRepresentation"
        }
      },
      "description" : "Configuration of a plugin endpoint.",
      "example" : {
        "id" : "-2183662974968812535",
        "pluginId" : "custom.remote.python.demo",
        "name" : "Demo endpoint",
        "enabled" : true,
        "properties" : {
          "serverIp" : "127.0.0.1",
          "password" : "",
          "username" : "dynatrace",
          "dropdownProperty" : "two"
        },
        "activeGatePluginModule" : {
          "id" : "-8844900174269363000"
        }
      }
    },
    "Plugin" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the plugin, for example `custom.remote.python.demo`."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the plugin, displayed in Dynatrace."
        },
        "version" : {
          "type" : "string",
          "description" : "The version of the plugin, displayed in Dynatrace."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the plugin. It indicates the runtime environment of the plugin (for example, ActiveGate).",
          "enum" : [ "ActiveGate", "JMX", "OneAgent", "PMI" ]
        },
        "metricGroup" : {
          "type" : "string",
          "description" : "The metric group of the plugin. All the metrics, captured by the plugin are children of this group."
        },
        "properties" : {
          "type" : "array",
          "description" : "A list of plugin properties.",
          "items" : {
            "$ref" : "#/definitions/PluginProperty"
          }
        }
      },
      "description" : "General configuration of a plugin.",
      "example" : {
        "id" : "custom.remote.python.demo",
        "name" : "ActiveGate demo plugin",
        "version" : "1.01",
        "type" : "ActiveGate",
        "metricGroup" : "custom.demo_metrics",
        "properties" : [ {
          "key" : "serverIp",
          "type" : "STRING",
          "defaultValue" : "127.0.0.1"
        }, {
          "key" : "password",
          "type" : "PASSWORD",
          "defaultValue" : ""
        }, {
          "key" : "username",
          "type" : "STRING",
          "defaultValue" : "dynatrace"
        }, {
          "key" : "dropdownProperty",
          "type" : "DROPDOWN",
          "defaultValue" : "one",
          "dropdownValues" : [ "one", "two", "three" ]
        } ]
      }
    },
    "PluginProperty" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "The key of the property."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the property."
        },
        "defaultValue" : {
          "type" : "string",
          "description" : "The default value of the property."
        },
        "dropdownValues" : {
          "type" : "array",
          "description" : "The list of possible values of the property. \n\n If such a list is defined, only values from this list can be assigned to the property.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "A property of a plugin."
    },
    "RemoteEnvironmentConfigDto" : {
      "type" : "object",
      "required" : [ "displayName", "uri" ],
      "properties" : {
        "networkScope" : {
          "type" : "string",
          "example" : "EXTERNAL",
          "description" : "The network scope of the remote environment:\n* `EXTERNAL`: The remote environment is located in an another network. \n* `INTERNAL`: The remote environment is located in the same network. \n* `CLUSTER`: The remote environment is located in the same cluster. \n\nDynatrace SaaS can only use `EXTERNAL`.\n\nIf not set, `EXTERNAL` is used.",
          "enum" : [ "CLUSTER", "EXTERNAL", "INTERNAL" ]
        },
        "token" : {
          "type" : "string",
          "description" : "The API token granting access to the remote environment. \n\nThe token must have the **Fetch data from a remote environment** (`RestRequestForwarding`) scope. You can create such a token only via [Tokens API](https://www.dynatrace.com/support/help/shortlink/api-tokens-post-new). \n\nFor security reasons, GET requests return this field as `null`."
        },
        "uri" : {
          "type" : "string",
          "description" : "The URI of the remote environment.",
          "minLength" : 1,
          "maxLength" : 1000
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the configuration."
        },
        "displayName" : {
          "type" : "string",
          "description" : "The display name of the remote environment."
        }
      }
    },
    "RemoteEnvironmentConfigStubDto" : {
      "type" : "object",
      "properties" : {
        "networkScope" : {
          "type" : "string",
          "enum" : [ "CLUSTER", "EXTERNAL", "INTERNAL" ]
        },
        "uri" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "RemoteEnvironmentConfigListDto" : {
      "type" : "object",
      "properties" : {
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RemoteEnvironmentConfigStubDto"
          }
        }
      }
    },
    "DashboardReportStub" : {
      "type" : "object",
      "required" : [ "dashboardId", "id", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The ID of the report."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the report.",
          "enum" : [ "DASHBOARD" ]
        },
        "dashboardId" : {
          "type" : "string",
          "description" : "The ID of the associated dashboard."
        }
      },
      "description" : "A short representations of the report."
    },
    "ReportStubList" : {
      "type" : "object",
      "required" : [ "values" ],
      "properties" : {
        "values" : {
          "type" : "array",
          "description" : "A list of reports.",
          "items" : {
            "$ref" : "#/definitions/DashboardReportStub"
          }
        }
      },
      "description" : "A list of short representations of reports.",
      "example" : {
        "values" : [ {
          "id" : "337d883e-98c3-4dac-b8f2-1a9cdbd05969",
          "type" : "DASHBOARD",
          "dashboardId" : "9eee7ed6-a125-4d9d-bfa7-afdb3404cb36"
        }, {
          "id" : "b059e372-0b35-4d44-869b-95c326748848",
          "type" : "DASHBOARD",
          "dashboardId" : "26ccd360-828c-4d83-a65e-040ddc31e8f6"
        } ]
      }
    },
    "DashboardReport" : {
      "type" : "object",
      "required" : [ "dashboardId", "subscriptions", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The ID of the report."
        },
        "type" : {
          "type" : "string",
          "enum" : [ "DASHBOARD" ]
        },
        "dashboardId" : {
          "type" : "string",
          "description" : "The ID of the associated dashboard."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The email notifications for the dashboard report are enabled (`true`) or disabled (`false`)."
        },
        "subscriptions" : {
          "description" : "A list of the report subscribers.",
          "$ref" : "#/definitions/DashboardReportSubscription"
        }
      },
      "description" : "Configuration of a dashboard report. \n\nThe dashboard report provides a public link to the associated dashboard with a custom reporting period: last week for weekly subscribers or last month for monthly subscribers.",
      "example" : {
        "id" : "337d883e-98c3-4dac-b8f2-1a9cdbd05969",
        "type" : "DASHBOARD",
        "dashboardId" : "8dd67562-8bf5-4a09-830d-4e0ca992abd6",
        "enabled" : "true",
        "subscriptions" : {
          "WEEK" : [ "demo@email.com" ],
          "MONTH" : [ "demo@email.com", "demo2@email.com" ]
        }
      }
    },
    "DashboardReportSubscription" : {
      "type" : "object",
      "properties" : {
        "WEEK" : {
          "type" : "array",
          "description" : "A list of weekly subscribers. \n\nWeekly subscribers receive the report every Monday at midnight. \n\n You can specify email addresses or Dynatrace user IDs here.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "MONTH" : {
          "type" : "array",
          "description" : "A list of monthly subscribers. \n\nMonthly subscribers receive the report on the first Monday of the month at midnight. \n\nYou can specify email addresses or Dynatrace user IDs here.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "A list of the report subscribers."
    },
    "ReportSubscriptions" : {
      "type" : "object",
      "required" : [ "recipients", "schedule" ],
      "properties" : {
        "schedule" : {
          "type" : "string",
          "description" : "The schedule of the subscription. \n\n * Weekly subscribers receive the report every Monday at midnight. \n * Monthly subscribers receive the report on the first Monday of the month at midnight.",
          "enum" : [ "MONTH", "WEEK" ]
        },
        "recipients" : {
          "type" : "array",
          "description" : "A list of the recipients. \n\nYou can specify email addresses or Dynatrace user IDs here.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Configuration of a report subscription.",
      "example" : {
        "schedule" : "WEEK",
        "recipients" : [ "demo@email.com", "demo2@email.com" ]
      }
    },
    "CapturedMethod" : {
      "type" : "object",
      "required" : [ "capture", "method" ],
      "properties" : {
        "method" : {
          "description" : "The method where data is captured.",
          "$ref" : "#/definitions/MethodReference"
        },
        "capture" : {
          "type" : "string",
          "description" : "What to capture from the method.",
          "enum" : [ "ARGUMENT", "CLASS_NAME", "METHOD_NAME", "OCCURRENCES", "SIMPLE_CLASS_NAME", "THIS" ]
        },
        "argumentIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The index of the argument to capture. Set `0` to capture the return value, `1` or higher to capture a mehtod argument. \n\n Required if the **capture** is set to `ARGUMENT`.\n\n Not applicable in other cases.",
          "minimum" : 0
        },
        "deepObjectAccess" : {
          "type" : "string",
          "description" : "The getter chain to apply to the captured object. It is required in one of the following cases:\n\n The **capture** is set to `THIS`. \n  The **capture** is set to `ARGUMENT`, and the argument is not a primitive, a primitive wrapper class, a string, or an array. \n\n Not applicable in other cases."
        }
      }
    },
    "DataSource" : {
      "type" : "object",
      "required" : [ "enabled", "source" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "The data source is enbled (`true`) or disabled (`false`)."
        },
        "source" : {
          "type" : "string",
          "description" : "The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**.",
          "enum" : [ "CICS_SDK", "CLIENT_IP", "CUSTOM_ATTRIBUTE", "IIB_NODE", "METHOD_PARAM", "POST_PARAMETER", "QUERY_PARAMETER", "REQUEST_HEADER", "RESPONSE_HEADER", "SESSION_ATTRIBUTE", "URI", "URI_PATH" ]
        },
        "valueProcessing" : {
          "description" : "Process values as specified.",
          "$ref" : "#/definitions/ValueProcessing"
        },
        "technology" : {
          "type" : "string",
          "description" : "The technology of the method to capture if the **source** value is `METHOD_PARAM`. \\n\\n Not applicable in other cases.",
          "enum" : [ "DOTNET", "JAVA", "PHP" ]
        },
        "sessionAttributeTechnology" : {
          "type" : "string",
          "description" : "The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`. \\n\\n Not applicable in other cases.",
          "enum" : [ "ASP_NET", "ASP_NET_CORE", "JAVA" ]
        },
        "methods" : {
          "type" : "array",
          "description" : "The method specification if the **source** value is `METHOD_PARAM`. \n\n Not applicable in other cases.",
          "items" : {
            "$ref" : "#/definitions/CapturedMethod"
          }
        },
        "parameterName" : {
          "type" : "string",
          "description" : "The name of the web request parameter to capture.\n\n Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.\n\n Not applicable in other cases."
        },
        "scope" : {
          "description" : "Conditions for data capturing.",
          "$ref" : "#/definitions/ScopeConditions"
        },
        "capturingAndStorageLocation" : {
          "type" : "string",
          "description" : "Specifies the location where the values are captured and stored.\n\n Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`. \n\n Not applicable in other cases. \n\n If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed.",
          "enum" : [ "CAPTURE_AND_STORE_ON_BOTH", "CAPTURE_AND_STORE_ON_CLIENT", "CAPTURE_AND_STORE_ON_SERVER", "CAPTURE_ON_CLIENT_STORE_ON_SERVER" ]
        },
        "iibNodeType" : {
          "type" : "string",
          "description" : "The IBM integration bus node type for which the value is captured.\n\n This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.\n\n Not applicable in other cases.",
          "enum" : [ "AGGREGATE_CONTROL_NODE", "AGGREGATE_REPLY_NODE", "AGGREGATE_REQUEST_NODE", "CALLABLE_FLOW_REPLY_NODE", "COLLECTOR_NODE", "COMPUTE_NODE", "DATABASE_NODE", "DECISION_SERVICE_NODE", "DOT_NET_COMPUTE_NODE", "FILE_READ_NODE", "FILTER_NODE", "FLOW_ORDER_NODE", "GROUP_COMPLETE_NODE", "GROUP_GATHER_NODE", "GROUP_SCATTER_NODE", "HTTP_HEADER", "JAVA_COMPUTE_NODE", "JMS_CLIENT_RECEIVE", "JMS_CLIENT_REPLY_NODE", "JMS_HEADER", "MQ_GET_NODE", "MQ_OUTPUT_NODE", "PASSTHRU_NODE", "RESET_CONTENT_DESCRIPTOR_NODE", "RE_SEQUENCE_NODE", "ROUTE_NODE", "SAP_REPLY_NODE", "SCA_REPLY_NODE", "SECURITY_PEP", "SEQUENCE_NODE", "SOAP_EXTRACT_NODE", "SOAP_REPLY_NODE", "SOAP_WRAPPER_NODE", "SR_RETRIEVE_ENTITY_NODE", "SR_RETRIEVE_IT_SERVICE_NODE", "THROW_NODE", "TRACE_NODE", "TRY_CATCH_NODE", "VALIDATE_NODE", "WS_REPLY_NODE", "XSL_MQSI_NODE" ]
        },
        "iibMethodNodeCondition" : {
          "description" : "IBM integration bus node name condition for which the value is captured.\n\n This or `iibNodeType` is required if the **source** is: `IIB_NODE`.\n\n Not applicable in other cases.",
          "$ref" : "#/definitions/ValueCondition"
        },
        "cicsSDKMethodNodeCondition" : {
          "description" : "CICS SDK node name condition for which the value is captured.\n\n This  is required if the **source** is: `CICS_SDK`.\n\n Not applicable in other cases.",
          "$ref" : "#/definitions/ValueCondition"
        }
      }
    },
    "ExtractSubstring" : {
      "type" : "object",
      "required" : [ "delimiter", "position" ],
      "properties" : {
        "position" : {
          "type" : "string",
          "description" : "The position of the extracted string relative to delimiters.",
          "enum" : [ "AFTER", "BEFORE", "BETWEEN" ]
        },
        "delimiter" : {
          "type" : "string",
          "description" : "The delimiter string."
        },
        "endDelimiter" : {
          "type" : "string",
          "description" : "The end-delimiter string. \n\n Required if the **position** value is `BETWEEN`. Otherwise not allowed."
        }
      }
    },
    "MethodReference" : {
      "type" : "object",
      "required" : [ "argumentTypes", "methodName", "modifiers", "returnType", "visibility" ],
      "properties" : {
        "visibility" : {
          "type" : "string",
          "description" : "The visibility of the method to capture.",
          "enum" : [ "INTERNAL", "PACKAGE_PROTECTED", "PRIVATE", "PROTECTED", "PUBLIC" ]
        },
        "modifiers" : {
          "type" : "array",
          "description" : "The modifiers of the method to capture.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "ABSTRACT", "EXTERN", "FINAL", "NATIVE", "STATIC" ]
          }
        },
        "className" : {
          "type" : "string",
          "description" : "The class name where the method to capture resides. \n\n Either this or the **fileName** must be set."
        },
        "fileName" : {
          "type" : "string",
          "description" : "The file name where the method to capture resides. \n\n Either this or **className** must be set."
        },
        "fileNameMatcher" : {
          "type" : "string",
          "description" : "The operator of the comparison. \n\n If not set, `EQUALS` is used.",
          "enum" : [ "ENDS_WITH", "EQUALS", "STARTS_WITH" ]
        },
        "methodName" : {
          "type" : "string",
          "description" : "The name of the method to capture."
        },
        "argumentTypes" : {
          "type" : "array",
          "description" : "The list of argument types.",
          "items" : {
            "type" : "string"
          }
        },
        "returnType" : {
          "type" : "string",
          "description" : "The return type."
        }
      },
      "description" : "Configuration of a method to be captured."
    },
    "RequestAttribute" : {
      "type" : "object",
      "required" : [ "aggregation", "confidential", "dataSources", "dataType", "enabled", "name", "normalization", "skipPersonalDataMasking" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the request attribute."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the request attribute.",
          "minLength" : 1
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The request attribute is enabled (`true`) or disabled (`false`)."
        },
        "dataType" : {
          "type" : "string",
          "description" : "The data type of the request attribute.",
          "enum" : [ "DOUBLE", "INTEGER", "STRING" ]
        },
        "dataSources" : {
          "type" : "array",
          "description" : "The list of data sources.",
          "items" : {
            "$ref" : "#/definitions/DataSource"
          },
          "maxItems" : 2000,
          "minItems" : 1
        },
        "normalization" : {
          "type" : "string",
          "description" : "String values transformation. \n\n If the **dataType** is not `string`, set the `Original` here.",
          "enum" : [ "ORIGINAL", "TO_LOWER_CASE", "TO_UPPER_CASE" ]
        },
        "aggregation" : {
          "type" : "string",
          "description" : "Aggregation type for the request values.",
          "enum" : [ "ALL_DISTINCT_VALUES", "AVERAGE", "COUNT_DISTINCT_VALUES", "COUNT_VALUES", "FIRST", "LAST", "MAXIMUM", "MINIMUM", "SUM" ]
        },
        "confidential" : {
          "type" : "boolean",
          "description" : "Confidential data flag. Set `true` to treat the captured data as confidential."
        },
        "skipPersonalDataMasking" : {
          "type" : "boolean",
          "description" : "Personal data masking flag. Set `true` to skip masking. \n\n Warning: This will potentially access personalized data."
        }
      },
      "example" : {
        "name" : "Query Term",
        "enabled" : true,
        "dataType" : "STRING",
        "dataSources" : [ {
          "enabled" : true,
          "source" : "QUERY_PARAMETER",
          "parameterName" : "query",
          "scope" : {
            "tagOfProcessGroup" : "SearchFrontend"
          },
          "capturingAndStorageLocation" : "CAPTURE_AND_STORE_ON_SERVER"
        } ],
        "normalization" : "TO_LOWER_CASE",
        "aggregation" : "ALL_DISTINCT_VALUES",
        "confidential" : false,
        "skipPersonalDataMasking" : false
      }
    },
    "ScopeConditions" : {
      "type" : "object",
      "properties" : {
        "serviceTechnology" : {
          "type" : "string",
          "description" : "Only applies to this service technology.",
          "enum" : [ "ACTIVE_MQ", "ACTIVE_MQ_ARTEMIS", "ADO_NET", "AIX", "AKKA", "AMAZON_REDSHIFT", "AMQP", "APACHE_CAMEL", "APACHE_CASSANDRA", "APACHE_COUCH_DB", "APACHE_DERBY", "APACHE_HTTP_SERVER", "APACHE_KAFKA", "APACHE_SOLR", "APACHE_STORM", "APACHE_SYNAPSE", "APACHE_TOMCAT", "APPARMOR", "APPLICATION_INSIGHTS_SDK", "ASP_DOTNET", "ASP_DOTNET_CORE", "ASP_DOTNET_CORE_SIGNALR", "ASP_DOTNET_SIGNALR", "AWS_LAMBDA", "AWS_RDS", "AWS_SERVICE", "AXIS", "AZURE_FUNCTIONS", "AZURE_SERVICE_BUS", "AZURE_SERVICE_FABRIC", "AZURE_STORAGE", "BOSHBPM", "CITRIX", "CLOUDFOUNDRY", "CLOUDFOUNDRY_AUCTIONEER", "CLOUDFOUNDRY_BOSH", "CLOUDFOUNDRY_GOROUTER", "COLDFUSION", "CONTAINERD", "COUCHBASE", "CRIO", "CXF", "DATASTAX", "DB2", "DIEGO_CELL", "DOCKER", "DOTNET", "DOTNET_REMOTING", "ELASTIC_SEARCH", "ENVOY", "ERLANG", "ETCD", "F5_LTM", "GARDEN", "GLASSFISH", "GO", "GRPC", "GRSECURITY", "HADOOP", "HADOOP_HDFS", "HADOOP_YARN", "HAPROXY", "HEAT", "HESSIAN", "HORNET_Q", "IBM_CICS_REGION", "IBM_CICS_TRANSACTION_GATEWAY", "IBM_IMS_CONNECT_REGION", "IBM_IMS_CONTROL_REGION", "IBM_IMS_MESSAGE_PROCESSING_REGION", "IBM_IMS_SOAP_GATEWAY", "IBM_INTEGRATION_BUS", "IBM_MQ", "IBM_MQ_CLIENT", "IBM_WEBSHPRERE_APPLICATION_SERVER", "IBM_WEBSHPRERE_LIBERTY", "IIS", "IIS_APP_POOL", "ISTIO", "JAVA", "JAX_WS", "JBOSS", "JBOSS_EAP", "JDK_HTTP_SERVER", "JERSEY", "JETTY", "JRUBY", "JYTHON", "KUBERNETES", "LIBVIRT", "LINKERD", "MARIADB", "MEMCACHED", "MICROSOFT_SQL_SERVER", "MONGODB", "MSSQL_CLIENT", "MULE_ESB", "MYSQL", "MYSQL_CONNECTOR", "NETFLIX_SERVO", "NETTY", "NGINX", "NODE_JS", "ONEAGENT_SDK", "OPENCENSUS", "OPENSHIFT", "OPENSTACK_COMPUTE", "OPENSTACK_CONTROLLER", "OPENTELEMETRY", "OPENTRACING", "OPEN_LIBERTY", "ORACLE_DATABASE", "ORACLE_WEBLOGIC", "OWIN", "PERL", "PHP", "PHP_FPM", "PLAY", "POSTGRE_SQL", "POSTGRE_SQL_DOTNET_DATA_PROVIDER", "PROGRESS", "PYTHON", "RABBIT_MQ", "REDIS", "RESTEASY", "RESTLET", "RIAK", "RUBY", "SAG_WEBMETHODS_IS", "SAP", "SAP_HANADB", "SAP_HYBRIS", "SAP_MAXDB", "SAP_SYBASE", "SCALA", "SELINUX", "SHAREPOINT", "SPARK", "SPRING", "SQLITE", "THRIFT", "TIBCO", "TIBCO_BUSINESS_WORKS", "TIBCO_EMS", "VARNISH_CACHE", "VIM2", "VIRTUAL_MACHINE_KVM", "VIRTUAL_MACHINE_QEMU", "WILDFLY", "WINDOWS_CONTAINERS", "WINK", "ZERO_MQ" ]
        },
        "processGroup" : {
          "type" : "string",
          "description" : "Only applies to this process group. Note that this can't be transferred between different clusters or environments."
        },
        "hostGroup" : {
          "type" : "string",
          "description" : "Only applies to this host group."
        },
        "tagOfProcessGroup" : {
          "type" : "string",
          "description" : "Only apply to process groups matching this tag."
        }
      }
    },
    "ValueCondition" : {
      "type" : "object",
      "required" : [ "negate", "operator", "value" ],
      "properties" : {
        "operator" : {
          "type" : "string",
          "description" : "Operator comparing the extracted value to the comparison value.",
          "enum" : [ "BEGINS_WITH", "CONTAINS", "ENDS_WITH", "EQUALS" ]
        },
        "negate" : {
          "type" : "boolean",
          "description" : "Negate the comparison."
        },
        "value" : {
          "type" : "string",
          "description" : "The value to compare to."
        }
      }
    },
    "ValueProcessing" : {
      "type" : "object",
      "required" : [ "trim" ],
      "properties" : {
        "extractSubstring" : {
          "description" : "Preprocess by extracting a substring from the original value.",
          "$ref" : "#/definitions/ExtractSubstring"
        },
        "splitAt" : {
          "type" : "string",
          "description" : "Split (preprocessed) string values at this separator."
        },
        "trim" : {
          "type" : "boolean",
          "description" : "Prune Whitespaces. Defaults to false."
        },
        "valueCondition" : {
          "description" : "Only capture values matching this condition.",
          "$ref" : "#/definitions/ValueCondition"
        },
        "valueExtractorRegex" : {
          "type" : "string",
          "description" : "Extract value from captured data per regex."
        }
      }
    },
    "RequestNaming" : {
      "type" : "object",
      "required" : [ "conditions", "enabled", "namingPattern" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the request naming rule."
        },
        "order" : {
          "type" : "string",
          "description" : "The order string. Sorting request namings alphabetically by their order string determines their relative ordering.\n\nTypically this is managed by Dynatrace internally and will not be present in GET responses nor used if present in PUT/POST requests, except where noted otherwise.",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The rule is enabled (`true`) or disabled (`false`)."
        },
        "namingPattern" : {
          "type" : "string",
          "description" : "The name to be assigned to matching requests.",
          "minLength" : 3,
          "maxLength" : 1000
        },
        "managementZones" : {
          "type" : "array",
          "description" : "Specifies the management zones for which this rule should be applied.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 1,
          "minItems" : 0
        },
        "conditions" : {
          "type" : "array",
          "description" : "The set of conditions for the request naming rule usage. \n\n You can specify several conditions. The request has to match **all** the specified conditions for the rule to trigger.",
          "items" : {
            "$ref" : "#/definitions/Condition"
          }
        },
        "placeholders" : {
          "type" : "array",
          "description" : "The list of custom placeholders to be used in the naming pattern. \n\n It enables you to extract a request attribute value or other request attribute and use it in the request naming pattern.",
          "items" : {
            "$ref" : "#/definitions/Placeholder"
          }
        }
      },
      "description" : "The request naming rule.",
      "example" : {
        "enabled" : true,
        "namingPattern" : "renamed request",
        "conditions" : [ {
          "attribute" : "WEBREQUEST_URL_PATH",
          "comparisonInfo" : {
            "type" : "STRING",
            "comparison" : "BEGINS_WITH",
            "value" : "/url",
            "negate" : false,
            "caseSensitive" : false
          }
        } ]
      }
    },
    "ResourceNaming" : {
      "type" : "object",
      "required" : [ "binary", "image" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "image" : {
          "type" : "array",
          "description" : "The list of image extensions that will be renamed to `Image`.",
          "items" : {
            "type" : "string"
          }
        },
        "binary" : {
          "type" : "array",
          "description" : "The list of binary extensions that will be renamed to `Binary`.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "The resource naming rule.",
      "example" : {
        "image" : [ ".jpg", ".png", ".gif", ".jpeg", ".bmp", ".svg", ".ico", ".woff", ".ttf", ".otf" ],
        "binary" : [ ".exe", ".zip" ]
      }
    },
    "AfterTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "required" : [ "delimiter" ],
        "properties" : {
          "delimiter" : {
            "type" : "string",
            "description" : "The delimiter of the transformation. The transformation removes everything before this delimiter and keeps everything after it.  \n\n The delimiter itself is not kept. \n\n If several delimiters appear in the initial value, only the first one is used."
          }
        },
        "description" : "The transformation of the `AFTER` type.The transformation removes everything before the specified delimiter and keeps the value after it."
      } ]
    },
    "ApplicationId" : {
      "type" : "object",
      "properties" : {
        "valueOverride" : {
          "type" : "string",
          "description" : "The value to be used instead of the detected value."
        },
        "transformations" : {
          "type" : "array",
          "description" : "Transformations to be applied to the detected value.",
          "items" : {
            "$ref" : "#/definitions/TransformationBase"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "The contribution to the service ID calculation from the detected application ID. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
    },
    "BeforeTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "required" : [ "delimiter" ],
        "properties" : {
          "delimiter" : {
            "type" : "string",
            "description" : "The delimiter of the transformation. The transformation keeps everything before this delimiter and removes everything after it. \n\n The delimiter itself is not kept. \n\nIf several delimiters appear in the initial value, only the first one is used."
          }
        },
        "description" : "The transformation of the `BEFORE` type. \n\nThe transformation keeps the value before the specified delimiter and removes everything after it."
      } ]
    },
    "BetweenTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "required" : [ "after", "before" ],
        "properties" : {
          "after" : {
            "type" : "string",
            "description" : "The starting delimiter. The transformation removes everything before it. The delimiter itself is not kept. "
          },
          "before" : {
            "type" : "string",
            "description" : "The ending delimiter. The transformation removes everything after it. The delimiter itself is not kept."
          }
        },
        "description" : "The transformation of the `BETWEEN` type.The transformation keeps value between the specified delimiters and removes everything outside them."
      } ]
    },
    "CompareOperation" : {
      "type" : "object",
      "required" : [ "type" ],
      "discriminator" : "type",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nEQUALS -> EqualsCompareOperation\nSTRING_CONTAINS -> StringContainsCompareOperation\nSTARTS_WITH -> StartsWithCompareOperation\nENDS_WITH -> EndsWithCompareOperation\nEXISTS -> ExistsCompareOperation\nIP_IN_RANGE -> IpInRangeCompareOperation\nLESS_THAN -> LessThanCompareOperation\nGREATER_THAN -> GreaterThanCompareOperation\nINT_EQUALS -> IntEqualsCompareOperation\nSTRING_EQUALS -> StringEqualsCompareOperation\nTAG -> TagCompareOperation\n",
          "enum" : [ "EQUALS", "STRING_CONTAINS", "STARTS_WITH", "ENDS_WITH", "EXISTS", "IP_IN_RANGE", "LESS_THAN", "GREATER_THAN", "INT_EQUALS", "STRING_EQUALS", "TAG" ]
        }
      },
      "description" : "The condition of the rule. \n\nThe actual set of fields depends on the `type` of the condition."
    },
    "ConditionsFullWebRequestAttributeTypeDto" : {
      "type" : "object",
      "required" : [ "attributeType" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "description" : "The type of the attribute to be checked.",
          "enum" : [ "APPLICATION_ID", "CONTEXT_ROOT", "PG_TAG", "SERVER_NAME", "URL_HOST_NAME", "URL_PATH" ]
        },
        "compareOperations" : {
          "type" : "array",
          "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
          "items" : {
            "$ref" : "#/definitions/CompareOperation"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "A condition of the service detection rule."
    },
    "ContextRoot" : {
      "type" : "object",
      "properties" : {
        "segmentsToCopyFromUrlPath" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of segments of the URL to be kept. \n\nThe URL is divided by slashes (`/`), the indexing starts with `1` at context root. \n\nFor example, if you specify `2` for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used."
        },
        "transformations" : {
          "type" : "array",
          "description" : "Transformations to be applied to the detected value.",
          "items" : {
            "$ref" : "#/definitions/ContextRootTransformation"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "The contribution to the service ID calculation from the detected context root. \n\n The context root is the first segment of the request URL after server name. For example, in the `www.dynatrace.com/support/help/extend-dynatrace/dynatrace-api/` URL the context root is `support`. \n\nYou have two options: \n* Keep a part of the detected URL. Specify the number of segments to be kept in the **segmentsToCopyFromUrlPath** field. \n* Dynamically transform the detected URL. Specify the transformation parameters in the **transformations** field. \n\nYou can use one or both options. If you use both, the transformation applies to the modified URL."
    },
    "ContextRootTransformation" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nBEFORE -> BeforeTransformation\nREPLACE_BETWEEN -> ReplaceBetweenTransformation\nREMOVE_NUMBERS -> RemoveNumbersTransformation\nREMOVE_CREDIT_CARDS -> RemoveCreditCardNumbersTransformation\nREMOVE_IBANS -> RemoveIBANsTransformation\nREMOVE_IPS -> RemoveIPsTransformation\n",
          "enum" : [ "BEFORE", "REPLACE_BETWEEN", "REMOVE_NUMBERS", "REMOVE_CREDIT_CARDS", "REMOVE_IBANS", "REMOVE_IPS" ]
        }
      },
      "description" : "Configuration of transformation of the detected value. \n\nIf several transformations are specified, they are handled sequentially from top to bottom. Each transformation is applied to the result of the preceding transformation. For example, the second transformation is applied to the result of the first transformation. \n\nThe actual set of fields depends on the `type` of the transformation."
    },
    "EndsWithCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "values" ],
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Inverts the operation of the condition. Set to `true` to turn **ends with** into **does not end with**. \n\n If not set, then `false` is used."
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
          },
          "values" : {
            "type" : "array",
            "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            },
            "maxItems" : 10,
            "minItems" : 1
          }
        },
        "description" : "The condition of the `ENDS_WITH` type. \n\nThe condition checks whether the string value ends with the specified text."
      } ]
    },
    "EqualsCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "values" ],
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
          },
          "values" : {
            "type" : "array",
            "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
            "uniqueItems" : true,
            "items" : {
              "type" : "object"
            },
            "maxItems" : 10,
            "minItems" : 1
          }
        },
        "description" : "The condition of the `EQUALS` type. \n\nThe condition checks whether the detected value equals the specified one."
      } ]
    },
    "ExistsCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Inverts the operation of the condition. Set to `true` to turn **exists** into **does not exist**. \n\n If not set, then `false` is used."
          }
        },
        "description" : "The condition of the `EXISTS` type. \n\nThe condition checks whether the specified attribute exists."
      } ]
    },
    "FullWebRequestRule" : {
      "type" : "object",
      "required" : [ "enabled", "name" ],
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "managementZones" : {
          "type" : "array",
          "description" : "Specifies the management zones of the process group for which this service detection rule should be created.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 1,
          "minItems" : 0
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the service detection rule."
        },
        "order" : {
          "type" : "string",
          "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies.",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the rule.",
          "minLength" : 1
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the rule."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The rule is enabled(`true`) or disabled (`false`)."
        },
        "conditions" : {
          "type" : "array",
          "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
          "items" : {
            "$ref" : "#/definitions/ConditionsFullWebRequestAttributeTypeDto"
          },
          "maxItems" : 10,
          "minItems" : 0
        },
        "applicationId" : {
          "description" : "How to handle the detected ID of the application.",
          "$ref" : "#/definitions/ApplicationId"
        },
        "contextRoot" : {
          "description" : "How to handle the detected context root of the request URL.",
          "$ref" : "#/definitions/ContextRoot"
        },
        "serverName" : {
          "description" : "How to handle the detected server name of the request URL.",
          "$ref" : "#/definitions/ServerName"
        }
      },
      "description" : "The service detection rule of the `FULL_WEB_REQUEST` type.",
      "example" : {
        "type" : "FULL_WEB_REQUEST",
        "name" : "My sample rule",
        "description" : "REST API example",
        "enabled" : true,
        "managementZones" : [ "zone 1" ],
        "conditions" : [ {
          "attributeType" : "APPLICATION_ID",
          "compareOperations" : [ {
            "type" : "STRING_CONTAINS",
            "invert" : "false",
            "ignoreCase" : "false",
            "values" : [ "value1", "value2" ]
          } ]
        } ],
        "applicationId" : {
          "valueOverride" : "abc"
        },
        "contextRoot" : {
          "segmentsToCopyFromUrlPath" : 2,
          "transformations" : [ {
            "type" : "BEFORE",
            "delimiter" : "/"
          } ]
        },
        "serverName" : {
          "transformations" : [ {
            "type" : "BEFORE",
            "delimiter" : "-"
          } ]
        }
      }
    },
    "GreaterThanCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "value" ],
        "properties" : {
          "value" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The value to compare to."
          }
        },
        "description" : "The condition of the `GREATER_THAN` type. \n\nThe condition checks whether the integer value is greater than the specified value."
      } ]
    },
    "IntEqualsCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "values" ],
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
          },
          "values" : {
            "type" : "array",
            "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
            "uniqueItems" : true,
            "items" : {
              "type" : "integer",
              "format" : "int32"
            },
            "maxItems" : 10,
            "minItems" : 1
          }
        },
        "description" : "The condition of the `INT_EQUALS` type. \n\nThe condition checks whether the integer value equals the specified value."
      } ]
    },
    "IpInRangeCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "lower", "upper" ],
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Inverts the operation of the condition. Set to `true` to turn **IP is in range** into **IP is not in range**. \n\n If not set, then `false` is used."
          },
          "lower" : {
            "type" : "string",
            "description" : "The lower boundary of the IP range."
          },
          "upper" : {
            "type" : "string",
            "description" : "The upper boundary of the IP range."
          }
        },
        "description" : "The condition of the `IP_IN_RANGE` type. \n\nThe condition checks whether the IP address belongs to a specified range."
      } ]
    },
    "LessThanCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "value" ],
        "properties" : {
          "value" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The value to compare to."
          }
        },
        "description" : "The condition of the `LESS_THAN` type. \n\nThe condition checks whether the integer value is less than the specified value."
      } ]
    },
    "RemoveCreditCardNumbersTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "description" : "The transformation of the `REMOVE_CREDIT_CARDS` type. \n\nThe transformation automatically detects and removes credit card numbers. No additional parameters needed."
      } ]
    },
    "RemoveIBANsTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "description" : "The transformation of the `REMOVE_IBANS` type. \n\nThe transformation automatically detects and removes International Bank Account Numbers (IBAN). No additional parameters needed."
      } ]
    },
    "RemoveIPsTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "description" : "The transformation of the `REMOVE_IPS` type. \n\nThe transformation automatically detects and removes IP addresses. No additional parameters needed."
      } ]
    },
    "RemoveNumbersTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "required" : [ "minDigitCount" ],
        "properties" : {
          "minDigitCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Remove numbers that contain at least *X* digits.",
            "minimum" : 1
          },
          "includeHexNumbers" : {
            "type" : "boolean",
            "description" : "Remove (`true`) or keep (`false`) hexadecimal numbers. \n\n If not set, then `false` is used, keeping hexadecimal numbers."
          }
        },
        "description" : "The transformation of the `REMOVE_NUMBERS` type. \n\nThe transformation removes any numbers from the detected value."
      } ]
    },
    "ReplaceBetweenTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "required" : [ "after", "before", "replacement" ],
        "properties" : {
          "after" : {
            "type" : "string",
            "description" : "The starting delimiter. The transformation removes everything before it. The delimiter itself is not kept."
          },
          "before" : {
            "type" : "string",
            "description" : "The ending delimiter. The transformation removes everything after it. The delimiter itself is not kept."
          },
          "replacement" : {
            "type" : "string",
            "description" : "The value to be used instead of the detected value."
          }
        },
        "description" : "The transformation of the `REPLACE_BETWEEN` type. \n\nThe transformation replaces the content in between specified delimiters with specified static value and removes everything outside them."
      } ]
    },
    "ServerName" : {
      "type" : "object",
      "properties" : {
        "valueOverride" : {
          "type" : "string",
          "description" : "The value to be used instead of the detected value."
        },
        "transformations" : {
          "type" : "array",
          "description" : "Transformations to be applied to the detected value.",
          "items" : {
            "$ref" : "#/definitions/TransformationBase"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "The contribution to the service ID calculation from the detected server name. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
    },
    "SplitSelectTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "required" : [ "delimiter", "itemIndex" ],
        "properties" : {
          "delimiter" : {
            "type" : "string",
            "description" : "The delimiter for splitting the detected value. The delimiter itself is not kept."
          },
          "itemIndex" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The index of the element in the split array to be used. Indexing starts with `1`.",
            "minimum" : 1
          }
        },
        "description" : "The transformation of the `SPLIT_SELECT` type. \n\nThe transformation splits the detected value into an array and keeps the specified element of the array."
      } ]
    },
    "StartsWithCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "values" ],
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Inverts the operation of the condition. Set to `true` to turn **starts with** into **does not start with**. \n\n If not set, then `false` is used."
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
          },
          "values" : {
            "type" : "array",
            "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            },
            "maxItems" : 10,
            "minItems" : 1
          }
        },
        "description" : "The condition of the `STARTS_WITH` type. \n\nThe condition checks whether the string value starts with the specified text."
      } ]
    },
    "StringContainsCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "values" ],
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Inverts the operation of the condition. Set to `true` to turn **contains** into **does not contain**. \n\n If not set, then `false` is used."
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
          },
          "values" : {
            "type" : "array",
            "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            },
            "maxItems" : 10,
            "minItems" : 1
          }
        },
        "description" : "The condition of the `STRING_CONTAINS` type. \n\nThe condition checks whether the string value contains the specified text."
      } ]
    },
    "StringEqualsCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "values" ],
        "properties" : {
          "negate" : {
            "type" : "boolean",
            "description" : "Inverts the operation of the condition. Set to `true` to turn **equals** into **does not equal**. \n\n If not set, then `false` is used."
          },
          "ignoreCase" : {
            "type" : "boolean",
            "description" : "The condition is case sensitive (`false`) or case insensitive (`true`). \n\nIf not set, then `false` is used, making the condition case sensitive."
          },
          "values" : {
            "type" : "array",
            "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            },
            "maxItems" : 10,
            "minItems" : 1
          }
        },
        "description" : "The condition of the `STRING_EQUALS` type. \n\nThe condition checks whether the string value equals the specified text."
      } ]
    },
    "TagCompareOperation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CompareOperation"
      }, {
        "type" : "object",
        "required" : [ "tags" ],
        "properties" : {
          "compareKeyOnly" : {
            "type" : "boolean",
            "description" : "If `true` ignores the tag values and only validates that the tag key is matching.\nDefaults to `false`."
          },
          "tags" : {
            "type" : "array",
            "description" : "The value to compare to. \n\nIf several values are specified, the OR logic applies.",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/TagInfo"
            },
            "maxItems" : 10,
            "minItems" : 1
          }
        },
        "description" : "The condition of the `TAG` type. \n\nThe condition checks if the process group of the potential service is tagged with a specific tag."
      } ]
    },
    "TakeSegmentsTransformation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransformationBase"
      }, {
        "type" : "object",
        "required" : [ "delimiter", "segmentCount" ],
        "properties" : {
          "segmentCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of elements to be kept.",
            "minimum" : 1
          },
          "delimiter" : {
            "type" : "string",
            "description" : "The delimiter for splitting the detected value. The delimiter itself is not kept."
          },
          "takeFromEnd" : {
            "type" : "boolean",
            "description" : "Keeps the first (`false`) or last (`true`) elements. \n\n If not set, then `false` is used, keeping the first elements."
          }
        },
        "description" : "The transformation of the `TAKE_SEGMENTS` type. \n\nThe transformation splits the detected value into an array and keeps the specified number of first or last elements."
      } ]
    },
    "TransformationBase" : {
      "type" : "object",
      "required" : [ "type" ],
      "discriminator" : "type",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Defines the actual set of fields depending on the value:\n\nBEFORE -> BeforeTransformation\nAFTER -> AfterTransformation\nBETWEEN -> BetweenTransformation\nREPLACE_BETWEEN -> ReplaceBetweenTransformation\nREMOVE_NUMBERS -> RemoveNumbersTransformation\nREMOVE_CREDIT_CARDS -> RemoveCreditCardNumbersTransformation\nREMOVE_IBANS -> RemoveIBANsTransformation\nREMOVE_IPS -> RemoveIPsTransformation\nSPLIT_SELECT -> SplitSelectTransformation\nTAKE_SEGMENTS -> TakeSegmentsTransformation\n",
          "enum" : [ "BEFORE", "AFTER", "BETWEEN", "REPLACE_BETWEEN", "REMOVE_NUMBERS", "REMOVE_CREDIT_CARDS", "REMOVE_IBANS", "REMOVE_IPS", "SPLIT_SELECT", "TAKE_SEGMENTS" ]
        }
      },
      "description" : "Configuration of transformation of the detected value. \n\nIf several transformations are specified, they are handled sequentially from top to bottom. Each transformation is applied to the result of the preceding transformation. For example, the second transformation is applied to the result of the first transformation. \n\nThe actual set of fields depends on the `type` of the transformation."
    },
    "ConditionsFullWebServiceAttributeTypeDto" : {
      "type" : "object",
      "required" : [ "attributeType" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "description" : "The type of the attribute to be checked.",
          "enum" : [ "APPLICATION_ID", "CONTEXT_ROOT", "FRAMEWORK", "IS_SOAP_SERVICE", "PG_TAG", "SERVER_NAME", "URL_HOST_NAME", "URL_PATH", "WEBSERVICE_METHOD", "WEBSERVICE_NAME", "WEBSERVICE_NAMESPACE" ]
        },
        "compareOperations" : {
          "type" : "array",
          "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
          "items" : {
            "$ref" : "#/definitions/CompareOperation"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "A condition of the service detection rule."
    },
    "FullWebServiceRule" : {
      "type" : "object",
      "required" : [ "enabled", "name" ],
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "managementZones" : {
          "type" : "array",
          "description" : "Specifies the management zones of the process group for which this service detection rule should be created.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 1,
          "minItems" : 0
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the service detection rule."
        },
        "order" : {
          "type" : "string",
          "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies.",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the rule.",
          "minLength" : 1
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the rule."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The rule is enabled(`true`) or disabled (`false`)."
        },
        "conditions" : {
          "type" : "array",
          "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
          "items" : {
            "$ref" : "#/definitions/ConditionsFullWebServiceAttributeTypeDto"
          },
          "maxItems" : 10,
          "minItems" : 0
        },
        "detectAsWebRequestService" : {
          "type" : "boolean",
          "description" : "Detect the matching requests as full web services (`false`) or web request services (`true`). \n\nSetting this field to `true` prevents detecting of matching requests as full web services. A web request service is created instead. If you need to further modify the resulting web request service, you need to create a separate rule of the `FULL_WEB_REQUEST` type. \n\nDefault is `false`, detecting matching requests as full web services."
        },
        "webServiceName" : {
          "description" : "How to handle the detected name of the web service.",
          "$ref" : "#/definitions/WebServiceName"
        },
        "webServiceNameSpace" : {
          "description" : "How to handle the detected name space of the web service.",
          "$ref" : "#/definitions/WebServiceNameSpace"
        },
        "applicationId" : {
          "description" : "How to handle the detected ID of the application.",
          "$ref" : "#/definitions/ApplicationId"
        },
        "contextRoot" : {
          "description" : "How to handle the detected context root of the service URL.",
          "$ref" : "#/definitions/ContextRoot"
        },
        "serverName" : {
          "description" : "How to handle the detected server name of the service URL.",
          "$ref" : "#/definitions/ServerName"
        }
      },
      "description" : "The service detection rule of the `FULL_WEB_SERVICE` type. \n\nIf you have a condition with the **attributeType** set to `FRAMEWORK`, the **values** field from **compareOperations** is limited to the following possible values: * `AXIS` \n * `CXF` \n * `HESSIAN` \n * `JAX_WS_RI` \n * `JBOSS` \n * `JERSEY` \n * `PROGRESS` \n * `RESTEASY` \n * `RESTLET` \n * `SPRING` \n * `TIBCO` \n * `WEBLOGIC` \n * `WEBMETHODS` \n * `WEBSPHERE` \n * `WINK`",
      "example" : {
        "type" : "FULL_WEB_SERVICE",
        "name" : "My sample rule",
        "description" : "REST API example",
        "enabled" : true,
        "detectAsWebRequestService" : false,
        "managementZones" : [ "zone 1" ],
        "conditions" : [ {
          "attributeType" : "APPLICATION_ID",
          "compareOperations" : [ {
            "type" : "STRING_CONTAINS",
            "invert" : "false",
            "ignoreCase" : "false",
            "values" : [ "value1", "value2" ]
          } ]
        } ],
        "webServiceName" : {
          "valueOverride" : "abc"
        },
        "webServiceNameSpace" : {
          "valueOverride" : "abc"
        },
        "applicationId" : {
          "valueOverride" : "abc"
        },
        "contextRoot" : {
          "segmentsToCopyFromUrlPath" : 2,
          "transformations" : [ {
            "type" : "BEFORE",
            "delimiter" : "/"
          } ]
        },
        "serverName" : {
          "transformations" : [ {
            "type" : "BEFORE",
            "delimiter" : "-"
          } ]
        }
      }
    },
    "WebServiceName" : {
      "type" : "object",
      "properties" : {
        "valueOverride" : {
          "type" : "string",
          "description" : "The value to be used instead of the detected value."
        },
        "transformations" : {
          "type" : "array",
          "description" : "Transformations to be applied to the detected value.",
          "items" : {
            "$ref" : "#/definitions/TransformationBase"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "The contribution to the service ID calculation from the detected web service name. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
    },
    "WebServiceNameSpace" : {
      "type" : "object",
      "properties" : {
        "valueOverride" : {
          "type" : "string",
          "description" : "The value to be used instead of the detected value."
        },
        "transformations" : {
          "type" : "array",
          "description" : "Transformations to be applied to the detected value.",
          "items" : {
            "$ref" : "#/definitions/TransformationBase"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "The contribution to the service ID calculation from the detected web service name space. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
    },
    "ConditionsOpaqueAndExternalWebRequestAttributeTypeDto" : {
      "type" : "object",
      "required" : [ "attributeType" ],
      "properties" : {
        "attributeType" : {
          "type" : "string",
          "description" : "The type of the attribute to be checked.",
          "enum" : [ "IP", "PG_TAG", "TOP_LEVEL_DOMAIN", "URL", "URL_HOST_NAME", "URL_PATH", "URL_PORT" ]
        },
        "compareOperations" : {
          "type" : "array",
          "description" : "A list of conditions for the rule. \n\nIf several conditions are specified, the AND logic applies.",
          "items" : {
            "$ref" : "#/definitions/CompareOperation"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "A condition of the service detection rule."
    },
    "OpaqueAndExternalWebRequestRule" : {
      "type" : "object",
      "required" : [ "enabled", "name" ],
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "managementZones" : {
          "type" : "array",
          "description" : "Specifies the management zones of the process group for which this service detection rule should be created.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 1,
          "minItems" : 0
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "The ID of the service detection rule."
        },
        "order" : {
          "type" : "string",
          "description" : "The order of the rule in the rules list. \n\n The rules are evaluated from top to bottom. The first matching rule applies.",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the rule.",
          "minLength" : 1
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the rule."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "The rule is enabled(`true`) or disabled (`false`)."
        },
        "conditions" : {
          "type" : "array",
          "description" : "A list of conditions of the rule. \n\nIf several conditions are specified, the AND logic applies.",
          "items" : {
            "$ref" : "#/definitions/ConditionsOpaqueAndExternalWebRequestAttributeTypeDto"
          },
          "maxItems" : 10,
          "minItems" : 0
        },
        "applicationId" : {
          "description" : "How to handle the detected ID of the application.",
          "$ref" : "#/definitions/ApplicationId"
        },
        "contextRoot" : {
          "description" : "How to handle the detected context root of the request URL.",
          "$ref" : "#/definitions/ContextRoot"
        },
        "port" : {
          "description" : "How to handle the port where the opaque request has been detected.",
          "$ref" : "#/definitions/Port"
        },
        "publicDomainName" : {
          "description" : "How to handle the domain name where the opaque request has been detected.",
          "$ref" : "#/definitions/PublicDomainName"
        }
      },
      "description" : "The service detection rule of the `OPAQUE_AND_EXTERNAL_WEB_REQUEST` type.",
      "example" : {
        "type" : "OPAQUE_AND_EXTERNAL_WEB_REQUEST",
        "name" : "My sample rule",
        "description" : "REST API example",
        "enabled" : true,
        "managementZones" : [ "zone 1" ],
        "conditions" : [ {
          "attributeType" : "APPLICATION_ID",
          "compareOperations" : [ {
            "type" : "STRING_CONTAINS",
            "invert" : "false",
            "ignoreCase" : "false",
            "values" : [ "value1", "value2" ]
          } ]
        } ],
        "applicationId" : {
          "valueOverride" : "abc"
        },
        "contextRoot" : {
          "segmentsToCopyFromUrlPath" : 2,
          "transformations" : [ {
            "type" : "BEFORE",
            "delimiter" : "/"
          } ]
        },
        "port" : {
          "doNotUseForServiceId" : "true"
        },
        "publicDomainName" : {
          "copyFromHostName" : "true",
          "transformations" : [ {
            "type" : "BEFORE",
            "delimiter" : "/"
          } ]
        }
      }
    },
    "Port" : {
      "type" : "object",
      "properties" : {
        "doNotUseForServiceId" : {
          "type" : "boolean",
          "description" : "The port is used (`false`) or isn't used (`true`) in the service ID calculation."
        }
      },
      "description" : "The contribution to the service ID calculation from the port, where the web request has been detected."
    },
    "PublicDomainName" : {
      "type" : "object",
      "properties" : {
        "copyFromHostName" : {
          "type" : "boolean",
          "description" : "Use (`true`) or don't use (`false`) the detected host name as base for transformation. \n\n Not applicable if the override is specified."
        },
        "valueOverride" : {
          "type" : "string",
          "description" : "The value to be used instead of the detected value."
        },
        "transformations" : {
          "type" : "array",
          "description" : "Transformations to be applied to the detected value.",
          "items" : {
            "$ref" : "#/definitions/TransformationBase"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "The contribution to the service ID calculation from the domain name where the web request has been detected. \n\n You have two mutually exclusive options: \n* Override the detected value with a specified static value. Specify the new value in the **valueOverride** field. \n* Dynamically transform the detected value. Specify the transformation parameters in the **transformations** field."
    },
    "AppIdentifier" : {
      "type" : "object",
      "required" : [ "versionCode", "versionName" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The id where the file belongs to"
        },
        "versionCode" : {
          "type" : "string",
          "description" : "The version code (Android) / bundle version (iOS) the file belongs to"
        },
        "versionName" : {
          "type" : "string",
          "description" : "The version name (Android) / bundle versions string (iOS) the file belongs to"
        },
        "packageName" : {
          "type" : "string",
          "description" : "The bundleId (iOS) or package name (Android) the file belongs to"
        },
        "os" : {
          "type" : "string",
          "description" : "The operating system where the file belongs to",
          "enum" : [ "ANDROID", "IOS", "TVOS" ]
        }
      }
    },
    "SymbolFile" : {
      "type" : "object",
      "properties" : {
        "applicationName" : {
          "type" : "string",
          "description" : "The name of the application this file belongs to"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The size of the file in KB"
        },
        "appId" : {
          "description" : "The appId, the app version and the bundle id which uniquely identify the app",
          "$ref" : "#/definitions/AppIdentifier"
        },
        "uploadTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The timestamp of the upload time of the file, in UTC milliseconds"
        },
        "pinned" : {
          "type" : "boolean",
          "description" : "Is the file pinned and therefore cannot be deleted."
        }
      }
    },
    "SymbolFileList" : {
      "type" : "object",
      "properties" : {
        "symbolFiles" : {
          "type" : "array",
          "description" : "A list of symbolication files.",
          "items" : {
            "$ref" : "#/definitions/SymbolFile"
          }
        }
      }
    },
    "SymbolFilePinning" : {
      "type" : "object",
      "required" : [ "pinned" ],
      "properties" : {
        "pinned" : {
          "type" : "boolean",
          "description" : "New setting for file pinning. True to pin the file, false to unpin the file"
        }
      }
    },
    "SupportedVersion" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "The supported iOS file format version."
        }
      }
    },
    "SymbolFileStorageInfo" : {
      "type" : "object",
      "properties" : {
        "usedStorage" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The size of the used storage by symbolication files in KB"
        },
        "availableStorage" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The storage space still empty which can be used for symbolication files in KB"
        },
        "storageQuota" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total storage quota available on this tenant for symbolication files in KB"
        },
        "fileCount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AzureCredentials" : {
      "type" : "object",
      "required" : [ "appId", "autoTagging", "directoryId", "label", "monitorOnlyTagPairs", "monitorOnlyTaggedEntities" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the AZURE_CREDENTIALS configuration.",
          "readOnly" : true
        },
        "label" : {
          "type" : "string",
          "description" : "The name of the Azure credentials configuration. \nThe name must be unique.\n\nAllowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`.",
          "minLength" : 1,
          "pattern" : "^([a-zA-Z0-9_ +-.]*)$"
        },
        "appId" : {
          "type" : "string",
          "description" : "Id of an application (client) for which the Azure ServicePrinicipal credentials are created\nThe combination of appId and directoryId must be unique",
          "readOnly" : true,
          "minLength" : 1
        },
        "directoryId" : {
          "type" : "string",
          "description" : "Directory (Azure tenant) ID of the ServicePrincipal credentialsThe combination of appId and directoryId must be unique",
          "readOnly" : true,
          "minLength" : 1
        },
        "key" : {
          "type" : "string",
          "description" : "The secretKey to the Azure ServicePrincipal App Registration. \n\nSubmit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`. \n\nIf the field is omitted during an update, the old value is used."
        },
        "active" : {
          "type" : "boolean",
          "description" : "The monitoring is enabled (`true`) or disabled (`false`) for Azure credentials. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value is used."
        },
        "autoTagging" : {
          "type" : "boolean",
          "description" : "Whether or not tags created in Azure should be automatically imported as tags in Dynatrace."
        },
        "monitorOnlyTaggedEntities" : {
          "type" : "boolean",
          "description" : "Whether or not only resources which have the specified Azure tags (`true`) or all resources (`false`) should be monitored."
        },
        "monitorOnlyTagPairs" : {
          "type" : "array",
          "description" : "A list of Azure tags to be monitored. \n\nOnly applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.\n\nYou can specify up to 10 tags. A resource tagged with any of the TagPairs specified will be monitored. If value in TagPair is null, then resources with any value of this tag will be monitored.",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/TagPair"
          },
          "maxItems" : 10,
          "minItems" : 0
        }
      },
      "description" : "Configuration of Azure credentials."
    },
    "TagPair" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "CloudFoundryCredentials" : {
      "type" : "object",
      "required" : [ "name", "username" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata of the given credentials configuration which is useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the given credentials configuration.",
          "readOnly" : true
        },
        "active" : {
          "type" : "boolean",
          "description" : "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value is used."
        },
        "endpointStatus" : {
          "type" : "string",
          "description" : "The status of the configured endpoint.\n\nASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing.\nUNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing.\nDISABLED: The credentials have been disabled by the user.\nFASTCHECK_AUTH_ERROR: The credentials are invalid.\nFASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid.\nFASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached.\nFASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid.\nFASTCHECK_AUTH_LOCKED: The credentials seem to be locked.\nUNKNOWN: An unknown error occured.\n",
          "readOnly" : true,
          "enum" : [ "ASSIGNED", "DISABLED", "FASTCHECK_AUTH_ERROR", "FASTCHECK_AUTH_LOCKED", "FASTCHECK_INVALID_ENDPOINT", "FASTCHECK_NO_RESPONSE", "FASTCHECK_TLS_ERROR", "UNASSIGNED", "UNKNOWN" ]
        },
        "endpointStatusInfo" : {
          "type" : "string",
          "description" : "The detailed status info of the configured endpoint.",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the Cloud Foundry foundation credentials. \n\nAllowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.",
          "minLength" : 1,
          "pattern" : "^([a-zA-Z0-9_ +-.]*)$"
        },
        "apiUrl" : {
          "type" : "string",
          "description" : "The URL of the Cloud Foundry foundation credentials. \n\nThe URL must be valid according to RFC 2396. \n\nLeading or trailing whitespaces are not allowed."
        },
        "loginUrl" : {
          "type" : "string",
          "description" : "The login URL of the Cloud Foundry foundation credentials. \n\nThe URL must be valid according to RFC 2396. \n\nLeading or trailing whitespaces are not allowed."
        },
        "username" : {
          "type" : "string",
          "description" : "The username of the Cloud Foundry foundation credentials. \n\nLeading and trailing whitespaces are not allowed.",
          "minLength" : 1
        },
        "password" : {
          "type" : "string",
          "description" : "The password of the Cloud Foundry foundation credentials."
        }
      },
      "description" : "Configuration for specific Cloud Foundry credentials."
    },
    "KubernetesCredentials" : {
      "type" : "object",
      "required" : [ "label" ],
      "properties" : {
        "metadata" : {
          "description" : "Metadata of the given credentials configuration which is useful for debugging.",
          "readOnly" : true,
          "$ref" : "#/definitions/ConfigurationMetadata"
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the given credentials configuration.",
          "readOnly" : true
        },
        "active" : {
          "type" : "boolean",
          "description" : "The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration. \n\nIf not set on creation, the `true` value is used. \n\nIf the field is omitted during an update, the old value is used."
        },
        "endpointStatus" : {
          "type" : "string",
          "description" : "The status of the configured endpoint.\n\nASSIGNED: The credentials are assigned to an ActiveGate which is responsible for processing.\nUNASSIGNED: The credentials are not yet assigned to an ActiveGate so there is currently no processing.\nDISABLED: The credentials have been disabled by the user.\nFASTCHECK_AUTH_ERROR: The credentials are invalid.\nFASTCHECK_TLS_ERROR: The endpoint TLS certificate is invalid.\nFASTCHECK_NO_RESPONSE: The endpoint did not return a result until the timeout was reached.\nFASTCHECK_INVALID_ENDPOINT: The endpoint URL was invalid.\nFASTCHECK_AUTH_LOCKED: The credentials seem to be locked.\nUNKNOWN: An unknown error occured.\n",
          "readOnly" : true,
          "enum" : [ "ASSIGNED", "DISABLED", "FASTCHECK_AUTH_ERROR", "FASTCHECK_AUTH_LOCKED", "FASTCHECK_INVALID_ENDPOINT", "FASTCHECK_NO_RESPONSE", "FASTCHECK_TLS_ERROR", "UNASSIGNED", "UNKNOWN" ]
        },
        "endpointStatusInfo" : {
          "type" : "string",
          "description" : "The detailed status info of the configured endpoint.",
          "readOnly" : true
        },
        "label" : {
          "type" : "string",
          "description" : "The name of the Kubernetes credentials configuration. \n\nAllowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.",
          "minLength" : 1,
          "pattern" : "^([a-zA-Z0-9_ +-.]*)$"
        },
        "endpointUrl" : {
          "type" : "string",
          "description" : "The URL of the Kubernetes API server. \n\nIt must be unique within a Dynatrace environment. \n\nThe URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed."
        },
        "authToken" : {
          "type" : "string",
          "description" : "The service account bearer token for the Kubernetes API server. \n\nSubmit your token on creation or update of the configuration. For security reasons, GET requests return this field as `null`. \n\nIf the field is omitted during an update, the old value is used."
        }
      },
      "description" : "Configuration for specific Kubernetes credentials.",
      "example" : {
        "id" : "KUBERNETES_CLUSTER-CC06304728FC9396",
        "label" : "K8s credentials - REST example",
        "endpointUrl" : "https://k8s-api.sample.org",
        "eventsFieldSelectors" : [ {
          "label" : "Node events",
          "fieldSelector" : "involvedObject.kind=Node",
          "active" : true
        } ],
        "eventsIntegrationEnabled" : true,
        "authToken" : "abcd9876",
        "active" : true,
        "certificateCheckEnabled" : true
      }
    }
  },
  "host" : "environment.live.dynatrace.com"
}