// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NetworkDroppedPacketsThresholds Custom thresholds for dropped packets. If not set, automatic mode is used.
//
//  **All** of these conditions must be met to trigger an alert.
// swagger:model NetworkDroppedPacketsThresholds
type NetworkDroppedPacketsThresholds struct {

	// Receive/transmit dropped packet percentage is higher than *X*% in 3 out of 5 samples.
	// Required: true
	// Maximum: 100
	// Minimum: 1
	DroppedPacketsPercentage *int32 `json:"droppedPacketsPercentage"`

	// Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples.
	// Required: true
	// Maximum: 10000
	// Minimum: 1
	TotalPacketsRate *int32 `json:"totalPacketsRate"`
}

// Validate validates this network dropped packets thresholds
func (m *NetworkDroppedPacketsThresholds) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDroppedPacketsPercentage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPacketsRate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NetworkDroppedPacketsThresholds) validateDroppedPacketsPercentage(formats strfmt.Registry) error {

	if err := validate.Required("droppedPacketsPercentage", "body", m.DroppedPacketsPercentage); err != nil {
		return err
	}

	if err := validate.MinimumInt("droppedPacketsPercentage", "body", int64(*m.DroppedPacketsPercentage), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("droppedPacketsPercentage", "body", int64(*m.DroppedPacketsPercentage), 100, false); err != nil {
		return err
	}

	return nil
}

func (m *NetworkDroppedPacketsThresholds) validateTotalPacketsRate(formats strfmt.Registry) error {

	if err := validate.Required("totalPacketsRate", "body", m.TotalPacketsRate); err != nil {
		return err
	}

	if err := validate.MinimumInt("totalPacketsRate", "body", int64(*m.TotalPacketsRate), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("totalPacketsRate", "body", int64(*m.TotalPacketsRate), 10000, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NetworkDroppedPacketsThresholds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetworkDroppedPacketsThresholds) UnmarshalBinary(b []byte) error {
	var res NetworkDroppedPacketsThresholds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
