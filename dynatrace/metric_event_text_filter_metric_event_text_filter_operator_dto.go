// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MetricEventTextFilterMetricEventTextFilterOperatorDto A filter for a string value based on the given operator.
// swagger:model MetricEventTextFilterMetricEventTextFilterOperatorDto
type MetricEventTextFilterMetricEventTextFilterOperatorDto struct {

	// The operator to match on.
	// Required: true
	// Enum: [CONTAINS_CASE_INSENSITIVE CONTAINS_CASE_SENSITIVE EQUALS]
	Operator *string `json:"operator"`

	// The value to match on.
	// Required: true
	// Max Length: 1000
	// Min Length: 1
	Value *string `json:"value"`
}

// Validate validates this metric event text filter metric event text filter operator dto
func (m *MetricEventTextFilterMetricEventTextFilterOperatorDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var metricEventTextFilterMetricEventTextFilterOperatorDtoTypeOperatorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CONTAINS_CASE_INSENSITIVE","CONTAINS_CASE_SENSITIVE","EQUALS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		metricEventTextFilterMetricEventTextFilterOperatorDtoTypeOperatorPropEnum = append(metricEventTextFilterMetricEventTextFilterOperatorDtoTypeOperatorPropEnum, v)
	}
}

const (

	// MetricEventTextFilterMetricEventTextFilterOperatorDtoOperatorCONTAINSCASEINSENSITIVE captures enum value "CONTAINS_CASE_INSENSITIVE"
	MetricEventTextFilterMetricEventTextFilterOperatorDtoOperatorCONTAINSCASEINSENSITIVE string = "CONTAINS_CASE_INSENSITIVE"

	// MetricEventTextFilterMetricEventTextFilterOperatorDtoOperatorCONTAINSCASESENSITIVE captures enum value "CONTAINS_CASE_SENSITIVE"
	MetricEventTextFilterMetricEventTextFilterOperatorDtoOperatorCONTAINSCASESENSITIVE string = "CONTAINS_CASE_SENSITIVE"

	// MetricEventTextFilterMetricEventTextFilterOperatorDtoOperatorEQUALS captures enum value "EQUALS"
	MetricEventTextFilterMetricEventTextFilterOperatorDtoOperatorEQUALS string = "EQUALS"
)

// prop value enum
func (m *MetricEventTextFilterMetricEventTextFilterOperatorDto) validateOperatorEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, metricEventTextFilterMetricEventTextFilterOperatorDtoTypeOperatorPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MetricEventTextFilterMetricEventTextFilterOperatorDto) validateOperator(formats strfmt.Registry) error {

	if err := validate.Required("operator", "body", m.Operator); err != nil {
		return err
	}

	// value enum
	if err := m.validateOperatorEnum("operator", "body", *m.Operator); err != nil {
		return err
	}

	return nil
}

func (m *MetricEventTextFilterMetricEventTextFilterOperatorDto) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	if err := validate.MinLength("value", "body", string(*m.Value), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("value", "body", string(*m.Value), 1000); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MetricEventTextFilterMetricEventTextFilterOperatorDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MetricEventTextFilterMetricEventTextFilterOperatorDto) UnmarshalBinary(b []byte) error {
	var res MetricEventTextFilterMetricEventTextFilterOperatorDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
