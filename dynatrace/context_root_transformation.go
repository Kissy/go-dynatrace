// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContextRootTransformation Configuration of transformation of the detected value.
//
// If several transformations are specified, they are handled sequentially from top to bottom. Each transformation is applied to the result of the preceding transformation. For example, the second transformation is applied to the result of the first transformation.
//
// The actual set of fields depends on the `type` of the transformation.
// swagger:model ContextRootTransformation
type ContextRootTransformation struct {

	// Defines the actual set of fields depending on the value:
	//
	// BEFORE -> BeforeTransformation
	// REPLACE_BETWEEN -> ReplaceBetweenTransformation
	// REMOVE_NUMBERS -> RemoveNumbersTransformation
	// REMOVE_CREDIT_CARDS -> RemoveCreditCardNumbersTransformation
	// REMOVE_IBANS -> RemoveIBANsTransformation
	// REMOVE_IPS -> RemoveIPsTransformation
	//
	// Required: true
	// Enum: [BEFORE REPLACE_BETWEEN REMOVE_NUMBERS REMOVE_CREDIT_CARDS REMOVE_IBANS REMOVE_IPS]
	Type *string `json:"type"`
}

// Validate validates this context root transformation
func (m *ContextRootTransformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var contextRootTransformationTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BEFORE","REPLACE_BETWEEN","REMOVE_NUMBERS","REMOVE_CREDIT_CARDS","REMOVE_IBANS","REMOVE_IPS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contextRootTransformationTypeTypePropEnum = append(contextRootTransformationTypeTypePropEnum, v)
	}
}

const (

	// ContextRootTransformationTypeBEFORE captures enum value "BEFORE"
	ContextRootTransformationTypeBEFORE string = "BEFORE"

	// ContextRootTransformationTypeREPLACEBETWEEN captures enum value "REPLACE_BETWEEN"
	ContextRootTransformationTypeREPLACEBETWEEN string = "REPLACE_BETWEEN"

	// ContextRootTransformationTypeREMOVENUMBERS captures enum value "REMOVE_NUMBERS"
	ContextRootTransformationTypeREMOVENUMBERS string = "REMOVE_NUMBERS"

	// ContextRootTransformationTypeREMOVECREDITCARDS captures enum value "REMOVE_CREDIT_CARDS"
	ContextRootTransformationTypeREMOVECREDITCARDS string = "REMOVE_CREDIT_CARDS"

	// ContextRootTransformationTypeREMOVEIBANS captures enum value "REMOVE_IBANS"
	ContextRootTransformationTypeREMOVEIBANS string = "REMOVE_IBANS"

	// ContextRootTransformationTypeREMOVEIPS captures enum value "REMOVE_IPS"
	ContextRootTransformationTypeREMOVEIPS string = "REMOVE_IPS"
)

// prop value enum
func (m *ContextRootTransformation) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, contextRootTransformationTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ContextRootTransformation) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContextRootTransformation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContextRootTransformation) UnmarshalBinary(b []byte) error {
	var res ContextRootTransformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
