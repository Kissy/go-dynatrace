// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Placeholder The custom placeholder to be used as a naming value pattern.
//
//  It enables you to extract a request attribute value or other request attribute and use it in the naming pattern.
// swagger:model Placeholder
type Placeholder struct {

	// The attribute to extract from. You can only use attributes of the **string** type.
	// Required: true
	// Enum: [ACTOR_SYSTEM AKKA_ACTOR_CLASS_NAME AKKA_ACTOR_MESSAGE_TYPE AKKA_ACTOR_PATH AZURE_FUNCTIONS_FUNCTION_NAME AZURE_FUNCTIONS_SITE_NAME CICS_PROGRAM_NAME CICS_SYSTEM_ID CICS_TASK_ID CICS_TRANSACTION_ID CPU_TIME CTG_GATEWAY_URL CTG_PROGRAM CTG_SERVER_NAME CTG_TRANSACTION_ID CUSTOMSERVICE_CLASS CUSTOMSERVICE_METHOD DATABASE_CHILD_CALL_COUNT DATABASE_CHILD_CALL_TIME ERROR_COUNT ESB_APPLICATION_NAME ESB_INPUT_TYPE ESB_LIBRARY_NAME ESB_MESSAGE_FLOW_NAME EXCEPTION_CLASS EXCEPTION_MESSAGE FAILED_STATE FAILURE_REASON FLAW_STATE HTTP_REQUEST_METHOD HTTP_STATUS HTTP_STATUS_CLASS IMS_PROGRAM_NAME IMS_TRANSACTION_ID IO_TIME LOCK_TIME MESSAGING_DESTINATION_TYPE MESSAGING_IS_TEMPORARY_QUEUE MESSAGING_QUEUE_NAME MESSAGING_QUEUE_VENDOR NON_DATABASE_CHILD_CALL_COUNT NON_DATABASE_CHILD_CALL_TIME PROCESS_GROUP_NAME PROCESS_GROUP_TAG REMOTE_ENDPOINT REMOTE_METHOD REMOTE_SERVICE_NAME REQUEST_NAME REQUEST_TYPE RESPONSE_TIME RESPONSE_TIME_CLIENT RMI_CLASS RMI_METHOD SERVICE_DISPLAY_NAME SERVICE_NAME SERVICE_PORT SERVICE_PUBLIC_DOMAIN_NAME SERVICE_REQUEST_ATTRIBUTE SERVICE_TAG SERVICE_TYPE SERVICE_WEB_APPLICATION_ID SERVICE_WEB_CONTEXT_ROOT SERVICE_WEB_SERVER_NAME SERVICE_WEB_SERVICE_NAME SERVICE_WEB_SERVICE_NAMESPACE SUSPENSION_TIME TOTAL_PROCESSING_TIME WAIT_TIME WEBREQUEST_QUERY WEBREQUEST_URL WEBREQUEST_URL_HOST WEBREQUEST_URL_PATH WEBREQUEST_URL_PORT WEBSERVICE_ENDPOINT WEBSERVICE_METHOD ZOS_CALL_TYPE]
	Attribute *string `json:"attribute"`

	// Depending on the **type** value:
	//
	//  * `REGEX_EXTRACTION`: The regular expression.
	//  * `BETWEEN_DELIMITER`: The opening delimiter string to look for.
	//  * All other values: The delimiter string to look for.
	// Required: true
	DelimiterOrRegex *string `json:"delimiterOrRegex"`

	// The closing delimiter string to look for.
	//
	//  Required if the **kind** value is `BETWEEN_DELIMITER`. Not applicable otherwise.
	EndDelimiter string `json:"endDelimiter,omitempty"`

	// The type of extraction.
	//
	//  Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted.
	// Required: true
	// Enum: [AFTER_DELIMITER BEFORE_DELIMITER BETWEEN_DELIMITER REGEX_EXTRACTION]
	Kind *string `json:"kind"`

	// The name of the placeholder. Use it in the naming pattern as `{name}`.
	// Required: true
	Name *string `json:"name"`

	// The format of the extracted string.
	// Enum: [ORIGINAL TO_LOWER_CASE TO_UPPER_CASE]
	Normalization string `json:"normalization,omitempty"`

	// The request attribute to extract from.
	//
	//  Required if the **kind** value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise.
	RequestAttribute string `json:"requestAttribute,omitempty"`
}

// Validate validates this placeholder
func (m *Placeholder) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttribute(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDelimiterOrRegex(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKind(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNormalization(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var placeholderTypeAttributePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ACTOR_SYSTEM","AKKA_ACTOR_CLASS_NAME","AKKA_ACTOR_MESSAGE_TYPE","AKKA_ACTOR_PATH","AZURE_FUNCTIONS_FUNCTION_NAME","AZURE_FUNCTIONS_SITE_NAME","CICS_PROGRAM_NAME","CICS_SYSTEM_ID","CICS_TASK_ID","CICS_TRANSACTION_ID","CPU_TIME","CTG_GATEWAY_URL","CTG_PROGRAM","CTG_SERVER_NAME","CTG_TRANSACTION_ID","CUSTOMSERVICE_CLASS","CUSTOMSERVICE_METHOD","DATABASE_CHILD_CALL_COUNT","DATABASE_CHILD_CALL_TIME","ERROR_COUNT","ESB_APPLICATION_NAME","ESB_INPUT_TYPE","ESB_LIBRARY_NAME","ESB_MESSAGE_FLOW_NAME","EXCEPTION_CLASS","EXCEPTION_MESSAGE","FAILED_STATE","FAILURE_REASON","FLAW_STATE","HTTP_REQUEST_METHOD","HTTP_STATUS","HTTP_STATUS_CLASS","IMS_PROGRAM_NAME","IMS_TRANSACTION_ID","IO_TIME","LOCK_TIME","MESSAGING_DESTINATION_TYPE","MESSAGING_IS_TEMPORARY_QUEUE","MESSAGING_QUEUE_NAME","MESSAGING_QUEUE_VENDOR","NON_DATABASE_CHILD_CALL_COUNT","NON_DATABASE_CHILD_CALL_TIME","PROCESS_GROUP_NAME","PROCESS_GROUP_TAG","REMOTE_ENDPOINT","REMOTE_METHOD","REMOTE_SERVICE_NAME","REQUEST_NAME","REQUEST_TYPE","RESPONSE_TIME","RESPONSE_TIME_CLIENT","RMI_CLASS","RMI_METHOD","SERVICE_DISPLAY_NAME","SERVICE_NAME","SERVICE_PORT","SERVICE_PUBLIC_DOMAIN_NAME","SERVICE_REQUEST_ATTRIBUTE","SERVICE_TAG","SERVICE_TYPE","SERVICE_WEB_APPLICATION_ID","SERVICE_WEB_CONTEXT_ROOT","SERVICE_WEB_SERVER_NAME","SERVICE_WEB_SERVICE_NAME","SERVICE_WEB_SERVICE_NAMESPACE","SUSPENSION_TIME","TOTAL_PROCESSING_TIME","WAIT_TIME","WEBREQUEST_QUERY","WEBREQUEST_URL","WEBREQUEST_URL_HOST","WEBREQUEST_URL_PATH","WEBREQUEST_URL_PORT","WEBSERVICE_ENDPOINT","WEBSERVICE_METHOD","ZOS_CALL_TYPE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		placeholderTypeAttributePropEnum = append(placeholderTypeAttributePropEnum, v)
	}
}

const (

	// PlaceholderAttributeACTORSYSTEM captures enum value "ACTOR_SYSTEM"
	PlaceholderAttributeACTORSYSTEM string = "ACTOR_SYSTEM"

	// PlaceholderAttributeAKKAACTORCLASSNAME captures enum value "AKKA_ACTOR_CLASS_NAME"
	PlaceholderAttributeAKKAACTORCLASSNAME string = "AKKA_ACTOR_CLASS_NAME"

	// PlaceholderAttributeAKKAACTORMESSAGETYPE captures enum value "AKKA_ACTOR_MESSAGE_TYPE"
	PlaceholderAttributeAKKAACTORMESSAGETYPE string = "AKKA_ACTOR_MESSAGE_TYPE"

	// PlaceholderAttributeAKKAACTORPATH captures enum value "AKKA_ACTOR_PATH"
	PlaceholderAttributeAKKAACTORPATH string = "AKKA_ACTOR_PATH"

	// PlaceholderAttributeAZUREFUNCTIONSFUNCTIONNAME captures enum value "AZURE_FUNCTIONS_FUNCTION_NAME"
	PlaceholderAttributeAZUREFUNCTIONSFUNCTIONNAME string = "AZURE_FUNCTIONS_FUNCTION_NAME"

	// PlaceholderAttributeAZUREFUNCTIONSSITENAME captures enum value "AZURE_FUNCTIONS_SITE_NAME"
	PlaceholderAttributeAZUREFUNCTIONSSITENAME string = "AZURE_FUNCTIONS_SITE_NAME"

	// PlaceholderAttributeCICSPROGRAMNAME captures enum value "CICS_PROGRAM_NAME"
	PlaceholderAttributeCICSPROGRAMNAME string = "CICS_PROGRAM_NAME"

	// PlaceholderAttributeCICSSYSTEMID captures enum value "CICS_SYSTEM_ID"
	PlaceholderAttributeCICSSYSTEMID string = "CICS_SYSTEM_ID"

	// PlaceholderAttributeCICSTASKID captures enum value "CICS_TASK_ID"
	PlaceholderAttributeCICSTASKID string = "CICS_TASK_ID"

	// PlaceholderAttributeCICSTRANSACTIONID captures enum value "CICS_TRANSACTION_ID"
	PlaceholderAttributeCICSTRANSACTIONID string = "CICS_TRANSACTION_ID"

	// PlaceholderAttributeCPUTIME captures enum value "CPU_TIME"
	PlaceholderAttributeCPUTIME string = "CPU_TIME"

	// PlaceholderAttributeCTGGATEWAYURL captures enum value "CTG_GATEWAY_URL"
	PlaceholderAttributeCTGGATEWAYURL string = "CTG_GATEWAY_URL"

	// PlaceholderAttributeCTGPROGRAM captures enum value "CTG_PROGRAM"
	PlaceholderAttributeCTGPROGRAM string = "CTG_PROGRAM"

	// PlaceholderAttributeCTGSERVERNAME captures enum value "CTG_SERVER_NAME"
	PlaceholderAttributeCTGSERVERNAME string = "CTG_SERVER_NAME"

	// PlaceholderAttributeCTGTRANSACTIONID captures enum value "CTG_TRANSACTION_ID"
	PlaceholderAttributeCTGTRANSACTIONID string = "CTG_TRANSACTION_ID"

	// PlaceholderAttributeCUSTOMSERVICECLASS captures enum value "CUSTOMSERVICE_CLASS"
	PlaceholderAttributeCUSTOMSERVICECLASS string = "CUSTOMSERVICE_CLASS"

	// PlaceholderAttributeCUSTOMSERVICEMETHOD captures enum value "CUSTOMSERVICE_METHOD"
	PlaceholderAttributeCUSTOMSERVICEMETHOD string = "CUSTOMSERVICE_METHOD"

	// PlaceholderAttributeDATABASECHILDCALLCOUNT captures enum value "DATABASE_CHILD_CALL_COUNT"
	PlaceholderAttributeDATABASECHILDCALLCOUNT string = "DATABASE_CHILD_CALL_COUNT"

	// PlaceholderAttributeDATABASECHILDCALLTIME captures enum value "DATABASE_CHILD_CALL_TIME"
	PlaceholderAttributeDATABASECHILDCALLTIME string = "DATABASE_CHILD_CALL_TIME"

	// PlaceholderAttributeERRORCOUNT captures enum value "ERROR_COUNT"
	PlaceholderAttributeERRORCOUNT string = "ERROR_COUNT"

	// PlaceholderAttributeESBAPPLICATIONNAME captures enum value "ESB_APPLICATION_NAME"
	PlaceholderAttributeESBAPPLICATIONNAME string = "ESB_APPLICATION_NAME"

	// PlaceholderAttributeESBINPUTTYPE captures enum value "ESB_INPUT_TYPE"
	PlaceholderAttributeESBINPUTTYPE string = "ESB_INPUT_TYPE"

	// PlaceholderAttributeESBLIBRARYNAME captures enum value "ESB_LIBRARY_NAME"
	PlaceholderAttributeESBLIBRARYNAME string = "ESB_LIBRARY_NAME"

	// PlaceholderAttributeESBMESSAGEFLOWNAME captures enum value "ESB_MESSAGE_FLOW_NAME"
	PlaceholderAttributeESBMESSAGEFLOWNAME string = "ESB_MESSAGE_FLOW_NAME"

	// PlaceholderAttributeEXCEPTIONCLASS captures enum value "EXCEPTION_CLASS"
	PlaceholderAttributeEXCEPTIONCLASS string = "EXCEPTION_CLASS"

	// PlaceholderAttributeEXCEPTIONMESSAGE captures enum value "EXCEPTION_MESSAGE"
	PlaceholderAttributeEXCEPTIONMESSAGE string = "EXCEPTION_MESSAGE"

	// PlaceholderAttributeFAILEDSTATE captures enum value "FAILED_STATE"
	PlaceholderAttributeFAILEDSTATE string = "FAILED_STATE"

	// PlaceholderAttributeFAILUREREASON captures enum value "FAILURE_REASON"
	PlaceholderAttributeFAILUREREASON string = "FAILURE_REASON"

	// PlaceholderAttributeFLAWSTATE captures enum value "FLAW_STATE"
	PlaceholderAttributeFLAWSTATE string = "FLAW_STATE"

	// PlaceholderAttributeHTTPREQUESTMETHOD captures enum value "HTTP_REQUEST_METHOD"
	PlaceholderAttributeHTTPREQUESTMETHOD string = "HTTP_REQUEST_METHOD"

	// PlaceholderAttributeHTTPSTATUS captures enum value "HTTP_STATUS"
	PlaceholderAttributeHTTPSTATUS string = "HTTP_STATUS"

	// PlaceholderAttributeHTTPSTATUSCLASS captures enum value "HTTP_STATUS_CLASS"
	PlaceholderAttributeHTTPSTATUSCLASS string = "HTTP_STATUS_CLASS"

	// PlaceholderAttributeIMSPROGRAMNAME captures enum value "IMS_PROGRAM_NAME"
	PlaceholderAttributeIMSPROGRAMNAME string = "IMS_PROGRAM_NAME"

	// PlaceholderAttributeIMSTRANSACTIONID captures enum value "IMS_TRANSACTION_ID"
	PlaceholderAttributeIMSTRANSACTIONID string = "IMS_TRANSACTION_ID"

	// PlaceholderAttributeIOTIME captures enum value "IO_TIME"
	PlaceholderAttributeIOTIME string = "IO_TIME"

	// PlaceholderAttributeLOCKTIME captures enum value "LOCK_TIME"
	PlaceholderAttributeLOCKTIME string = "LOCK_TIME"

	// PlaceholderAttributeMESSAGINGDESTINATIONTYPE captures enum value "MESSAGING_DESTINATION_TYPE"
	PlaceholderAttributeMESSAGINGDESTINATIONTYPE string = "MESSAGING_DESTINATION_TYPE"

	// PlaceholderAttributeMESSAGINGISTEMPORARYQUEUE captures enum value "MESSAGING_IS_TEMPORARY_QUEUE"
	PlaceholderAttributeMESSAGINGISTEMPORARYQUEUE string = "MESSAGING_IS_TEMPORARY_QUEUE"

	// PlaceholderAttributeMESSAGINGQUEUENAME captures enum value "MESSAGING_QUEUE_NAME"
	PlaceholderAttributeMESSAGINGQUEUENAME string = "MESSAGING_QUEUE_NAME"

	// PlaceholderAttributeMESSAGINGQUEUEVENDOR captures enum value "MESSAGING_QUEUE_VENDOR"
	PlaceholderAttributeMESSAGINGQUEUEVENDOR string = "MESSAGING_QUEUE_VENDOR"

	// PlaceholderAttributeNONDATABASECHILDCALLCOUNT captures enum value "NON_DATABASE_CHILD_CALL_COUNT"
	PlaceholderAttributeNONDATABASECHILDCALLCOUNT string = "NON_DATABASE_CHILD_CALL_COUNT"

	// PlaceholderAttributeNONDATABASECHILDCALLTIME captures enum value "NON_DATABASE_CHILD_CALL_TIME"
	PlaceholderAttributeNONDATABASECHILDCALLTIME string = "NON_DATABASE_CHILD_CALL_TIME"

	// PlaceholderAttributePROCESSGROUPNAME captures enum value "PROCESS_GROUP_NAME"
	PlaceholderAttributePROCESSGROUPNAME string = "PROCESS_GROUP_NAME"

	// PlaceholderAttributePROCESSGROUPTAG captures enum value "PROCESS_GROUP_TAG"
	PlaceholderAttributePROCESSGROUPTAG string = "PROCESS_GROUP_TAG"

	// PlaceholderAttributeREMOTEENDPOINT captures enum value "REMOTE_ENDPOINT"
	PlaceholderAttributeREMOTEENDPOINT string = "REMOTE_ENDPOINT"

	// PlaceholderAttributeREMOTEMETHOD captures enum value "REMOTE_METHOD"
	PlaceholderAttributeREMOTEMETHOD string = "REMOTE_METHOD"

	// PlaceholderAttributeREMOTESERVICENAME captures enum value "REMOTE_SERVICE_NAME"
	PlaceholderAttributeREMOTESERVICENAME string = "REMOTE_SERVICE_NAME"

	// PlaceholderAttributeREQUESTNAME captures enum value "REQUEST_NAME"
	PlaceholderAttributeREQUESTNAME string = "REQUEST_NAME"

	// PlaceholderAttributeREQUESTTYPE captures enum value "REQUEST_TYPE"
	PlaceholderAttributeREQUESTTYPE string = "REQUEST_TYPE"

	// PlaceholderAttributeRESPONSETIME captures enum value "RESPONSE_TIME"
	PlaceholderAttributeRESPONSETIME string = "RESPONSE_TIME"

	// PlaceholderAttributeRESPONSETIMECLIENT captures enum value "RESPONSE_TIME_CLIENT"
	PlaceholderAttributeRESPONSETIMECLIENT string = "RESPONSE_TIME_CLIENT"

	// PlaceholderAttributeRMICLASS captures enum value "RMI_CLASS"
	PlaceholderAttributeRMICLASS string = "RMI_CLASS"

	// PlaceholderAttributeRMIMETHOD captures enum value "RMI_METHOD"
	PlaceholderAttributeRMIMETHOD string = "RMI_METHOD"

	// PlaceholderAttributeSERVICEDISPLAYNAME captures enum value "SERVICE_DISPLAY_NAME"
	PlaceholderAttributeSERVICEDISPLAYNAME string = "SERVICE_DISPLAY_NAME"

	// PlaceholderAttributeSERVICENAME captures enum value "SERVICE_NAME"
	PlaceholderAttributeSERVICENAME string = "SERVICE_NAME"

	// PlaceholderAttributeSERVICEPORT captures enum value "SERVICE_PORT"
	PlaceholderAttributeSERVICEPORT string = "SERVICE_PORT"

	// PlaceholderAttributeSERVICEPUBLICDOMAINNAME captures enum value "SERVICE_PUBLIC_DOMAIN_NAME"
	PlaceholderAttributeSERVICEPUBLICDOMAINNAME string = "SERVICE_PUBLIC_DOMAIN_NAME"

	// PlaceholderAttributeSERVICEREQUESTATTRIBUTE captures enum value "SERVICE_REQUEST_ATTRIBUTE"
	PlaceholderAttributeSERVICEREQUESTATTRIBUTE string = "SERVICE_REQUEST_ATTRIBUTE"

	// PlaceholderAttributeSERVICETAG captures enum value "SERVICE_TAG"
	PlaceholderAttributeSERVICETAG string = "SERVICE_TAG"

	// PlaceholderAttributeSERVICETYPE captures enum value "SERVICE_TYPE"
	PlaceholderAttributeSERVICETYPE string = "SERVICE_TYPE"

	// PlaceholderAttributeSERVICEWEBAPPLICATIONID captures enum value "SERVICE_WEB_APPLICATION_ID"
	PlaceholderAttributeSERVICEWEBAPPLICATIONID string = "SERVICE_WEB_APPLICATION_ID"

	// PlaceholderAttributeSERVICEWEBCONTEXTROOT captures enum value "SERVICE_WEB_CONTEXT_ROOT"
	PlaceholderAttributeSERVICEWEBCONTEXTROOT string = "SERVICE_WEB_CONTEXT_ROOT"

	// PlaceholderAttributeSERVICEWEBSERVERNAME captures enum value "SERVICE_WEB_SERVER_NAME"
	PlaceholderAttributeSERVICEWEBSERVERNAME string = "SERVICE_WEB_SERVER_NAME"

	// PlaceholderAttributeSERVICEWEBSERVICENAME captures enum value "SERVICE_WEB_SERVICE_NAME"
	PlaceholderAttributeSERVICEWEBSERVICENAME string = "SERVICE_WEB_SERVICE_NAME"

	// PlaceholderAttributeSERVICEWEBSERVICENAMESPACE captures enum value "SERVICE_WEB_SERVICE_NAMESPACE"
	PlaceholderAttributeSERVICEWEBSERVICENAMESPACE string = "SERVICE_WEB_SERVICE_NAMESPACE"

	// PlaceholderAttributeSUSPENSIONTIME captures enum value "SUSPENSION_TIME"
	PlaceholderAttributeSUSPENSIONTIME string = "SUSPENSION_TIME"

	// PlaceholderAttributeTOTALPROCESSINGTIME captures enum value "TOTAL_PROCESSING_TIME"
	PlaceholderAttributeTOTALPROCESSINGTIME string = "TOTAL_PROCESSING_TIME"

	// PlaceholderAttributeWAITTIME captures enum value "WAIT_TIME"
	PlaceholderAttributeWAITTIME string = "WAIT_TIME"

	// PlaceholderAttributeWEBREQUESTQUERY captures enum value "WEBREQUEST_QUERY"
	PlaceholderAttributeWEBREQUESTQUERY string = "WEBREQUEST_QUERY"

	// PlaceholderAttributeWEBREQUESTURL captures enum value "WEBREQUEST_URL"
	PlaceholderAttributeWEBREQUESTURL string = "WEBREQUEST_URL"

	// PlaceholderAttributeWEBREQUESTURLHOST captures enum value "WEBREQUEST_URL_HOST"
	PlaceholderAttributeWEBREQUESTURLHOST string = "WEBREQUEST_URL_HOST"

	// PlaceholderAttributeWEBREQUESTURLPATH captures enum value "WEBREQUEST_URL_PATH"
	PlaceholderAttributeWEBREQUESTURLPATH string = "WEBREQUEST_URL_PATH"

	// PlaceholderAttributeWEBREQUESTURLPORT captures enum value "WEBREQUEST_URL_PORT"
	PlaceholderAttributeWEBREQUESTURLPORT string = "WEBREQUEST_URL_PORT"

	// PlaceholderAttributeWEBSERVICEENDPOINT captures enum value "WEBSERVICE_ENDPOINT"
	PlaceholderAttributeWEBSERVICEENDPOINT string = "WEBSERVICE_ENDPOINT"

	// PlaceholderAttributeWEBSERVICEMETHOD captures enum value "WEBSERVICE_METHOD"
	PlaceholderAttributeWEBSERVICEMETHOD string = "WEBSERVICE_METHOD"

	// PlaceholderAttributeZOSCALLTYPE captures enum value "ZOS_CALL_TYPE"
	PlaceholderAttributeZOSCALLTYPE string = "ZOS_CALL_TYPE"
)

// prop value enum
func (m *Placeholder) validateAttributeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, placeholderTypeAttributePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Placeholder) validateAttribute(formats strfmt.Registry) error {

	if err := validate.Required("attribute", "body", m.Attribute); err != nil {
		return err
	}

	// value enum
	if err := m.validateAttributeEnum("attribute", "body", *m.Attribute); err != nil {
		return err
	}

	return nil
}

func (m *Placeholder) validateDelimiterOrRegex(formats strfmt.Registry) error {

	if err := validate.Required("delimiterOrRegex", "body", m.DelimiterOrRegex); err != nil {
		return err
	}

	return nil
}

var placeholderTypeKindPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AFTER_DELIMITER","BEFORE_DELIMITER","BETWEEN_DELIMITER","REGEX_EXTRACTION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		placeholderTypeKindPropEnum = append(placeholderTypeKindPropEnum, v)
	}
}

const (

	// PlaceholderKindAFTERDELIMITER captures enum value "AFTER_DELIMITER"
	PlaceholderKindAFTERDELIMITER string = "AFTER_DELIMITER"

	// PlaceholderKindBEFOREDELIMITER captures enum value "BEFORE_DELIMITER"
	PlaceholderKindBEFOREDELIMITER string = "BEFORE_DELIMITER"

	// PlaceholderKindBETWEENDELIMITER captures enum value "BETWEEN_DELIMITER"
	PlaceholderKindBETWEENDELIMITER string = "BETWEEN_DELIMITER"

	// PlaceholderKindREGEXEXTRACTION captures enum value "REGEX_EXTRACTION"
	PlaceholderKindREGEXEXTRACTION string = "REGEX_EXTRACTION"
)

// prop value enum
func (m *Placeholder) validateKindEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, placeholderTypeKindPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Placeholder) validateKind(formats strfmt.Registry) error {

	if err := validate.Required("kind", "body", m.Kind); err != nil {
		return err
	}

	// value enum
	if err := m.validateKindEnum("kind", "body", *m.Kind); err != nil {
		return err
	}

	return nil
}

func (m *Placeholder) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

var placeholderTypeNormalizationPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ORIGINAL","TO_LOWER_CASE","TO_UPPER_CASE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		placeholderTypeNormalizationPropEnum = append(placeholderTypeNormalizationPropEnum, v)
	}
}

const (

	// PlaceholderNormalizationORIGINAL captures enum value "ORIGINAL"
	PlaceholderNormalizationORIGINAL string = "ORIGINAL"

	// PlaceholderNormalizationTOLOWERCASE captures enum value "TO_LOWER_CASE"
	PlaceholderNormalizationTOLOWERCASE string = "TO_LOWER_CASE"

	// PlaceholderNormalizationTOUPPERCASE captures enum value "TO_UPPER_CASE"
	PlaceholderNormalizationTOUPPERCASE string = "TO_UPPER_CASE"
)

// prop value enum
func (m *Placeholder) validateNormalizationEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, placeholderTypeNormalizationPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Placeholder) validateNormalization(formats strfmt.Registry) error {

	if swag.IsZero(m.Normalization) { // not required
		return nil
	}

	// value enum
	if err := m.validateNormalizationEnum("normalization", "body", m.Normalization); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Placeholder) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Placeholder) UnmarshalBinary(b []byte) error {
	var res Placeholder
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
