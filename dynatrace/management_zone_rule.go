// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ManagementZoneRule A rule defines when to apply a management zone. Each rule is evaluated independently of all other rules.
// swagger:model ManagementZoneRule
type ManagementZoneRule struct {

	// Matching rules of the management zone. The management zone applies only if all conditions are fulfilled.
	// Required: true
	// Max Items: 30
	// Min Items: 1
	Conditions []*EntityRuleEngineCondition `json:"conditions"`

	// The evaluation rule is enabled(`true`) or disabled(`false`).
	// Required: true
	Enabled *bool `json:"enabled"`

	// How to apply the management zone to underlying entities:
	//
	// `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services.
	// `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services.
	//
	// `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups.
	// `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by matching process groups.
	//
	// `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts.
	//
	// `CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`: Apply to custom devices in matching custom device groups.
	PropagationTypes []string `json:"propagationTypes"`

	// The type of Dynatrace entities the management zone can be applied to.
	// Required: true
	// Enum: [APPMON_SERVER APPMON_SYSTEM_PROFILE AWS_ACCOUNT AWS_APPLICATION_LOAD_BALANCER AWS_AUTO_SCALING_GROUP AWS_CLASSIC_LOAD_BALANCER AWS_NETWORK_LOAD_BALANCER AWS_RELATIONAL_DATABASE_SERVICE AZURE BROWSER_MONITOR CLOUD_APPLICATION CLOUD_APPLICATION_NAMESPACE CLOUD_FOUNDRY_FOUNDATION CUSTOM_APPLICATION CUSTOM_DEVICE CUSTOM_DEVICE_GROUP DATA_CENTER_SERVICE ENTERPRISE_APPLICATION ESXI_HOST EXTERNAL_MONITOR HOST HTTP_MONITOR KUBERNETES_CLUSTER KUBERNETES_NODE MOBILE_APPLICATION OPENSTACK_ACCOUNT PROCESS_GROUP SERVICE WEB_APPLICATION]
	Type *string `json:"type"`
}

// Validate validates this management zone rule
func (m *ManagementZoneRule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConditions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePropagationTypes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ManagementZoneRule) validateConditions(formats strfmt.Registry) error {

	if err := validate.Required("conditions", "body", m.Conditions); err != nil {
		return err
	}

	iConditionsSize := int64(len(m.Conditions))

	if err := validate.MinItems("conditions", "body", iConditionsSize, 1); err != nil {
		return err
	}

	if err := validate.MaxItems("conditions", "body", iConditionsSize, 30); err != nil {
		return err
	}

	for i := 0; i < len(m.Conditions); i++ {
		if swag.IsZero(m.Conditions[i]) { // not required
			continue
		}

		if m.Conditions[i] != nil {
			if err := m.Conditions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("conditions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ManagementZoneRule) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

var managementZoneRulePropagationTypesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE","HOST_TO_PROCESS_GROUP_INSTANCE","PROCESS_GROUP_TO_HOST","PROCESS_GROUP_TO_SERVICE","SERVICE_TO_HOST_LIKE","SERVICE_TO_PROCESS_GROUP_LIKE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		managementZoneRulePropagationTypesItemsEnum = append(managementZoneRulePropagationTypesItemsEnum, v)
	}
}

func (m *ManagementZoneRule) validatePropagationTypesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, managementZoneRulePropagationTypesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *ManagementZoneRule) validatePropagationTypes(formats strfmt.Registry) error {

	if swag.IsZero(m.PropagationTypes) { // not required
		return nil
	}

	for i := 0; i < len(m.PropagationTypes); i++ {

		// value enum
		if err := m.validatePropagationTypesItemsEnum("propagationTypes"+"."+strconv.Itoa(i), "body", m.PropagationTypes[i]); err != nil {
			return err
		}

	}

	return nil
}

var managementZoneRuleTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["APPMON_SERVER","APPMON_SYSTEM_PROFILE","AWS_ACCOUNT","AWS_APPLICATION_LOAD_BALANCER","AWS_AUTO_SCALING_GROUP","AWS_CLASSIC_LOAD_BALANCER","AWS_NETWORK_LOAD_BALANCER","AWS_RELATIONAL_DATABASE_SERVICE","AZURE","BROWSER_MONITOR","CLOUD_APPLICATION","CLOUD_APPLICATION_NAMESPACE","CLOUD_FOUNDRY_FOUNDATION","CUSTOM_APPLICATION","CUSTOM_DEVICE","CUSTOM_DEVICE_GROUP","DATA_CENTER_SERVICE","ENTERPRISE_APPLICATION","ESXI_HOST","EXTERNAL_MONITOR","HOST","HTTP_MONITOR","KUBERNETES_CLUSTER","KUBERNETES_NODE","MOBILE_APPLICATION","OPENSTACK_ACCOUNT","PROCESS_GROUP","SERVICE","WEB_APPLICATION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		managementZoneRuleTypeTypePropEnum = append(managementZoneRuleTypeTypePropEnum, v)
	}
}

const (

	// ManagementZoneRuleTypeAPPMONSERVER captures enum value "APPMON_SERVER"
	ManagementZoneRuleTypeAPPMONSERVER string = "APPMON_SERVER"

	// ManagementZoneRuleTypeAPPMONSYSTEMPROFILE captures enum value "APPMON_SYSTEM_PROFILE"
	ManagementZoneRuleTypeAPPMONSYSTEMPROFILE string = "APPMON_SYSTEM_PROFILE"

	// ManagementZoneRuleTypeAWSACCOUNT captures enum value "AWS_ACCOUNT"
	ManagementZoneRuleTypeAWSACCOUNT string = "AWS_ACCOUNT"

	// ManagementZoneRuleTypeAWSAPPLICATIONLOADBALANCER captures enum value "AWS_APPLICATION_LOAD_BALANCER"
	ManagementZoneRuleTypeAWSAPPLICATIONLOADBALANCER string = "AWS_APPLICATION_LOAD_BALANCER"

	// ManagementZoneRuleTypeAWSAUTOSCALINGGROUP captures enum value "AWS_AUTO_SCALING_GROUP"
	ManagementZoneRuleTypeAWSAUTOSCALINGGROUP string = "AWS_AUTO_SCALING_GROUP"

	// ManagementZoneRuleTypeAWSCLASSICLOADBALANCER captures enum value "AWS_CLASSIC_LOAD_BALANCER"
	ManagementZoneRuleTypeAWSCLASSICLOADBALANCER string = "AWS_CLASSIC_LOAD_BALANCER"

	// ManagementZoneRuleTypeAWSNETWORKLOADBALANCER captures enum value "AWS_NETWORK_LOAD_BALANCER"
	ManagementZoneRuleTypeAWSNETWORKLOADBALANCER string = "AWS_NETWORK_LOAD_BALANCER"

	// ManagementZoneRuleTypeAWSRELATIONALDATABASESERVICE captures enum value "AWS_RELATIONAL_DATABASE_SERVICE"
	ManagementZoneRuleTypeAWSRELATIONALDATABASESERVICE string = "AWS_RELATIONAL_DATABASE_SERVICE"

	// ManagementZoneRuleTypeAZURE captures enum value "AZURE"
	ManagementZoneRuleTypeAZURE string = "AZURE"

	// ManagementZoneRuleTypeBROWSERMONITOR captures enum value "BROWSER_MONITOR"
	ManagementZoneRuleTypeBROWSERMONITOR string = "BROWSER_MONITOR"

	// ManagementZoneRuleTypeCLOUDAPPLICATION captures enum value "CLOUD_APPLICATION"
	ManagementZoneRuleTypeCLOUDAPPLICATION string = "CLOUD_APPLICATION"

	// ManagementZoneRuleTypeCLOUDAPPLICATIONNAMESPACE captures enum value "CLOUD_APPLICATION_NAMESPACE"
	ManagementZoneRuleTypeCLOUDAPPLICATIONNAMESPACE string = "CLOUD_APPLICATION_NAMESPACE"

	// ManagementZoneRuleTypeCLOUDFOUNDRYFOUNDATION captures enum value "CLOUD_FOUNDRY_FOUNDATION"
	ManagementZoneRuleTypeCLOUDFOUNDRYFOUNDATION string = "CLOUD_FOUNDRY_FOUNDATION"

	// ManagementZoneRuleTypeCUSTOMAPPLICATION captures enum value "CUSTOM_APPLICATION"
	ManagementZoneRuleTypeCUSTOMAPPLICATION string = "CUSTOM_APPLICATION"

	// ManagementZoneRuleTypeCUSTOMDEVICE captures enum value "CUSTOM_DEVICE"
	ManagementZoneRuleTypeCUSTOMDEVICE string = "CUSTOM_DEVICE"

	// ManagementZoneRuleTypeCUSTOMDEVICEGROUP captures enum value "CUSTOM_DEVICE_GROUP"
	ManagementZoneRuleTypeCUSTOMDEVICEGROUP string = "CUSTOM_DEVICE_GROUP"

	// ManagementZoneRuleTypeDATACENTERSERVICE captures enum value "DATA_CENTER_SERVICE"
	ManagementZoneRuleTypeDATACENTERSERVICE string = "DATA_CENTER_SERVICE"

	// ManagementZoneRuleTypeENTERPRISEAPPLICATION captures enum value "ENTERPRISE_APPLICATION"
	ManagementZoneRuleTypeENTERPRISEAPPLICATION string = "ENTERPRISE_APPLICATION"

	// ManagementZoneRuleTypeESXIHOST captures enum value "ESXI_HOST"
	ManagementZoneRuleTypeESXIHOST string = "ESXI_HOST"

	// ManagementZoneRuleTypeEXTERNALMONITOR captures enum value "EXTERNAL_MONITOR"
	ManagementZoneRuleTypeEXTERNALMONITOR string = "EXTERNAL_MONITOR"

	// ManagementZoneRuleTypeHOST captures enum value "HOST"
	ManagementZoneRuleTypeHOST string = "HOST"

	// ManagementZoneRuleTypeHTTPMONITOR captures enum value "HTTP_MONITOR"
	ManagementZoneRuleTypeHTTPMONITOR string = "HTTP_MONITOR"

	// ManagementZoneRuleTypeKUBERNETESCLUSTER captures enum value "KUBERNETES_CLUSTER"
	ManagementZoneRuleTypeKUBERNETESCLUSTER string = "KUBERNETES_CLUSTER"

	// ManagementZoneRuleTypeKUBERNETESNODE captures enum value "KUBERNETES_NODE"
	ManagementZoneRuleTypeKUBERNETESNODE string = "KUBERNETES_NODE"

	// ManagementZoneRuleTypeMOBILEAPPLICATION captures enum value "MOBILE_APPLICATION"
	ManagementZoneRuleTypeMOBILEAPPLICATION string = "MOBILE_APPLICATION"

	// ManagementZoneRuleTypeOPENSTACKACCOUNT captures enum value "OPENSTACK_ACCOUNT"
	ManagementZoneRuleTypeOPENSTACKACCOUNT string = "OPENSTACK_ACCOUNT"

	// ManagementZoneRuleTypePROCESSGROUP captures enum value "PROCESS_GROUP"
	ManagementZoneRuleTypePROCESSGROUP string = "PROCESS_GROUP"

	// ManagementZoneRuleTypeSERVICE captures enum value "SERVICE"
	ManagementZoneRuleTypeSERVICE string = "SERVICE"

	// ManagementZoneRuleTypeWEBAPPLICATION captures enum value "WEB_APPLICATION"
	ManagementZoneRuleTypeWEBAPPLICATION string = "WEB_APPLICATION"
)

// prop value enum
func (m *ManagementZoneRule) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, managementZoneRuleTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ManagementZoneRule) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ManagementZoneRule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ManagementZoneRule) UnmarshalBinary(b []byte) error {
	var res ManagementZoneRule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
