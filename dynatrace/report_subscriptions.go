// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReportSubscriptions Configuration of a report subscription.
// swagger:model ReportSubscriptions
type ReportSubscriptions struct {

	// A list of the recipients.
	//
	// You can specify email addresses or Dynatrace user IDs here.
	// Required: true
	// Unique: true
	Recipients []string `json:"recipients"`

	// The schedule of the subscription.
	//
	//  * Weekly subscribers receive the report every Monday at midnight.
	//  * Monthly subscribers receive the report on the first Monday of the month at midnight.
	// Required: true
	// Enum: [MONTH WEEK]
	Schedule *string `json:"schedule"`
}

// Validate validates this report subscriptions
func (m *ReportSubscriptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRecipients(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSchedule(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReportSubscriptions) validateRecipients(formats strfmt.Registry) error {

	if err := validate.Required("recipients", "body", m.Recipients); err != nil {
		return err
	}

	if err := validate.UniqueItems("recipients", "body", m.Recipients); err != nil {
		return err
	}

	return nil
}

var reportSubscriptionsTypeSchedulePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MONTH","WEEK"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		reportSubscriptionsTypeSchedulePropEnum = append(reportSubscriptionsTypeSchedulePropEnum, v)
	}
}

const (

	// ReportSubscriptionsScheduleMONTH captures enum value "MONTH"
	ReportSubscriptionsScheduleMONTH string = "MONTH"

	// ReportSubscriptionsScheduleWEEK captures enum value "WEEK"
	ReportSubscriptionsScheduleWEEK string = "WEEK"
)

// prop value enum
func (m *ReportSubscriptions) validateScheduleEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, reportSubscriptionsTypeSchedulePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ReportSubscriptions) validateSchedule(formats strfmt.Registry) error {

	if err := validate.Required("schedule", "body", m.Schedule); err != nil {
		return err
	}

	// value enum
	if err := m.validateScheduleEnum("schedule", "body", *m.Schedule); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReportSubscriptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReportSubscriptions) UnmarshalBinary(b []byte) error {
	var res ReportSubscriptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
