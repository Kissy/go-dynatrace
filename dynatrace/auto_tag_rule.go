// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AutoTagRule A rule for the auto-tag.
//
//  Defines the conditions of tag usage.
// swagger:model AutoTagRule
type AutoTagRule struct {

	// A list of matching rules for the auto-tag.
	//
	// The tag applies only when **all** conditions are fulfilled.
	// Required: true
	// Max Items: 30
	// Min Items: 1
	Conditions []*EntityRuleEngineCondition `json:"conditions"`

	// Tag rule is enabled (`true`) or disabled (`false`).
	// Required: true
	Enabled *bool `json:"enabled"`

	// How to apply the tag to underlying entities:
	//
	// * `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services.
	//  * `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services.
	//
	// * `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups.
	//  * `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by the process groups.
	//
	// * `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts.
	PropagationTypes []string `json:"propagationTypes"`

	// Type of entities to which the rule applies.
	// Required: true
	// Enum: [APPLICATION AWS_APPLICATION_LOAD_BALANCER AWS_CLASSIC_LOAD_BALANCER AWS_NETWORK_LOAD_BALANCER AWS_RELATIONAL_DATABASE_SERVICE AZURE CUSTOM_APPLICATION CUSTOM_DEVICE DCRUM_APPLICATION ESXI_HOST EXTERNAL_SYNTHETIC_TEST HOST HTTP_CHECK KUBERNETES_NODE MOBILE_APPLICATION PROCESS_GROUP SERVICE SYNTHETIC_TEST]
	Type *string `json:"type"`

	// The value of the auto-tag. If specified, the tag is used in the `name:valueFormat` format.
	//
	// For example, you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`.
	//
	// You can use the following placeholders here:
	//
	// * `{AwsAutoScalingGroup:Name}`
	// * `{AwsAvailabilityZone:Name}`
	// * `{AwsElasticLoadBalancer:Name}`
	// * `{AwsRelationalDatabaseService:DBName}`
	// * `{AwsRelationalDatabaseService:Endpoint}`
	// * `{AwsRelationalDatabaseService:Engine}`
	// * `{AwsRelationalDatabaseService:InstanceClass}`
	// * `{AwsRelationalDatabaseService:Name}`
	// * `{AwsRelationalDatabaseService:Port}`
	// * `{AzureRegion:Name}`
	// * `{AzureScaleSet:Name}`
	// * `{AzureVm:Name}`
	// * `{CloudFoundryOrganization:Name}`
	// * `{CustomDevice:DetectedName}`
	// * `{CustomDevice:DnsName}`
	// * `{CustomDevice:IpAddress}`
	// * `{CustomDevice:Port}`
	// * `{DockerContainerGroupInstance:ContainerName}`
	// * `{DockerContainerGroupInstance:FullImageName}`
	// * `{DockerContainerGroupInstance:ImageVersion}`
	// * `{DockerContainerGroupInstance:StrippedImageName}`
	// * `{ESXIHost:HardwareModel}`
	// * `{ESXIHost:HardwareVendor}`
	// * `{ESXIHost:Name}`
	// * `{ESXIHost:ProductName}`
	// * `{ESXIHost:ProductVersion}`
	// * `{Ec2Instance:AmiId}`
	// * `{Ec2Instance:BeanstalkEnvironmentName}`
	// * `{Ec2Instance:InstanceId}`
	// * `{Ec2Instance:InstanceType}`
	// * `{Ec2Instance:LocalHostName}`
	// * `{Ec2Instance:Name}`
	// * `{Ec2Instance:PublicHostName}`
	// * `{Ec2Instance:SecurityGroup}`
	// * `{GoogleComputeInstance:Id}`
	// * `{GoogleComputeInstance:IpAddresses}`
	// * `{GoogleComputeInstance:MachineType}`
	// * `{GoogleComputeInstance:Name}`
	// * `{GoogleComputeInstance:ProjectId}`
	// * `{GoogleComputeInstance:Project}`
	// * `{Host:AWSNameTag}`
	// * `{Host:AixLogicalCpuCount}`
	// * `{Host:AzureHostName}`
	// * `{Host:AzureSiteName}`
	// * `{Host:BoshDeploymentId}`
	// * `{Host:BoshInstanceId}`
	// * `{Host:BoshInstanceName}`
	// * `{Host:BoshName}`
	// * `{Host:BoshStemcellVersion}`
	// * `{Host:CpuCores}`
	// * `{Host:DetectedName}`
	// * `{Host:Environment:AppName}`
	// * `{Host:Environment:BoshReleaseVersion}`
	// * `{Host:Environment:Environment}`
	// * `{Host:Environment:Link}`
	// * `{Host:Environment:Organization}`
	// * `{Host:Environment:Owner}`
	// * `{Host:Environment:Support}`
	// * `{Host:IpAddress}`
	// * `{Host:LogicalCpuCores}`
	// * `{Host:OneAgentCustomHostName}`
	// * `{Host:OperatingSystemVersion}`
	// * `{Host:PaasMemoryLimit}`
	// * `{HostGroup:Name}`
	// * `{KubernetesCluster:Name}`
	// * `{KubernetesNode:DetectedName}`
	// * `{OpenstackAvailabilityZone:Name}`
	// * `{OpenstackZone:Name}`
	// * `{OpenstackComputeNode:Name}`
	// * `{OpenstackProject:Name}`
	// * `{OpenstackVm:UnstanceType}`
	// * `{OpenstackVm:Name}`
	// * `{OpenstackVm:SecurityGroup}`
	// * `{ProcessGroup:AmazonECRImageAccountId}`
	// * `{ProcessGroup:AmazonECRImageRegion}`
	// * `{ProcessGroup:AmazonECSCluster}`
	// * `{ProcessGroup:AmazonECSContainerName}`
	// * `{ProcessGroup:AmazonECSFamily}`
	// * `{ProcessGroup:AmazonECSRevision}`
	// * `{ProcessGroup:AmazonLambdaFunctionName}`
	// * `{ProcessGroup:AmazonRegion}`
	// * `{ProcessGroup:ApacheConfigPath}`
	// * `{ProcessGroup:ApacheSparkMasterIpAddress}`
	// * `{ProcessGroup:AspDotNetCoreApplicationPath}`
	// * `{ProcessGroup:AspDotNetCoreApplicationPath}`
	// * `{ProcessGroup:AzureHostName}`
	// * `{ProcessGroup:AzureSiteName}`
	// * `{ProcessGroup:CassandraClusterName}`
	// * `{ProcessGroup:CatalinaBase}`
	// * `{ProcessGroup:CatalinaHome}`
	// * `{ProcessGroup:CloudFoundryAppId}`
	// * `{ProcessGroup:CloudFoundryAppName}`
	// * `{ProcessGroup:CloudFoundryInstanceIndex}`
	// * `{ProcessGroup:CloudFoundrySpaceId}`
	// * `{ProcessGroup:CloudFoundrySpaceName}`
	// * `{ProcessGroup:ColdFusionJvmConfigFile}`
	// * `{ProcessGroup:ColdFusionServiceName}`
	// * `{ProcessGroup:CommandLineArgs}`
	// * `{ProcessGroup:DetectedName}`
	// * `{ProcessGroup:DotNetCommandPath}`
	// * `{ProcessGroup:DotNetCommand}`
	// * `{ProcessGroup:DotNetClusterId}`
	// * `{ProcessGroup:DotNetNodeId}`
	// * `{ProcessGroup:ElasticsearchClusterName}`
	// * `{ProcessGroup:ElasticsearchNodeName}`
	// * `{ProcessGroup:EquinoxConfigPath}`
	// * `{ProcessGroup:ExeName}`
	// * `{ProcessGroup:ExePath}`
	// * `{ProcessGroup:GlassFishDomainName}`
	// * `{ProcessGroup:GlassFishInstanceName}`
	// * `{ProcessGroup:GoogleAppEngineInstance}`
	// * `{ProcessGroup:GoogleAppEngineService}`
	// * `{ProcessGroup:GoogleCloudProject}`
	// * `{ProcessGroup:HybrisBinDirectory}`
	// * `{ProcessGroup:HybrisConfigDirectory}`
	// * `{ProcessGroup:HybrisConfigDirectory}`
	// * `{ProcessGroup:HybrisDataDirectory}`
	// * `{ProcessGroup:IBMCicsRegion}`
	// * `{ProcessGroup:IBMCtgName}`
	// * `{ProcessGroup:IBMImsConnectRegion}`
	// * `{ProcessGroup:IBMImsControlRegion}`
	// * `{ProcessGroup:IBMImsMessageProcessingRegion}`
	// * `{ProcessGroup:IBMImsSoapGwName}`
	// * `{ProcessGroup:IBMIntegrationNodeName}`
	// * `{ProcessGroup:IBMIntegrationServerName}`
	// * `{ProcessGroup:IISAppPool}`
	// * `{ProcessGroup:IISRoleName}`
	// * `{ProcessGroup:JbossHome}`
	// * `{ProcessGroup:JbossMode}`
	// * `{ProcessGroup:JbossServerName}`
	// * `{ProcessGroup:JavaJarFile}`
	// * `{ProcessGroup:JavaJarPath}`
	// * `{ProcessGroup:JavaMainCLass}`
	// * `{ProcessGroup:KubernetesBasePodName}`
	// * `{ProcessGroup:KubernetesContainerName}`
	// * `{ProcessGroup:KubernetesFullPodName}`
	// * `{ProcessGroup:KubernetesNamespace}`
	// * `{ProcessGroup:KubernetesPodUid}`
	// * `{ProcessGroup:MssqlInstanceName}`
	// * `{ProcessGroup:NodeJsAppBaseDirectory}`
	// * `{ProcessGroup:NodeJsAppName}`
	// * `{ProcessGroup:NodeJsScriptName}`
	// * `{ProcessGroup:OracleSid}`
	// * `{ProcessGroup:PHPScriptPath}`
	// * `{ProcessGroup:PHPWorkingDirectory}`
	// * `{ProcessGroup:Ports}`
	// * `{ProcessGroup:RubyAppRootPath}`
	// * `{ProcessGroup:RubyScriptPath}`
	// * `{ProcessGroup:SoftwareAGInstallRoot}`
	// * `{ProcessGroup:SoftwareAGProductPropertyName}`
	// * `{ProcessGroup:SpringBootAppName}`
	// * `{ProcessGroup:SpringBootProfileName}`
	// * `{ProcessGroup:SpringBootStartupClass}`
	// * `{ProcessGroup:TIBCOBusinessWorksAppNodeName}`
	// * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}`
	// * `{ProcessGroup:TIBCOBusinessWorksCeAppName}`
	// * `{ProcessGroup:TIBCOBusinessWorksCeVersion}`
	// * `{ProcessGroup:TIBCOBusinessWorksDomainName}`
	// * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}`
	// * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}`
	// * `{ProcessGroup:TIBCOBusinessWorksHome}`
	// * `{ProcessGroup:VarnishInstanceName}`
	// * `{ProcessGroup:WebLogicClusterName}`
	// * `{ProcessGroup:WebLogicDomainName}`
	// * `{ProcessGroup:WebLogicHome}`
	// * `{ProcessGroup:WebLogicName}`
	// * `{ProcessGroup:WebSphereCellName}`
	// * `{ProcessGroup:WebSphereClusterName}`
	// * `{ProcessGroup:WebSphereNodeName}`
	// * `{ProcessGroup:WebSphereServerName}`
	// * `{ProcessGroup:ActorSystem}`
	// * `{Service:STGServerName}`
	// * `{Service:DatabaseHostName}`
	// * `{Service:DatabaseName}`
	// * `{Service:DatabaseVendor}`
	// * `{Service:DetectedName}`
	// * `{Service:EndpointPath}`
	// * `{Service:EndpointPathGatewayUrl}`
	// * `{Service:IIBApplicationName}`
	// * `{Service:MessageListenerClassName}`
	// * `{Service:Port}`
	// * `{Service:PublicDomainName}`
	// * `{Service:RemoteEndpoint}`
	// * `{Service:RemoteName}`
	// * `{Service:WebApplicationId}`
	// * `{Service:WebContextRoot}`
	// * `{Service:WebServerName}`
	// * `{Service:WebServiceNamespace}`
	// * `{Service:WebServiceName}`
	// * `{VmwareDatacenter:Name}`
	// * `{VmwareVm:Name}`
	//
	ValueFormat string `json:"valueFormat,omitempty"`
}

// Validate validates this auto tag rule
func (m *AutoTagRule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConditions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePropagationTypes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AutoTagRule) validateConditions(formats strfmt.Registry) error {

	if err := validate.Required("conditions", "body", m.Conditions); err != nil {
		return err
	}

	iConditionsSize := int64(len(m.Conditions))

	if err := validate.MinItems("conditions", "body", iConditionsSize, 1); err != nil {
		return err
	}

	if err := validate.MaxItems("conditions", "body", iConditionsSize, 30); err != nil {
		return err
	}

	for i := 0; i < len(m.Conditions); i++ {
		if swag.IsZero(m.Conditions[i]) { // not required
			continue
		}

		if m.Conditions[i] != nil {
			if err := m.Conditions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("conditions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AutoTagRule) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

var autoTagRulePropagationTypesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HOST_TO_PROCESS_GROUP_INSTANCE","PROCESS_GROUP_TO_HOST","PROCESS_GROUP_TO_SERVICE","SERVICE_TO_HOST_LIKE","SERVICE_TO_PROCESS_GROUP_LIKE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		autoTagRulePropagationTypesItemsEnum = append(autoTagRulePropagationTypesItemsEnum, v)
	}
}

func (m *AutoTagRule) validatePropagationTypesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, autoTagRulePropagationTypesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *AutoTagRule) validatePropagationTypes(formats strfmt.Registry) error {

	if swag.IsZero(m.PropagationTypes) { // not required
		return nil
	}

	for i := 0; i < len(m.PropagationTypes); i++ {

		// value enum
		if err := m.validatePropagationTypesItemsEnum("propagationTypes"+"."+strconv.Itoa(i), "body", m.PropagationTypes[i]); err != nil {
			return err
		}

	}

	return nil
}

var autoTagRuleTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["APPLICATION","AWS_APPLICATION_LOAD_BALANCER","AWS_CLASSIC_LOAD_BALANCER","AWS_NETWORK_LOAD_BALANCER","AWS_RELATIONAL_DATABASE_SERVICE","AZURE","CUSTOM_APPLICATION","CUSTOM_DEVICE","DCRUM_APPLICATION","ESXI_HOST","EXTERNAL_SYNTHETIC_TEST","HOST","HTTP_CHECK","KUBERNETES_NODE","MOBILE_APPLICATION","PROCESS_GROUP","SERVICE","SYNTHETIC_TEST"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		autoTagRuleTypeTypePropEnum = append(autoTagRuleTypeTypePropEnum, v)
	}
}

const (

	// AutoTagRuleTypeAPPLICATION captures enum value "APPLICATION"
	AutoTagRuleTypeAPPLICATION string = "APPLICATION"

	// AutoTagRuleTypeAWSAPPLICATIONLOADBALANCER captures enum value "AWS_APPLICATION_LOAD_BALANCER"
	AutoTagRuleTypeAWSAPPLICATIONLOADBALANCER string = "AWS_APPLICATION_LOAD_BALANCER"

	// AutoTagRuleTypeAWSCLASSICLOADBALANCER captures enum value "AWS_CLASSIC_LOAD_BALANCER"
	AutoTagRuleTypeAWSCLASSICLOADBALANCER string = "AWS_CLASSIC_LOAD_BALANCER"

	// AutoTagRuleTypeAWSNETWORKLOADBALANCER captures enum value "AWS_NETWORK_LOAD_BALANCER"
	AutoTagRuleTypeAWSNETWORKLOADBALANCER string = "AWS_NETWORK_LOAD_BALANCER"

	// AutoTagRuleTypeAWSRELATIONALDATABASESERVICE captures enum value "AWS_RELATIONAL_DATABASE_SERVICE"
	AutoTagRuleTypeAWSRELATIONALDATABASESERVICE string = "AWS_RELATIONAL_DATABASE_SERVICE"

	// AutoTagRuleTypeAZURE captures enum value "AZURE"
	AutoTagRuleTypeAZURE string = "AZURE"

	// AutoTagRuleTypeCUSTOMAPPLICATION captures enum value "CUSTOM_APPLICATION"
	AutoTagRuleTypeCUSTOMAPPLICATION string = "CUSTOM_APPLICATION"

	// AutoTagRuleTypeCUSTOMDEVICE captures enum value "CUSTOM_DEVICE"
	AutoTagRuleTypeCUSTOMDEVICE string = "CUSTOM_DEVICE"

	// AutoTagRuleTypeDCRUMAPPLICATION captures enum value "DCRUM_APPLICATION"
	AutoTagRuleTypeDCRUMAPPLICATION string = "DCRUM_APPLICATION"

	// AutoTagRuleTypeESXIHOST captures enum value "ESXI_HOST"
	AutoTagRuleTypeESXIHOST string = "ESXI_HOST"

	// AutoTagRuleTypeEXTERNALSYNTHETICTEST captures enum value "EXTERNAL_SYNTHETIC_TEST"
	AutoTagRuleTypeEXTERNALSYNTHETICTEST string = "EXTERNAL_SYNTHETIC_TEST"

	// AutoTagRuleTypeHOST captures enum value "HOST"
	AutoTagRuleTypeHOST string = "HOST"

	// AutoTagRuleTypeHTTPCHECK captures enum value "HTTP_CHECK"
	AutoTagRuleTypeHTTPCHECK string = "HTTP_CHECK"

	// AutoTagRuleTypeKUBERNETESNODE captures enum value "KUBERNETES_NODE"
	AutoTagRuleTypeKUBERNETESNODE string = "KUBERNETES_NODE"

	// AutoTagRuleTypeMOBILEAPPLICATION captures enum value "MOBILE_APPLICATION"
	AutoTagRuleTypeMOBILEAPPLICATION string = "MOBILE_APPLICATION"

	// AutoTagRuleTypePROCESSGROUP captures enum value "PROCESS_GROUP"
	AutoTagRuleTypePROCESSGROUP string = "PROCESS_GROUP"

	// AutoTagRuleTypeSERVICE captures enum value "SERVICE"
	AutoTagRuleTypeSERVICE string = "SERVICE"

	// AutoTagRuleTypeSYNTHETICTEST captures enum value "SYNTHETIC_TEST"
	AutoTagRuleTypeSYNTHETICTEST string = "SYNTHETIC_TEST"
)

// prop value enum
func (m *AutoTagRule) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, autoTagRuleTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AutoTagRule) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AutoTagRule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AutoTagRule) UnmarshalBinary(b []byte) error {
	var res AutoTagRule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
