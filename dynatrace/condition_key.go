// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"
	"io"
	"io/ioutil"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ConditionKey The key to identify the data we're matching.
//
// Depending on the type of the key, the actual JSON may contain additional fields. Find the list in the description of the **type** field.
// swagger:discriminator ConditionKey type
type ConditionKey interface {
	runtime.Validatable

	// The attribute to be used for comparision.
	// Required: true
	// Enum: [APPMON_SERVER_NAME APPMON_SYSTEM_PROFILE_NAME AWS_ACCOUNT_ID AWS_ACCOUNT_NAME AWS_APPLICATION_LOAD_BALANCER_NAME AWS_APPLICATION_LOAD_BALANCER_TAGS AWS_AUTO_SCALING_GROUP_NAME AWS_AUTO_SCALING_GROUP_TAGS AWS_AVAILABILITY_ZONE_NAME AWS_CLASSIC_LOAD_BALANCER_BACKEND_PORTS AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS AWS_CLASSIC_LOAD_BALANCER_NAME AWS_CLASSIC_LOAD_BALANCER_TAGS AWS_NETWORK_LOAD_BALANCER_NAME AWS_NETWORK_LOAD_BALANCER_TAGS AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT AWS_RELATIONAL_DATABASE_SERVICE_ENGINE AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS AWS_RELATIONAL_DATABASE_SERVICE_NAME AWS_RELATIONAL_DATABASE_SERVICE_PORT AWS_RELATIONAL_DATABASE_SERVICE_TAGS AZURE_ENTITY_NAME AZURE_ENTITY_TAGS AZURE_MGMT_GROUP_NAME AZURE_MGMT_GROUP_UUID AZURE_REGION_NAME AZURE_SCALE_SET_NAME AZURE_SUBSCRIPTION_NAME AZURE_SUBSCRIPTION_UUID AZURE_TENANT_NAME AZURE_TENANT_UUID AZURE_VM_NAME BROWSER_MONITOR_NAME BROWSER_MONITOR_TAGS CLOUD_APPLICATION_NAME CLOUD_APPLICATION_NAMESPACE_NAME CLOUD_FOUNDRY_FOUNDATION_NAME CLOUD_FOUNDRY_ORG_NAME CUSTOM_APPLICATION_NAME CUSTOM_APPLICATION_PLATFORM CUSTOM_APPLICATION_TAGS CUSTOM_APPLICATION_TYPE CUSTOM_DEVICE_DETECTED_NAME CUSTOM_DEVICE_DNS_ADDRESS CUSTOM_DEVICE_GROUP_NAME CUSTOM_DEVICE_GROUP_TAGS CUSTOM_DEVICE_IP_ADDRESS CUSTOM_DEVICE_METADATA CUSTOM_DEVICE_NAME CUSTOM_DEVICE_PORT CUSTOM_DEVICE_TAGS CUSTOM_DEVICE_TECHNOLOGY DATA_CENTER_SERVICE_DECODER_TYPE DATA_CENTER_SERVICE_IP_ADDRESS DATA_CENTER_SERVICE_METADATA DATA_CENTER_SERVICE_NAME DATA_CENTER_SERVICE_PORT DATA_CENTER_SERVICE_TAGS DOCKER_CONTAINER_NAME DOCKER_FULL_IMAGE_NAME DOCKER_IMAGE_VERSION DOCKER_STRIPPED_IMAGE_NAME EC2_INSTANCE_AMI_ID EC2_INSTANCE_AWS_INSTANCE_TYPE EC2_INSTANCE_AWS_SECURITY_GROUP EC2_INSTANCE_BEANSTALK_ENV_NAME EC2_INSTANCE_ID EC2_INSTANCE_NAME EC2_INSTANCE_PRIVATE_HOST_NAME EC2_INSTANCE_PUBLIC_HOST_NAME EC2_INSTANCE_TAGS ENTERPRISE_APPLICATION_DECODER_TYPE ENTERPRISE_APPLICATION_IP_ADDRESS ENTERPRISE_APPLICATION_METADATA ENTERPRISE_APPLICATION_NAME ENTERPRISE_APPLICATION_PORT ENTERPRISE_APPLICATION_TAGS ESXI_HOST_CLUSTER_NAME ESXI_HOST_HARDWARE_MODEL ESXI_HOST_HARDWARE_VENDOR ESXI_HOST_NAME ESXI_HOST_PRODUCT_NAME ESXI_HOST_PRODUCT_VERSION ESXI_HOST_TAGS EXTERNAL_MONITOR_ENGINE_DESCRIPTION EXTERNAL_MONITOR_ENGINE_NAME EXTERNAL_MONITOR_ENGINE_TYPE EXTERNAL_MONITOR_NAME EXTERNAL_MONITOR_TAGS GEOLOCATION_SITE_NAME GOOGLE_CLOUD_PLATFORM_ZONE_NAME GOOGLE_COMPUTE_INSTANCE_ID GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE GOOGLE_COMPUTE_INSTANCE_NAME GOOGLE_COMPUTE_INSTANCE_PROJECT GOOGLE_COMPUTE_INSTANCE_PROJECT_ID GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES HOST_AIX_LOGICAL_CPU_COUNT HOST_AIX_SIMULTANEOUS_THREADS HOST_AIX_VIRTUAL_CPU_COUNT HOST_ARCHITECTURE HOST_AWS_NAME_TAG HOST_AZURE_COMPUTE_MODE HOST_AZURE_SKU HOST_AZURE_WEB_APPLICATION_HOST_NAMES HOST_AZURE_WEB_APPLICATION_SITE_NAMES HOST_BITNESS HOST_BOSH_AVAILABILITY_ZONE HOST_BOSH_DEPLOYMENT_ID HOST_BOSH_INSTANCE_ID HOST_BOSH_INSTANCE_NAME HOST_BOSH_NAME HOST_BOSH_STEMCELL_VERSION HOST_CLOUD_TYPE HOST_CPU_CORES HOST_CUSTOM_METADATA HOST_DETECTED_NAME HOST_GROUP_ID HOST_GROUP_NAME HOST_HYPERVISOR_TYPE HOST_IP_ADDRESS HOST_KUBERNETES_LABELS HOST_LOGICAL_CPU_CORES HOST_NAME HOST_ONEAGENT_CUSTOM_HOST_NAME HOST_OS_TYPE HOST_OS_VERSION HOST_PAAS_MEMORY_LIMIT HOST_PAAS_TYPE HOST_TAGS HOST_TECHNOLOGY HTTP_MONITOR_NAME HTTP_MONITOR_TAGS KUBERNETES_CLUSTER_NAME KUBERNETES_NODE_NAME MOBILE_APPLICATION_NAME MOBILE_APPLICATION_PLATFORM MOBILE_APPLICATION_TAGS NAME_OF_COMPUTE_NODE OPENSTACK_ACCOUNT_NAME OPENSTACK_ACCOUNT_PROJECT_NAME OPENSTACK_AVAILABILITY_ZONE_NAME OPENSTACK_PROJECT_NAME OPENSTACK_REGION_NAME OPENSTACK_VM_INSTANCE_TYPE OPENSTACK_VM_NAME OPENSTACK_VM_SECURITY_GROUP PROCESS_GROUP_AZURE_HOST_NAME PROCESS_GROUP_AZURE_SITE_NAME PROCESS_GROUP_CUSTOM_METADATA PROCESS_GROUP_DETECTED_NAME PROCESS_GROUP_ID PROCESS_GROUP_INSTANCE_CUSTOM_METADATA PROCESS_GROUP_LISTEN_PORT PROCESS_GROUP_NAME PROCESS_GROUP_PREDEFINED_METADATA PROCESS_GROUP_TAGS PROCESS_GROUP_TECHNOLOGY PROCESS_GROUP_TECHNOLOGY_EDITION PROCESS_GROUP_TECHNOLOGY_VERSION SERVICE_AKKA_ACTOR_SYSTEM SERVICE_CTG_SERVICE_NAME SERVICE_DATABASE_HOST_NAME SERVICE_DATABASE_NAME SERVICE_DATABASE_TOPOLOGY SERVICE_DATABASE_VENDOR SERVICE_DETECTED_NAME SERVICE_ESB_APPLICATION_NAME SERVICE_IBM_CTG_GATEWAY_URL SERVICE_IIB_APPLICATION_NAME SERVICE_MESSAGING_LISTENER_CLASS_NAME SERVICE_NAME SERVICE_PORT SERVICE_PUBLIC_DOMAIN_NAME SERVICE_REMOTE_ENDPOINT SERVICE_REMOTE_SERVICE_NAME SERVICE_TAGS SERVICE_TECHNOLOGY SERVICE_TECHNOLOGY_EDITION SERVICE_TECHNOLOGY_VERSION SERVICE_TOPOLOGY SERVICE_TYPE SERVICE_WEB_APPLICATION_ID SERVICE_WEB_CONTEXT_ROOT SERVICE_WEB_SERVER_ENDPOINT SERVICE_WEB_SERVER_NAME SERVICE_WEB_SERVICE_NAME SERVICE_WEB_SERVICE_NAMESPACE VMWARE_DATACENTER_NAME VMWARE_VM_NAME WEB_APPLICATION_NAME WEB_APPLICATION_NAME_PATTERN WEB_APPLICATION_TAGS WEB_APPLICATION_TYPE]
	Attribute() *string
	SetAttribute(*string)

	// Defines the actual set of fields depending on the value:
	//
	// PROCESS_CUSTOM_METADATA_KEY -> CustomProcessMetadataConditionKey
	// HOST_CUSTOM_METADATA_KEY -> CustomHostMetadataConditionKey
	// PROCESS_PREDEFINED_METADATA_KEY -> ProcessMetadataConditionKey
	// STRING -> StringConditionKey
	//
	// Enum: [PROCESS_CUSTOM_METADATA_KEY HOST_CUSTOM_METADATA_KEY PROCESS_PREDEFINED_METADATA_KEY STRING]
	Type() string
	SetType(string)
}

type conditionKey struct {
	attributeField *string

	typeField string
}

// Attribute gets the attribute of this polymorphic type
func (m *conditionKey) Attribute() *string {
	return m.attributeField
}

// SetAttribute sets the attribute of this polymorphic type
func (m *conditionKey) SetAttribute(val *string) {
	m.attributeField = val
}

// Type gets the type of this polymorphic type
func (m *conditionKey) Type() string {
	return "ConditionKey"
}

// SetType sets the type of this polymorphic type
func (m *conditionKey) SetType(val string) {

}

// UnmarshalConditionKeySlice unmarshals polymorphic slices of ConditionKey
func UnmarshalConditionKeySlice(reader io.Reader, consumer runtime.Consumer) ([]ConditionKey, error) {
	var elements []json.RawMessage
	if err := consumer.Consume(reader, &elements); err != nil {
		return nil, err
	}

	var result []ConditionKey
	for _, element := range elements {
		obj, err := unmarshalConditionKey(element, consumer)
		if err != nil {
			return nil, err
		}
		result = append(result, obj)
	}
	return result, nil
}

// UnmarshalConditionKey unmarshals polymorphic ConditionKey
func UnmarshalConditionKey(reader io.Reader, consumer runtime.Consumer) (ConditionKey, error) {
	// we need to read this twice, so first into a buffer
	data, err := ioutil.ReadAll(reader)
	if err != nil {
		return nil, err
	}
	return unmarshalConditionKey(data, consumer)
}

func unmarshalConditionKey(data []byte, consumer runtime.Consumer) (ConditionKey, error) {
	buf := bytes.NewBuffer(data)
	buf2 := bytes.NewBuffer(data)

	// the first time this is read is to fetch the value of the type property.
	var getType struct {
		Type string `json:"type"`
	}
	if err := consumer.Consume(buf, &getType); err != nil {
		return nil, err
	}

	if err := validate.RequiredString("type", "body", getType.Type); err != nil {
		return nil, err
	}

	// The value of type is used to determine which type to create and unmarshal the data into
	switch getType.Type {
	case "ConditionKey":
		var result conditionKey
		if err := consumer.Consume(buf2, &result); err != nil {
			return nil, err
		}
		return &result, nil

	case "CustomHostMetadataConditionKey":
		var result CustomHostMetadataConditionKey
		if err := consumer.Consume(buf2, &result); err != nil {
			return nil, err
		}
		return &result, nil

	case "CustomProcessMetadataConditionKey":
		var result CustomProcessMetadataConditionKey
		if err := consumer.Consume(buf2, &result); err != nil {
			return nil, err
		}
		return &result, nil

	case "ProcessMetadataConditionKey":
		var result ProcessMetadataConditionKey
		if err := consumer.Consume(buf2, &result); err != nil {
			return nil, err
		}
		return &result, nil

	case "StringConditionKey":
		var result StringConditionKey
		if err := consumer.Consume(buf2, &result); err != nil {
			return nil, err
		}
		return &result, nil

	}
	return nil, errors.New(422, "invalid type value: %q", getType.Type)

}

// Validate validates this condition key
func (m *conditionKey) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttribute(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var conditionKeyTypeAttributePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["APPMON_SERVER_NAME","APPMON_SYSTEM_PROFILE_NAME","AWS_ACCOUNT_ID","AWS_ACCOUNT_NAME","AWS_APPLICATION_LOAD_BALANCER_NAME","AWS_APPLICATION_LOAD_BALANCER_TAGS","AWS_AUTO_SCALING_GROUP_NAME","AWS_AUTO_SCALING_GROUP_TAGS","AWS_AVAILABILITY_ZONE_NAME","AWS_CLASSIC_LOAD_BALANCER_BACKEND_PORTS","AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS","AWS_CLASSIC_LOAD_BALANCER_NAME","AWS_CLASSIC_LOAD_BALANCER_TAGS","AWS_NETWORK_LOAD_BALANCER_NAME","AWS_NETWORK_LOAD_BALANCER_TAGS","AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME","AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT","AWS_RELATIONAL_DATABASE_SERVICE_ENGINE","AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS","AWS_RELATIONAL_DATABASE_SERVICE_NAME","AWS_RELATIONAL_DATABASE_SERVICE_PORT","AWS_RELATIONAL_DATABASE_SERVICE_TAGS","AZURE_ENTITY_NAME","AZURE_ENTITY_TAGS","AZURE_MGMT_GROUP_NAME","AZURE_MGMT_GROUP_UUID","AZURE_REGION_NAME","AZURE_SCALE_SET_NAME","AZURE_SUBSCRIPTION_NAME","AZURE_SUBSCRIPTION_UUID","AZURE_TENANT_NAME","AZURE_TENANT_UUID","AZURE_VM_NAME","BROWSER_MONITOR_NAME","BROWSER_MONITOR_TAGS","CLOUD_APPLICATION_NAME","CLOUD_APPLICATION_NAMESPACE_NAME","CLOUD_FOUNDRY_FOUNDATION_NAME","CLOUD_FOUNDRY_ORG_NAME","CUSTOM_APPLICATION_NAME","CUSTOM_APPLICATION_PLATFORM","CUSTOM_APPLICATION_TAGS","CUSTOM_APPLICATION_TYPE","CUSTOM_DEVICE_DETECTED_NAME","CUSTOM_DEVICE_DNS_ADDRESS","CUSTOM_DEVICE_GROUP_NAME","CUSTOM_DEVICE_GROUP_TAGS","CUSTOM_DEVICE_IP_ADDRESS","CUSTOM_DEVICE_METADATA","CUSTOM_DEVICE_NAME","CUSTOM_DEVICE_PORT","CUSTOM_DEVICE_TAGS","CUSTOM_DEVICE_TECHNOLOGY","DATA_CENTER_SERVICE_DECODER_TYPE","DATA_CENTER_SERVICE_IP_ADDRESS","DATA_CENTER_SERVICE_METADATA","DATA_CENTER_SERVICE_NAME","DATA_CENTER_SERVICE_PORT","DATA_CENTER_SERVICE_TAGS","DOCKER_CONTAINER_NAME","DOCKER_FULL_IMAGE_NAME","DOCKER_IMAGE_VERSION","DOCKER_STRIPPED_IMAGE_NAME","EC2_INSTANCE_AMI_ID","EC2_INSTANCE_AWS_INSTANCE_TYPE","EC2_INSTANCE_AWS_SECURITY_GROUP","EC2_INSTANCE_BEANSTALK_ENV_NAME","EC2_INSTANCE_ID","EC2_INSTANCE_NAME","EC2_INSTANCE_PRIVATE_HOST_NAME","EC2_INSTANCE_PUBLIC_HOST_NAME","EC2_INSTANCE_TAGS","ENTERPRISE_APPLICATION_DECODER_TYPE","ENTERPRISE_APPLICATION_IP_ADDRESS","ENTERPRISE_APPLICATION_METADATA","ENTERPRISE_APPLICATION_NAME","ENTERPRISE_APPLICATION_PORT","ENTERPRISE_APPLICATION_TAGS","ESXI_HOST_CLUSTER_NAME","ESXI_HOST_HARDWARE_MODEL","ESXI_HOST_HARDWARE_VENDOR","ESXI_HOST_NAME","ESXI_HOST_PRODUCT_NAME","ESXI_HOST_PRODUCT_VERSION","ESXI_HOST_TAGS","EXTERNAL_MONITOR_ENGINE_DESCRIPTION","EXTERNAL_MONITOR_ENGINE_NAME","EXTERNAL_MONITOR_ENGINE_TYPE","EXTERNAL_MONITOR_NAME","EXTERNAL_MONITOR_TAGS","GEOLOCATION_SITE_NAME","GOOGLE_CLOUD_PLATFORM_ZONE_NAME","GOOGLE_COMPUTE_INSTANCE_ID","GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE","GOOGLE_COMPUTE_INSTANCE_NAME","GOOGLE_COMPUTE_INSTANCE_PROJECT","GOOGLE_COMPUTE_INSTANCE_PROJECT_ID","GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES","HOST_AIX_LOGICAL_CPU_COUNT","HOST_AIX_SIMULTANEOUS_THREADS","HOST_AIX_VIRTUAL_CPU_COUNT","HOST_ARCHITECTURE","HOST_AWS_NAME_TAG","HOST_AZURE_COMPUTE_MODE","HOST_AZURE_SKU","HOST_AZURE_WEB_APPLICATION_HOST_NAMES","HOST_AZURE_WEB_APPLICATION_SITE_NAMES","HOST_BITNESS","HOST_BOSH_AVAILABILITY_ZONE","HOST_BOSH_DEPLOYMENT_ID","HOST_BOSH_INSTANCE_ID","HOST_BOSH_INSTANCE_NAME","HOST_BOSH_NAME","HOST_BOSH_STEMCELL_VERSION","HOST_CLOUD_TYPE","HOST_CPU_CORES","HOST_CUSTOM_METADATA","HOST_DETECTED_NAME","HOST_GROUP_ID","HOST_GROUP_NAME","HOST_HYPERVISOR_TYPE","HOST_IP_ADDRESS","HOST_KUBERNETES_LABELS","HOST_LOGICAL_CPU_CORES","HOST_NAME","HOST_ONEAGENT_CUSTOM_HOST_NAME","HOST_OS_TYPE","HOST_OS_VERSION","HOST_PAAS_MEMORY_LIMIT","HOST_PAAS_TYPE","HOST_TAGS","HOST_TECHNOLOGY","HTTP_MONITOR_NAME","HTTP_MONITOR_TAGS","KUBERNETES_CLUSTER_NAME","KUBERNETES_NODE_NAME","MOBILE_APPLICATION_NAME","MOBILE_APPLICATION_PLATFORM","MOBILE_APPLICATION_TAGS","NAME_OF_COMPUTE_NODE","OPENSTACK_ACCOUNT_NAME","OPENSTACK_ACCOUNT_PROJECT_NAME","OPENSTACK_AVAILABILITY_ZONE_NAME","OPENSTACK_PROJECT_NAME","OPENSTACK_REGION_NAME","OPENSTACK_VM_INSTANCE_TYPE","OPENSTACK_VM_NAME","OPENSTACK_VM_SECURITY_GROUP","PROCESS_GROUP_AZURE_HOST_NAME","PROCESS_GROUP_AZURE_SITE_NAME","PROCESS_GROUP_CUSTOM_METADATA","PROCESS_GROUP_DETECTED_NAME","PROCESS_GROUP_ID","PROCESS_GROUP_INSTANCE_CUSTOM_METADATA","PROCESS_GROUP_LISTEN_PORT","PROCESS_GROUP_NAME","PROCESS_GROUP_PREDEFINED_METADATA","PROCESS_GROUP_TAGS","PROCESS_GROUP_TECHNOLOGY","PROCESS_GROUP_TECHNOLOGY_EDITION","PROCESS_GROUP_TECHNOLOGY_VERSION","SERVICE_AKKA_ACTOR_SYSTEM","SERVICE_CTG_SERVICE_NAME","SERVICE_DATABASE_HOST_NAME","SERVICE_DATABASE_NAME","SERVICE_DATABASE_TOPOLOGY","SERVICE_DATABASE_VENDOR","SERVICE_DETECTED_NAME","SERVICE_ESB_APPLICATION_NAME","SERVICE_IBM_CTG_GATEWAY_URL","SERVICE_IIB_APPLICATION_NAME","SERVICE_MESSAGING_LISTENER_CLASS_NAME","SERVICE_NAME","SERVICE_PORT","SERVICE_PUBLIC_DOMAIN_NAME","SERVICE_REMOTE_ENDPOINT","SERVICE_REMOTE_SERVICE_NAME","SERVICE_TAGS","SERVICE_TECHNOLOGY","SERVICE_TECHNOLOGY_EDITION","SERVICE_TECHNOLOGY_VERSION","SERVICE_TOPOLOGY","SERVICE_TYPE","SERVICE_WEB_APPLICATION_ID","SERVICE_WEB_CONTEXT_ROOT","SERVICE_WEB_SERVER_ENDPOINT","SERVICE_WEB_SERVER_NAME","SERVICE_WEB_SERVICE_NAME","SERVICE_WEB_SERVICE_NAMESPACE","VMWARE_DATACENTER_NAME","VMWARE_VM_NAME","WEB_APPLICATION_NAME","WEB_APPLICATION_NAME_PATTERN","WEB_APPLICATION_TAGS","WEB_APPLICATION_TYPE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conditionKeyTypeAttributePropEnum = append(conditionKeyTypeAttributePropEnum, v)
	}
}

const (

	// ConditionKeyAttributeAPPMONSERVERNAME captures enum value "APPMON_SERVER_NAME"
	ConditionKeyAttributeAPPMONSERVERNAME string = "APPMON_SERVER_NAME"

	// ConditionKeyAttributeAPPMONSYSTEMPROFILENAME captures enum value "APPMON_SYSTEM_PROFILE_NAME"
	ConditionKeyAttributeAPPMONSYSTEMPROFILENAME string = "APPMON_SYSTEM_PROFILE_NAME"

	// ConditionKeyAttributeAWSACCOUNTID captures enum value "AWS_ACCOUNT_ID"
	ConditionKeyAttributeAWSACCOUNTID string = "AWS_ACCOUNT_ID"

	// ConditionKeyAttributeAWSACCOUNTNAME captures enum value "AWS_ACCOUNT_NAME"
	ConditionKeyAttributeAWSACCOUNTNAME string = "AWS_ACCOUNT_NAME"

	// ConditionKeyAttributeAWSAPPLICATIONLOADBALANCERNAME captures enum value "AWS_APPLICATION_LOAD_BALANCER_NAME"
	ConditionKeyAttributeAWSAPPLICATIONLOADBALANCERNAME string = "AWS_APPLICATION_LOAD_BALANCER_NAME"

	// ConditionKeyAttributeAWSAPPLICATIONLOADBALANCERTAGS captures enum value "AWS_APPLICATION_LOAD_BALANCER_TAGS"
	ConditionKeyAttributeAWSAPPLICATIONLOADBALANCERTAGS string = "AWS_APPLICATION_LOAD_BALANCER_TAGS"

	// ConditionKeyAttributeAWSAUTOSCALINGGROUPNAME captures enum value "AWS_AUTO_SCALING_GROUP_NAME"
	ConditionKeyAttributeAWSAUTOSCALINGGROUPNAME string = "AWS_AUTO_SCALING_GROUP_NAME"

	// ConditionKeyAttributeAWSAUTOSCALINGGROUPTAGS captures enum value "AWS_AUTO_SCALING_GROUP_TAGS"
	ConditionKeyAttributeAWSAUTOSCALINGGROUPTAGS string = "AWS_AUTO_SCALING_GROUP_TAGS"

	// ConditionKeyAttributeAWSAVAILABILITYZONENAME captures enum value "AWS_AVAILABILITY_ZONE_NAME"
	ConditionKeyAttributeAWSAVAILABILITYZONENAME string = "AWS_AVAILABILITY_ZONE_NAME"

	// ConditionKeyAttributeAWSCLASSICLOADBALANCERBACKENDPORTS captures enum value "AWS_CLASSIC_LOAD_BALANCER_BACKEND_PORTS"
	ConditionKeyAttributeAWSCLASSICLOADBALANCERBACKENDPORTS string = "AWS_CLASSIC_LOAD_BALANCER_BACKEND_PORTS"

	// ConditionKeyAttributeAWSCLASSICLOADBALANCERFRONTENDPORTS captures enum value "AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS"
	ConditionKeyAttributeAWSCLASSICLOADBALANCERFRONTENDPORTS string = "AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS"

	// ConditionKeyAttributeAWSCLASSICLOADBALANCERNAME captures enum value "AWS_CLASSIC_LOAD_BALANCER_NAME"
	ConditionKeyAttributeAWSCLASSICLOADBALANCERNAME string = "AWS_CLASSIC_LOAD_BALANCER_NAME"

	// ConditionKeyAttributeAWSCLASSICLOADBALANCERTAGS captures enum value "AWS_CLASSIC_LOAD_BALANCER_TAGS"
	ConditionKeyAttributeAWSCLASSICLOADBALANCERTAGS string = "AWS_CLASSIC_LOAD_BALANCER_TAGS"

	// ConditionKeyAttributeAWSNETWORKLOADBALANCERNAME captures enum value "AWS_NETWORK_LOAD_BALANCER_NAME"
	ConditionKeyAttributeAWSNETWORKLOADBALANCERNAME string = "AWS_NETWORK_LOAD_BALANCER_NAME"

	// ConditionKeyAttributeAWSNETWORKLOADBALANCERTAGS captures enum value "AWS_NETWORK_LOAD_BALANCER_TAGS"
	ConditionKeyAttributeAWSNETWORKLOADBALANCERTAGS string = "AWS_NETWORK_LOAD_BALANCER_TAGS"

	// ConditionKeyAttributeAWSRELATIONALDATABASESERVICEDBNAME captures enum value "AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME"
	ConditionKeyAttributeAWSRELATIONALDATABASESERVICEDBNAME string = "AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME"

	// ConditionKeyAttributeAWSRELATIONALDATABASESERVICEENDPOINT captures enum value "AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT"
	ConditionKeyAttributeAWSRELATIONALDATABASESERVICEENDPOINT string = "AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT"

	// ConditionKeyAttributeAWSRELATIONALDATABASESERVICEENGINE captures enum value "AWS_RELATIONAL_DATABASE_SERVICE_ENGINE"
	ConditionKeyAttributeAWSRELATIONALDATABASESERVICEENGINE string = "AWS_RELATIONAL_DATABASE_SERVICE_ENGINE"

	// ConditionKeyAttributeAWSRELATIONALDATABASESERVICEINSTANCECLASS captures enum value "AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS"
	ConditionKeyAttributeAWSRELATIONALDATABASESERVICEINSTANCECLASS string = "AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS"

	// ConditionKeyAttributeAWSRELATIONALDATABASESERVICENAME captures enum value "AWS_RELATIONAL_DATABASE_SERVICE_NAME"
	ConditionKeyAttributeAWSRELATIONALDATABASESERVICENAME string = "AWS_RELATIONAL_DATABASE_SERVICE_NAME"

	// ConditionKeyAttributeAWSRELATIONALDATABASESERVICEPORT captures enum value "AWS_RELATIONAL_DATABASE_SERVICE_PORT"
	ConditionKeyAttributeAWSRELATIONALDATABASESERVICEPORT string = "AWS_RELATIONAL_DATABASE_SERVICE_PORT"

	// ConditionKeyAttributeAWSRELATIONALDATABASESERVICETAGS captures enum value "AWS_RELATIONAL_DATABASE_SERVICE_TAGS"
	ConditionKeyAttributeAWSRELATIONALDATABASESERVICETAGS string = "AWS_RELATIONAL_DATABASE_SERVICE_TAGS"

	// ConditionKeyAttributeAZUREENTITYNAME captures enum value "AZURE_ENTITY_NAME"
	ConditionKeyAttributeAZUREENTITYNAME string = "AZURE_ENTITY_NAME"

	// ConditionKeyAttributeAZUREENTITYTAGS captures enum value "AZURE_ENTITY_TAGS"
	ConditionKeyAttributeAZUREENTITYTAGS string = "AZURE_ENTITY_TAGS"

	// ConditionKeyAttributeAZUREMGMTGROUPNAME captures enum value "AZURE_MGMT_GROUP_NAME"
	ConditionKeyAttributeAZUREMGMTGROUPNAME string = "AZURE_MGMT_GROUP_NAME"

	// ConditionKeyAttributeAZUREMGMTGROUPUUID captures enum value "AZURE_MGMT_GROUP_UUID"
	ConditionKeyAttributeAZUREMGMTGROUPUUID string = "AZURE_MGMT_GROUP_UUID"

	// ConditionKeyAttributeAZUREREGIONNAME captures enum value "AZURE_REGION_NAME"
	ConditionKeyAttributeAZUREREGIONNAME string = "AZURE_REGION_NAME"

	// ConditionKeyAttributeAZURESCALESETNAME captures enum value "AZURE_SCALE_SET_NAME"
	ConditionKeyAttributeAZURESCALESETNAME string = "AZURE_SCALE_SET_NAME"

	// ConditionKeyAttributeAZURESUBSCRIPTIONNAME captures enum value "AZURE_SUBSCRIPTION_NAME"
	ConditionKeyAttributeAZURESUBSCRIPTIONNAME string = "AZURE_SUBSCRIPTION_NAME"

	// ConditionKeyAttributeAZURESUBSCRIPTIONUUID captures enum value "AZURE_SUBSCRIPTION_UUID"
	ConditionKeyAttributeAZURESUBSCRIPTIONUUID string = "AZURE_SUBSCRIPTION_UUID"

	// ConditionKeyAttributeAZURETENANTNAME captures enum value "AZURE_TENANT_NAME"
	ConditionKeyAttributeAZURETENANTNAME string = "AZURE_TENANT_NAME"

	// ConditionKeyAttributeAZURETENANTUUID captures enum value "AZURE_TENANT_UUID"
	ConditionKeyAttributeAZURETENANTUUID string = "AZURE_TENANT_UUID"

	// ConditionKeyAttributeAZUREVMNAME captures enum value "AZURE_VM_NAME"
	ConditionKeyAttributeAZUREVMNAME string = "AZURE_VM_NAME"

	// ConditionKeyAttributeBROWSERMONITORNAME captures enum value "BROWSER_MONITOR_NAME"
	ConditionKeyAttributeBROWSERMONITORNAME string = "BROWSER_MONITOR_NAME"

	// ConditionKeyAttributeBROWSERMONITORTAGS captures enum value "BROWSER_MONITOR_TAGS"
	ConditionKeyAttributeBROWSERMONITORTAGS string = "BROWSER_MONITOR_TAGS"

	// ConditionKeyAttributeCLOUDAPPLICATIONNAME captures enum value "CLOUD_APPLICATION_NAME"
	ConditionKeyAttributeCLOUDAPPLICATIONNAME string = "CLOUD_APPLICATION_NAME"

	// ConditionKeyAttributeCLOUDAPPLICATIONNAMESPACENAME captures enum value "CLOUD_APPLICATION_NAMESPACE_NAME"
	ConditionKeyAttributeCLOUDAPPLICATIONNAMESPACENAME string = "CLOUD_APPLICATION_NAMESPACE_NAME"

	// ConditionKeyAttributeCLOUDFOUNDRYFOUNDATIONNAME captures enum value "CLOUD_FOUNDRY_FOUNDATION_NAME"
	ConditionKeyAttributeCLOUDFOUNDRYFOUNDATIONNAME string = "CLOUD_FOUNDRY_FOUNDATION_NAME"

	// ConditionKeyAttributeCLOUDFOUNDRYORGNAME captures enum value "CLOUD_FOUNDRY_ORG_NAME"
	ConditionKeyAttributeCLOUDFOUNDRYORGNAME string = "CLOUD_FOUNDRY_ORG_NAME"

	// ConditionKeyAttributeCUSTOMAPPLICATIONNAME captures enum value "CUSTOM_APPLICATION_NAME"
	ConditionKeyAttributeCUSTOMAPPLICATIONNAME string = "CUSTOM_APPLICATION_NAME"

	// ConditionKeyAttributeCUSTOMAPPLICATIONPLATFORM captures enum value "CUSTOM_APPLICATION_PLATFORM"
	ConditionKeyAttributeCUSTOMAPPLICATIONPLATFORM string = "CUSTOM_APPLICATION_PLATFORM"

	// ConditionKeyAttributeCUSTOMAPPLICATIONTAGS captures enum value "CUSTOM_APPLICATION_TAGS"
	ConditionKeyAttributeCUSTOMAPPLICATIONTAGS string = "CUSTOM_APPLICATION_TAGS"

	// ConditionKeyAttributeCUSTOMAPPLICATIONTYPE captures enum value "CUSTOM_APPLICATION_TYPE"
	ConditionKeyAttributeCUSTOMAPPLICATIONTYPE string = "CUSTOM_APPLICATION_TYPE"

	// ConditionKeyAttributeCUSTOMDEVICEDETECTEDNAME captures enum value "CUSTOM_DEVICE_DETECTED_NAME"
	ConditionKeyAttributeCUSTOMDEVICEDETECTEDNAME string = "CUSTOM_DEVICE_DETECTED_NAME"

	// ConditionKeyAttributeCUSTOMDEVICEDNSADDRESS captures enum value "CUSTOM_DEVICE_DNS_ADDRESS"
	ConditionKeyAttributeCUSTOMDEVICEDNSADDRESS string = "CUSTOM_DEVICE_DNS_ADDRESS"

	// ConditionKeyAttributeCUSTOMDEVICEGROUPNAME captures enum value "CUSTOM_DEVICE_GROUP_NAME"
	ConditionKeyAttributeCUSTOMDEVICEGROUPNAME string = "CUSTOM_DEVICE_GROUP_NAME"

	// ConditionKeyAttributeCUSTOMDEVICEGROUPTAGS captures enum value "CUSTOM_DEVICE_GROUP_TAGS"
	ConditionKeyAttributeCUSTOMDEVICEGROUPTAGS string = "CUSTOM_DEVICE_GROUP_TAGS"

	// ConditionKeyAttributeCUSTOMDEVICEIPADDRESS captures enum value "CUSTOM_DEVICE_IP_ADDRESS"
	ConditionKeyAttributeCUSTOMDEVICEIPADDRESS string = "CUSTOM_DEVICE_IP_ADDRESS"

	// ConditionKeyAttributeCUSTOMDEVICEMETADATA captures enum value "CUSTOM_DEVICE_METADATA"
	ConditionKeyAttributeCUSTOMDEVICEMETADATA string = "CUSTOM_DEVICE_METADATA"

	// ConditionKeyAttributeCUSTOMDEVICENAME captures enum value "CUSTOM_DEVICE_NAME"
	ConditionKeyAttributeCUSTOMDEVICENAME string = "CUSTOM_DEVICE_NAME"

	// ConditionKeyAttributeCUSTOMDEVICEPORT captures enum value "CUSTOM_DEVICE_PORT"
	ConditionKeyAttributeCUSTOMDEVICEPORT string = "CUSTOM_DEVICE_PORT"

	// ConditionKeyAttributeCUSTOMDEVICETAGS captures enum value "CUSTOM_DEVICE_TAGS"
	ConditionKeyAttributeCUSTOMDEVICETAGS string = "CUSTOM_DEVICE_TAGS"

	// ConditionKeyAttributeCUSTOMDEVICETECHNOLOGY captures enum value "CUSTOM_DEVICE_TECHNOLOGY"
	ConditionKeyAttributeCUSTOMDEVICETECHNOLOGY string = "CUSTOM_DEVICE_TECHNOLOGY"

	// ConditionKeyAttributeDATACENTERSERVICEDECODERTYPE captures enum value "DATA_CENTER_SERVICE_DECODER_TYPE"
	ConditionKeyAttributeDATACENTERSERVICEDECODERTYPE string = "DATA_CENTER_SERVICE_DECODER_TYPE"

	// ConditionKeyAttributeDATACENTERSERVICEIPADDRESS captures enum value "DATA_CENTER_SERVICE_IP_ADDRESS"
	ConditionKeyAttributeDATACENTERSERVICEIPADDRESS string = "DATA_CENTER_SERVICE_IP_ADDRESS"

	// ConditionKeyAttributeDATACENTERSERVICEMETADATA captures enum value "DATA_CENTER_SERVICE_METADATA"
	ConditionKeyAttributeDATACENTERSERVICEMETADATA string = "DATA_CENTER_SERVICE_METADATA"

	// ConditionKeyAttributeDATACENTERSERVICENAME captures enum value "DATA_CENTER_SERVICE_NAME"
	ConditionKeyAttributeDATACENTERSERVICENAME string = "DATA_CENTER_SERVICE_NAME"

	// ConditionKeyAttributeDATACENTERSERVICEPORT captures enum value "DATA_CENTER_SERVICE_PORT"
	ConditionKeyAttributeDATACENTERSERVICEPORT string = "DATA_CENTER_SERVICE_PORT"

	// ConditionKeyAttributeDATACENTERSERVICETAGS captures enum value "DATA_CENTER_SERVICE_TAGS"
	ConditionKeyAttributeDATACENTERSERVICETAGS string = "DATA_CENTER_SERVICE_TAGS"

	// ConditionKeyAttributeDOCKERCONTAINERNAME captures enum value "DOCKER_CONTAINER_NAME"
	ConditionKeyAttributeDOCKERCONTAINERNAME string = "DOCKER_CONTAINER_NAME"

	// ConditionKeyAttributeDOCKERFULLIMAGENAME captures enum value "DOCKER_FULL_IMAGE_NAME"
	ConditionKeyAttributeDOCKERFULLIMAGENAME string = "DOCKER_FULL_IMAGE_NAME"

	// ConditionKeyAttributeDOCKERIMAGEVERSION captures enum value "DOCKER_IMAGE_VERSION"
	ConditionKeyAttributeDOCKERIMAGEVERSION string = "DOCKER_IMAGE_VERSION"

	// ConditionKeyAttributeDOCKERSTRIPPEDIMAGENAME captures enum value "DOCKER_STRIPPED_IMAGE_NAME"
	ConditionKeyAttributeDOCKERSTRIPPEDIMAGENAME string = "DOCKER_STRIPPED_IMAGE_NAME"

	// ConditionKeyAttributeEC2INSTANCEAMIID captures enum value "EC2_INSTANCE_AMI_ID"
	ConditionKeyAttributeEC2INSTANCEAMIID string = "EC2_INSTANCE_AMI_ID"

	// ConditionKeyAttributeEC2INSTANCEAWSINSTANCETYPE captures enum value "EC2_INSTANCE_AWS_INSTANCE_TYPE"
	ConditionKeyAttributeEC2INSTANCEAWSINSTANCETYPE string = "EC2_INSTANCE_AWS_INSTANCE_TYPE"

	// ConditionKeyAttributeEC2INSTANCEAWSSECURITYGROUP captures enum value "EC2_INSTANCE_AWS_SECURITY_GROUP"
	ConditionKeyAttributeEC2INSTANCEAWSSECURITYGROUP string = "EC2_INSTANCE_AWS_SECURITY_GROUP"

	// ConditionKeyAttributeEC2INSTANCEBEANSTALKENVNAME captures enum value "EC2_INSTANCE_BEANSTALK_ENV_NAME"
	ConditionKeyAttributeEC2INSTANCEBEANSTALKENVNAME string = "EC2_INSTANCE_BEANSTALK_ENV_NAME"

	// ConditionKeyAttributeEC2INSTANCEID captures enum value "EC2_INSTANCE_ID"
	ConditionKeyAttributeEC2INSTANCEID string = "EC2_INSTANCE_ID"

	// ConditionKeyAttributeEC2INSTANCENAME captures enum value "EC2_INSTANCE_NAME"
	ConditionKeyAttributeEC2INSTANCENAME string = "EC2_INSTANCE_NAME"

	// ConditionKeyAttributeEC2INSTANCEPRIVATEHOSTNAME captures enum value "EC2_INSTANCE_PRIVATE_HOST_NAME"
	ConditionKeyAttributeEC2INSTANCEPRIVATEHOSTNAME string = "EC2_INSTANCE_PRIVATE_HOST_NAME"

	// ConditionKeyAttributeEC2INSTANCEPUBLICHOSTNAME captures enum value "EC2_INSTANCE_PUBLIC_HOST_NAME"
	ConditionKeyAttributeEC2INSTANCEPUBLICHOSTNAME string = "EC2_INSTANCE_PUBLIC_HOST_NAME"

	// ConditionKeyAttributeEC2INSTANCETAGS captures enum value "EC2_INSTANCE_TAGS"
	ConditionKeyAttributeEC2INSTANCETAGS string = "EC2_INSTANCE_TAGS"

	// ConditionKeyAttributeENTERPRISEAPPLICATIONDECODERTYPE captures enum value "ENTERPRISE_APPLICATION_DECODER_TYPE"
	ConditionKeyAttributeENTERPRISEAPPLICATIONDECODERTYPE string = "ENTERPRISE_APPLICATION_DECODER_TYPE"

	// ConditionKeyAttributeENTERPRISEAPPLICATIONIPADDRESS captures enum value "ENTERPRISE_APPLICATION_IP_ADDRESS"
	ConditionKeyAttributeENTERPRISEAPPLICATIONIPADDRESS string = "ENTERPRISE_APPLICATION_IP_ADDRESS"

	// ConditionKeyAttributeENTERPRISEAPPLICATIONMETADATA captures enum value "ENTERPRISE_APPLICATION_METADATA"
	ConditionKeyAttributeENTERPRISEAPPLICATIONMETADATA string = "ENTERPRISE_APPLICATION_METADATA"

	// ConditionKeyAttributeENTERPRISEAPPLICATIONNAME captures enum value "ENTERPRISE_APPLICATION_NAME"
	ConditionKeyAttributeENTERPRISEAPPLICATIONNAME string = "ENTERPRISE_APPLICATION_NAME"

	// ConditionKeyAttributeENTERPRISEAPPLICATIONPORT captures enum value "ENTERPRISE_APPLICATION_PORT"
	ConditionKeyAttributeENTERPRISEAPPLICATIONPORT string = "ENTERPRISE_APPLICATION_PORT"

	// ConditionKeyAttributeENTERPRISEAPPLICATIONTAGS captures enum value "ENTERPRISE_APPLICATION_TAGS"
	ConditionKeyAttributeENTERPRISEAPPLICATIONTAGS string = "ENTERPRISE_APPLICATION_TAGS"

	// ConditionKeyAttributeESXIHOSTCLUSTERNAME captures enum value "ESXI_HOST_CLUSTER_NAME"
	ConditionKeyAttributeESXIHOSTCLUSTERNAME string = "ESXI_HOST_CLUSTER_NAME"

	// ConditionKeyAttributeESXIHOSTHARDWAREMODEL captures enum value "ESXI_HOST_HARDWARE_MODEL"
	ConditionKeyAttributeESXIHOSTHARDWAREMODEL string = "ESXI_HOST_HARDWARE_MODEL"

	// ConditionKeyAttributeESXIHOSTHARDWAREVENDOR captures enum value "ESXI_HOST_HARDWARE_VENDOR"
	ConditionKeyAttributeESXIHOSTHARDWAREVENDOR string = "ESXI_HOST_HARDWARE_VENDOR"

	// ConditionKeyAttributeESXIHOSTNAME captures enum value "ESXI_HOST_NAME"
	ConditionKeyAttributeESXIHOSTNAME string = "ESXI_HOST_NAME"

	// ConditionKeyAttributeESXIHOSTPRODUCTNAME captures enum value "ESXI_HOST_PRODUCT_NAME"
	ConditionKeyAttributeESXIHOSTPRODUCTNAME string = "ESXI_HOST_PRODUCT_NAME"

	// ConditionKeyAttributeESXIHOSTPRODUCTVERSION captures enum value "ESXI_HOST_PRODUCT_VERSION"
	ConditionKeyAttributeESXIHOSTPRODUCTVERSION string = "ESXI_HOST_PRODUCT_VERSION"

	// ConditionKeyAttributeESXIHOSTTAGS captures enum value "ESXI_HOST_TAGS"
	ConditionKeyAttributeESXIHOSTTAGS string = "ESXI_HOST_TAGS"

	// ConditionKeyAttributeEXTERNALMONITORENGINEDESCRIPTION captures enum value "EXTERNAL_MONITOR_ENGINE_DESCRIPTION"
	ConditionKeyAttributeEXTERNALMONITORENGINEDESCRIPTION string = "EXTERNAL_MONITOR_ENGINE_DESCRIPTION"

	// ConditionKeyAttributeEXTERNALMONITORENGINENAME captures enum value "EXTERNAL_MONITOR_ENGINE_NAME"
	ConditionKeyAttributeEXTERNALMONITORENGINENAME string = "EXTERNAL_MONITOR_ENGINE_NAME"

	// ConditionKeyAttributeEXTERNALMONITORENGINETYPE captures enum value "EXTERNAL_MONITOR_ENGINE_TYPE"
	ConditionKeyAttributeEXTERNALMONITORENGINETYPE string = "EXTERNAL_MONITOR_ENGINE_TYPE"

	// ConditionKeyAttributeEXTERNALMONITORNAME captures enum value "EXTERNAL_MONITOR_NAME"
	ConditionKeyAttributeEXTERNALMONITORNAME string = "EXTERNAL_MONITOR_NAME"

	// ConditionKeyAttributeEXTERNALMONITORTAGS captures enum value "EXTERNAL_MONITOR_TAGS"
	ConditionKeyAttributeEXTERNALMONITORTAGS string = "EXTERNAL_MONITOR_TAGS"

	// ConditionKeyAttributeGEOLOCATIONSITENAME captures enum value "GEOLOCATION_SITE_NAME"
	ConditionKeyAttributeGEOLOCATIONSITENAME string = "GEOLOCATION_SITE_NAME"

	// ConditionKeyAttributeGOOGLECLOUDPLATFORMZONENAME captures enum value "GOOGLE_CLOUD_PLATFORM_ZONE_NAME"
	ConditionKeyAttributeGOOGLECLOUDPLATFORMZONENAME string = "GOOGLE_CLOUD_PLATFORM_ZONE_NAME"

	// ConditionKeyAttributeGOOGLECOMPUTEINSTANCEID captures enum value "GOOGLE_COMPUTE_INSTANCE_ID"
	ConditionKeyAttributeGOOGLECOMPUTEINSTANCEID string = "GOOGLE_COMPUTE_INSTANCE_ID"

	// ConditionKeyAttributeGOOGLECOMPUTEINSTANCEMACHINETYPE captures enum value "GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE"
	ConditionKeyAttributeGOOGLECOMPUTEINSTANCEMACHINETYPE string = "GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE"

	// ConditionKeyAttributeGOOGLECOMPUTEINSTANCENAME captures enum value "GOOGLE_COMPUTE_INSTANCE_NAME"
	ConditionKeyAttributeGOOGLECOMPUTEINSTANCENAME string = "GOOGLE_COMPUTE_INSTANCE_NAME"

	// ConditionKeyAttributeGOOGLECOMPUTEINSTANCEPROJECT captures enum value "GOOGLE_COMPUTE_INSTANCE_PROJECT"
	ConditionKeyAttributeGOOGLECOMPUTEINSTANCEPROJECT string = "GOOGLE_COMPUTE_INSTANCE_PROJECT"

	// ConditionKeyAttributeGOOGLECOMPUTEINSTANCEPROJECTID captures enum value "GOOGLE_COMPUTE_INSTANCE_PROJECT_ID"
	ConditionKeyAttributeGOOGLECOMPUTEINSTANCEPROJECTID string = "GOOGLE_COMPUTE_INSTANCE_PROJECT_ID"

	// ConditionKeyAttributeGOOGLECOMPUTEINSTANCEPUBLICIPADDRESSES captures enum value "GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES"
	ConditionKeyAttributeGOOGLECOMPUTEINSTANCEPUBLICIPADDRESSES string = "GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES"

	// ConditionKeyAttributeHOSTAIXLOGICALCPUCOUNT captures enum value "HOST_AIX_LOGICAL_CPU_COUNT"
	ConditionKeyAttributeHOSTAIXLOGICALCPUCOUNT string = "HOST_AIX_LOGICAL_CPU_COUNT"

	// ConditionKeyAttributeHOSTAIXSIMULTANEOUSTHREADS captures enum value "HOST_AIX_SIMULTANEOUS_THREADS"
	ConditionKeyAttributeHOSTAIXSIMULTANEOUSTHREADS string = "HOST_AIX_SIMULTANEOUS_THREADS"

	// ConditionKeyAttributeHOSTAIXVIRTUALCPUCOUNT captures enum value "HOST_AIX_VIRTUAL_CPU_COUNT"
	ConditionKeyAttributeHOSTAIXVIRTUALCPUCOUNT string = "HOST_AIX_VIRTUAL_CPU_COUNT"

	// ConditionKeyAttributeHOSTARCHITECTURE captures enum value "HOST_ARCHITECTURE"
	ConditionKeyAttributeHOSTARCHITECTURE string = "HOST_ARCHITECTURE"

	// ConditionKeyAttributeHOSTAWSNAMETAG captures enum value "HOST_AWS_NAME_TAG"
	ConditionKeyAttributeHOSTAWSNAMETAG string = "HOST_AWS_NAME_TAG"

	// ConditionKeyAttributeHOSTAZURECOMPUTEMODE captures enum value "HOST_AZURE_COMPUTE_MODE"
	ConditionKeyAttributeHOSTAZURECOMPUTEMODE string = "HOST_AZURE_COMPUTE_MODE"

	// ConditionKeyAttributeHOSTAZURESKU captures enum value "HOST_AZURE_SKU"
	ConditionKeyAttributeHOSTAZURESKU string = "HOST_AZURE_SKU"

	// ConditionKeyAttributeHOSTAZUREWEBAPPLICATIONHOSTNAMES captures enum value "HOST_AZURE_WEB_APPLICATION_HOST_NAMES"
	ConditionKeyAttributeHOSTAZUREWEBAPPLICATIONHOSTNAMES string = "HOST_AZURE_WEB_APPLICATION_HOST_NAMES"

	// ConditionKeyAttributeHOSTAZUREWEBAPPLICATIONSITENAMES captures enum value "HOST_AZURE_WEB_APPLICATION_SITE_NAMES"
	ConditionKeyAttributeHOSTAZUREWEBAPPLICATIONSITENAMES string = "HOST_AZURE_WEB_APPLICATION_SITE_NAMES"

	// ConditionKeyAttributeHOSTBITNESS captures enum value "HOST_BITNESS"
	ConditionKeyAttributeHOSTBITNESS string = "HOST_BITNESS"

	// ConditionKeyAttributeHOSTBOSHAVAILABILITYZONE captures enum value "HOST_BOSH_AVAILABILITY_ZONE"
	ConditionKeyAttributeHOSTBOSHAVAILABILITYZONE string = "HOST_BOSH_AVAILABILITY_ZONE"

	// ConditionKeyAttributeHOSTBOSHDEPLOYMENTID captures enum value "HOST_BOSH_DEPLOYMENT_ID"
	ConditionKeyAttributeHOSTBOSHDEPLOYMENTID string = "HOST_BOSH_DEPLOYMENT_ID"

	// ConditionKeyAttributeHOSTBOSHINSTANCEID captures enum value "HOST_BOSH_INSTANCE_ID"
	ConditionKeyAttributeHOSTBOSHINSTANCEID string = "HOST_BOSH_INSTANCE_ID"

	// ConditionKeyAttributeHOSTBOSHINSTANCENAME captures enum value "HOST_BOSH_INSTANCE_NAME"
	ConditionKeyAttributeHOSTBOSHINSTANCENAME string = "HOST_BOSH_INSTANCE_NAME"

	// ConditionKeyAttributeHOSTBOSHNAME captures enum value "HOST_BOSH_NAME"
	ConditionKeyAttributeHOSTBOSHNAME string = "HOST_BOSH_NAME"

	// ConditionKeyAttributeHOSTBOSHSTEMCELLVERSION captures enum value "HOST_BOSH_STEMCELL_VERSION"
	ConditionKeyAttributeHOSTBOSHSTEMCELLVERSION string = "HOST_BOSH_STEMCELL_VERSION"

	// ConditionKeyAttributeHOSTCLOUDTYPE captures enum value "HOST_CLOUD_TYPE"
	ConditionKeyAttributeHOSTCLOUDTYPE string = "HOST_CLOUD_TYPE"

	// ConditionKeyAttributeHOSTCPUCORES captures enum value "HOST_CPU_CORES"
	ConditionKeyAttributeHOSTCPUCORES string = "HOST_CPU_CORES"

	// ConditionKeyAttributeHOSTCUSTOMMETADATA captures enum value "HOST_CUSTOM_METADATA"
	ConditionKeyAttributeHOSTCUSTOMMETADATA string = "HOST_CUSTOM_METADATA"

	// ConditionKeyAttributeHOSTDETECTEDNAME captures enum value "HOST_DETECTED_NAME"
	ConditionKeyAttributeHOSTDETECTEDNAME string = "HOST_DETECTED_NAME"

	// ConditionKeyAttributeHOSTGROUPID captures enum value "HOST_GROUP_ID"
	ConditionKeyAttributeHOSTGROUPID string = "HOST_GROUP_ID"

	// ConditionKeyAttributeHOSTGROUPNAME captures enum value "HOST_GROUP_NAME"
	ConditionKeyAttributeHOSTGROUPNAME string = "HOST_GROUP_NAME"

	// ConditionKeyAttributeHOSTHYPERVISORTYPE captures enum value "HOST_HYPERVISOR_TYPE"
	ConditionKeyAttributeHOSTHYPERVISORTYPE string = "HOST_HYPERVISOR_TYPE"

	// ConditionKeyAttributeHOSTIPADDRESS captures enum value "HOST_IP_ADDRESS"
	ConditionKeyAttributeHOSTIPADDRESS string = "HOST_IP_ADDRESS"

	// ConditionKeyAttributeHOSTKUBERNETESLABELS captures enum value "HOST_KUBERNETES_LABELS"
	ConditionKeyAttributeHOSTKUBERNETESLABELS string = "HOST_KUBERNETES_LABELS"

	// ConditionKeyAttributeHOSTLOGICALCPUCORES captures enum value "HOST_LOGICAL_CPU_CORES"
	ConditionKeyAttributeHOSTLOGICALCPUCORES string = "HOST_LOGICAL_CPU_CORES"

	// ConditionKeyAttributeHOSTNAME captures enum value "HOST_NAME"
	ConditionKeyAttributeHOSTNAME string = "HOST_NAME"

	// ConditionKeyAttributeHOSTONEAGENTCUSTOMHOSTNAME captures enum value "HOST_ONEAGENT_CUSTOM_HOST_NAME"
	ConditionKeyAttributeHOSTONEAGENTCUSTOMHOSTNAME string = "HOST_ONEAGENT_CUSTOM_HOST_NAME"

	// ConditionKeyAttributeHOSTOSTYPE captures enum value "HOST_OS_TYPE"
	ConditionKeyAttributeHOSTOSTYPE string = "HOST_OS_TYPE"

	// ConditionKeyAttributeHOSTOSVERSION captures enum value "HOST_OS_VERSION"
	ConditionKeyAttributeHOSTOSVERSION string = "HOST_OS_VERSION"

	// ConditionKeyAttributeHOSTPAASMEMORYLIMIT captures enum value "HOST_PAAS_MEMORY_LIMIT"
	ConditionKeyAttributeHOSTPAASMEMORYLIMIT string = "HOST_PAAS_MEMORY_LIMIT"

	// ConditionKeyAttributeHOSTPAASTYPE captures enum value "HOST_PAAS_TYPE"
	ConditionKeyAttributeHOSTPAASTYPE string = "HOST_PAAS_TYPE"

	// ConditionKeyAttributeHOSTTAGS captures enum value "HOST_TAGS"
	ConditionKeyAttributeHOSTTAGS string = "HOST_TAGS"

	// ConditionKeyAttributeHOSTTECHNOLOGY captures enum value "HOST_TECHNOLOGY"
	ConditionKeyAttributeHOSTTECHNOLOGY string = "HOST_TECHNOLOGY"

	// ConditionKeyAttributeHTTPMONITORNAME captures enum value "HTTP_MONITOR_NAME"
	ConditionKeyAttributeHTTPMONITORNAME string = "HTTP_MONITOR_NAME"

	// ConditionKeyAttributeHTTPMONITORTAGS captures enum value "HTTP_MONITOR_TAGS"
	ConditionKeyAttributeHTTPMONITORTAGS string = "HTTP_MONITOR_TAGS"

	// ConditionKeyAttributeKUBERNETESCLUSTERNAME captures enum value "KUBERNETES_CLUSTER_NAME"
	ConditionKeyAttributeKUBERNETESCLUSTERNAME string = "KUBERNETES_CLUSTER_NAME"

	// ConditionKeyAttributeKUBERNETESNODENAME captures enum value "KUBERNETES_NODE_NAME"
	ConditionKeyAttributeKUBERNETESNODENAME string = "KUBERNETES_NODE_NAME"

	// ConditionKeyAttributeMOBILEAPPLICATIONNAME captures enum value "MOBILE_APPLICATION_NAME"
	ConditionKeyAttributeMOBILEAPPLICATIONNAME string = "MOBILE_APPLICATION_NAME"

	// ConditionKeyAttributeMOBILEAPPLICATIONPLATFORM captures enum value "MOBILE_APPLICATION_PLATFORM"
	ConditionKeyAttributeMOBILEAPPLICATIONPLATFORM string = "MOBILE_APPLICATION_PLATFORM"

	// ConditionKeyAttributeMOBILEAPPLICATIONTAGS captures enum value "MOBILE_APPLICATION_TAGS"
	ConditionKeyAttributeMOBILEAPPLICATIONTAGS string = "MOBILE_APPLICATION_TAGS"

	// ConditionKeyAttributeNAMEOFCOMPUTENODE captures enum value "NAME_OF_COMPUTE_NODE"
	ConditionKeyAttributeNAMEOFCOMPUTENODE string = "NAME_OF_COMPUTE_NODE"

	// ConditionKeyAttributeOPENSTACKACCOUNTNAME captures enum value "OPENSTACK_ACCOUNT_NAME"
	ConditionKeyAttributeOPENSTACKACCOUNTNAME string = "OPENSTACK_ACCOUNT_NAME"

	// ConditionKeyAttributeOPENSTACKACCOUNTPROJECTNAME captures enum value "OPENSTACK_ACCOUNT_PROJECT_NAME"
	ConditionKeyAttributeOPENSTACKACCOUNTPROJECTNAME string = "OPENSTACK_ACCOUNT_PROJECT_NAME"

	// ConditionKeyAttributeOPENSTACKAVAILABILITYZONENAME captures enum value "OPENSTACK_AVAILABILITY_ZONE_NAME"
	ConditionKeyAttributeOPENSTACKAVAILABILITYZONENAME string = "OPENSTACK_AVAILABILITY_ZONE_NAME"

	// ConditionKeyAttributeOPENSTACKPROJECTNAME captures enum value "OPENSTACK_PROJECT_NAME"
	ConditionKeyAttributeOPENSTACKPROJECTNAME string = "OPENSTACK_PROJECT_NAME"

	// ConditionKeyAttributeOPENSTACKREGIONNAME captures enum value "OPENSTACK_REGION_NAME"
	ConditionKeyAttributeOPENSTACKREGIONNAME string = "OPENSTACK_REGION_NAME"

	// ConditionKeyAttributeOPENSTACKVMINSTANCETYPE captures enum value "OPENSTACK_VM_INSTANCE_TYPE"
	ConditionKeyAttributeOPENSTACKVMINSTANCETYPE string = "OPENSTACK_VM_INSTANCE_TYPE"

	// ConditionKeyAttributeOPENSTACKVMNAME captures enum value "OPENSTACK_VM_NAME"
	ConditionKeyAttributeOPENSTACKVMNAME string = "OPENSTACK_VM_NAME"

	// ConditionKeyAttributeOPENSTACKVMSECURITYGROUP captures enum value "OPENSTACK_VM_SECURITY_GROUP"
	ConditionKeyAttributeOPENSTACKVMSECURITYGROUP string = "OPENSTACK_VM_SECURITY_GROUP"

	// ConditionKeyAttributePROCESSGROUPAZUREHOSTNAME captures enum value "PROCESS_GROUP_AZURE_HOST_NAME"
	ConditionKeyAttributePROCESSGROUPAZUREHOSTNAME string = "PROCESS_GROUP_AZURE_HOST_NAME"

	// ConditionKeyAttributePROCESSGROUPAZURESITENAME captures enum value "PROCESS_GROUP_AZURE_SITE_NAME"
	ConditionKeyAttributePROCESSGROUPAZURESITENAME string = "PROCESS_GROUP_AZURE_SITE_NAME"

	// ConditionKeyAttributePROCESSGROUPCUSTOMMETADATA captures enum value "PROCESS_GROUP_CUSTOM_METADATA"
	ConditionKeyAttributePROCESSGROUPCUSTOMMETADATA string = "PROCESS_GROUP_CUSTOM_METADATA"

	// ConditionKeyAttributePROCESSGROUPDETECTEDNAME captures enum value "PROCESS_GROUP_DETECTED_NAME"
	ConditionKeyAttributePROCESSGROUPDETECTEDNAME string = "PROCESS_GROUP_DETECTED_NAME"

	// ConditionKeyAttributePROCESSGROUPID captures enum value "PROCESS_GROUP_ID"
	ConditionKeyAttributePROCESSGROUPID string = "PROCESS_GROUP_ID"

	// ConditionKeyAttributePROCESSGROUPINSTANCECUSTOMMETADATA captures enum value "PROCESS_GROUP_INSTANCE_CUSTOM_METADATA"
	ConditionKeyAttributePROCESSGROUPINSTANCECUSTOMMETADATA string = "PROCESS_GROUP_INSTANCE_CUSTOM_METADATA"

	// ConditionKeyAttributePROCESSGROUPLISTENPORT captures enum value "PROCESS_GROUP_LISTEN_PORT"
	ConditionKeyAttributePROCESSGROUPLISTENPORT string = "PROCESS_GROUP_LISTEN_PORT"

	// ConditionKeyAttributePROCESSGROUPNAME captures enum value "PROCESS_GROUP_NAME"
	ConditionKeyAttributePROCESSGROUPNAME string = "PROCESS_GROUP_NAME"

	// ConditionKeyAttributePROCESSGROUPPREDEFINEDMETADATA captures enum value "PROCESS_GROUP_PREDEFINED_METADATA"
	ConditionKeyAttributePROCESSGROUPPREDEFINEDMETADATA string = "PROCESS_GROUP_PREDEFINED_METADATA"

	// ConditionKeyAttributePROCESSGROUPTAGS captures enum value "PROCESS_GROUP_TAGS"
	ConditionKeyAttributePROCESSGROUPTAGS string = "PROCESS_GROUP_TAGS"

	// ConditionKeyAttributePROCESSGROUPTECHNOLOGY captures enum value "PROCESS_GROUP_TECHNOLOGY"
	ConditionKeyAttributePROCESSGROUPTECHNOLOGY string = "PROCESS_GROUP_TECHNOLOGY"

	// ConditionKeyAttributePROCESSGROUPTECHNOLOGYEDITION captures enum value "PROCESS_GROUP_TECHNOLOGY_EDITION"
	ConditionKeyAttributePROCESSGROUPTECHNOLOGYEDITION string = "PROCESS_GROUP_TECHNOLOGY_EDITION"

	// ConditionKeyAttributePROCESSGROUPTECHNOLOGYVERSION captures enum value "PROCESS_GROUP_TECHNOLOGY_VERSION"
	ConditionKeyAttributePROCESSGROUPTECHNOLOGYVERSION string = "PROCESS_GROUP_TECHNOLOGY_VERSION"

	// ConditionKeyAttributeSERVICEAKKAACTORSYSTEM captures enum value "SERVICE_AKKA_ACTOR_SYSTEM"
	ConditionKeyAttributeSERVICEAKKAACTORSYSTEM string = "SERVICE_AKKA_ACTOR_SYSTEM"

	// ConditionKeyAttributeSERVICECTGSERVICENAME captures enum value "SERVICE_CTG_SERVICE_NAME"
	ConditionKeyAttributeSERVICECTGSERVICENAME string = "SERVICE_CTG_SERVICE_NAME"

	// ConditionKeyAttributeSERVICEDATABASEHOSTNAME captures enum value "SERVICE_DATABASE_HOST_NAME"
	ConditionKeyAttributeSERVICEDATABASEHOSTNAME string = "SERVICE_DATABASE_HOST_NAME"

	// ConditionKeyAttributeSERVICEDATABASENAME captures enum value "SERVICE_DATABASE_NAME"
	ConditionKeyAttributeSERVICEDATABASENAME string = "SERVICE_DATABASE_NAME"

	// ConditionKeyAttributeSERVICEDATABASETOPOLOGY captures enum value "SERVICE_DATABASE_TOPOLOGY"
	ConditionKeyAttributeSERVICEDATABASETOPOLOGY string = "SERVICE_DATABASE_TOPOLOGY"

	// ConditionKeyAttributeSERVICEDATABASEVENDOR captures enum value "SERVICE_DATABASE_VENDOR"
	ConditionKeyAttributeSERVICEDATABASEVENDOR string = "SERVICE_DATABASE_VENDOR"

	// ConditionKeyAttributeSERVICEDETECTEDNAME captures enum value "SERVICE_DETECTED_NAME"
	ConditionKeyAttributeSERVICEDETECTEDNAME string = "SERVICE_DETECTED_NAME"

	// ConditionKeyAttributeSERVICEESBAPPLICATIONNAME captures enum value "SERVICE_ESB_APPLICATION_NAME"
	ConditionKeyAttributeSERVICEESBAPPLICATIONNAME string = "SERVICE_ESB_APPLICATION_NAME"

	// ConditionKeyAttributeSERVICEIBMCTGGATEWAYURL captures enum value "SERVICE_IBM_CTG_GATEWAY_URL"
	ConditionKeyAttributeSERVICEIBMCTGGATEWAYURL string = "SERVICE_IBM_CTG_GATEWAY_URL"

	// ConditionKeyAttributeSERVICEIIBAPPLICATIONNAME captures enum value "SERVICE_IIB_APPLICATION_NAME"
	ConditionKeyAttributeSERVICEIIBAPPLICATIONNAME string = "SERVICE_IIB_APPLICATION_NAME"

	// ConditionKeyAttributeSERVICEMESSAGINGLISTENERCLASSNAME captures enum value "SERVICE_MESSAGING_LISTENER_CLASS_NAME"
	ConditionKeyAttributeSERVICEMESSAGINGLISTENERCLASSNAME string = "SERVICE_MESSAGING_LISTENER_CLASS_NAME"

	// ConditionKeyAttributeSERVICENAME captures enum value "SERVICE_NAME"
	ConditionKeyAttributeSERVICENAME string = "SERVICE_NAME"

	// ConditionKeyAttributeSERVICEPORT captures enum value "SERVICE_PORT"
	ConditionKeyAttributeSERVICEPORT string = "SERVICE_PORT"

	// ConditionKeyAttributeSERVICEPUBLICDOMAINNAME captures enum value "SERVICE_PUBLIC_DOMAIN_NAME"
	ConditionKeyAttributeSERVICEPUBLICDOMAINNAME string = "SERVICE_PUBLIC_DOMAIN_NAME"

	// ConditionKeyAttributeSERVICEREMOTEENDPOINT captures enum value "SERVICE_REMOTE_ENDPOINT"
	ConditionKeyAttributeSERVICEREMOTEENDPOINT string = "SERVICE_REMOTE_ENDPOINT"

	// ConditionKeyAttributeSERVICEREMOTESERVICENAME captures enum value "SERVICE_REMOTE_SERVICE_NAME"
	ConditionKeyAttributeSERVICEREMOTESERVICENAME string = "SERVICE_REMOTE_SERVICE_NAME"

	// ConditionKeyAttributeSERVICETAGS captures enum value "SERVICE_TAGS"
	ConditionKeyAttributeSERVICETAGS string = "SERVICE_TAGS"

	// ConditionKeyAttributeSERVICETECHNOLOGY captures enum value "SERVICE_TECHNOLOGY"
	ConditionKeyAttributeSERVICETECHNOLOGY string = "SERVICE_TECHNOLOGY"

	// ConditionKeyAttributeSERVICETECHNOLOGYEDITION captures enum value "SERVICE_TECHNOLOGY_EDITION"
	ConditionKeyAttributeSERVICETECHNOLOGYEDITION string = "SERVICE_TECHNOLOGY_EDITION"

	// ConditionKeyAttributeSERVICETECHNOLOGYVERSION captures enum value "SERVICE_TECHNOLOGY_VERSION"
	ConditionKeyAttributeSERVICETECHNOLOGYVERSION string = "SERVICE_TECHNOLOGY_VERSION"

	// ConditionKeyAttributeSERVICETOPOLOGY captures enum value "SERVICE_TOPOLOGY"
	ConditionKeyAttributeSERVICETOPOLOGY string = "SERVICE_TOPOLOGY"

	// ConditionKeyAttributeSERVICETYPE captures enum value "SERVICE_TYPE"
	ConditionKeyAttributeSERVICETYPE string = "SERVICE_TYPE"

	// ConditionKeyAttributeSERVICEWEBAPPLICATIONID captures enum value "SERVICE_WEB_APPLICATION_ID"
	ConditionKeyAttributeSERVICEWEBAPPLICATIONID string = "SERVICE_WEB_APPLICATION_ID"

	// ConditionKeyAttributeSERVICEWEBCONTEXTROOT captures enum value "SERVICE_WEB_CONTEXT_ROOT"
	ConditionKeyAttributeSERVICEWEBCONTEXTROOT string = "SERVICE_WEB_CONTEXT_ROOT"

	// ConditionKeyAttributeSERVICEWEBSERVERENDPOINT captures enum value "SERVICE_WEB_SERVER_ENDPOINT"
	ConditionKeyAttributeSERVICEWEBSERVERENDPOINT string = "SERVICE_WEB_SERVER_ENDPOINT"

	// ConditionKeyAttributeSERVICEWEBSERVERNAME captures enum value "SERVICE_WEB_SERVER_NAME"
	ConditionKeyAttributeSERVICEWEBSERVERNAME string = "SERVICE_WEB_SERVER_NAME"

	// ConditionKeyAttributeSERVICEWEBSERVICENAME captures enum value "SERVICE_WEB_SERVICE_NAME"
	ConditionKeyAttributeSERVICEWEBSERVICENAME string = "SERVICE_WEB_SERVICE_NAME"

	// ConditionKeyAttributeSERVICEWEBSERVICENAMESPACE captures enum value "SERVICE_WEB_SERVICE_NAMESPACE"
	ConditionKeyAttributeSERVICEWEBSERVICENAMESPACE string = "SERVICE_WEB_SERVICE_NAMESPACE"

	// ConditionKeyAttributeVMWAREDATACENTERNAME captures enum value "VMWARE_DATACENTER_NAME"
	ConditionKeyAttributeVMWAREDATACENTERNAME string = "VMWARE_DATACENTER_NAME"

	// ConditionKeyAttributeVMWAREVMNAME captures enum value "VMWARE_VM_NAME"
	ConditionKeyAttributeVMWAREVMNAME string = "VMWARE_VM_NAME"

	// ConditionKeyAttributeWEBAPPLICATIONNAME captures enum value "WEB_APPLICATION_NAME"
	ConditionKeyAttributeWEBAPPLICATIONNAME string = "WEB_APPLICATION_NAME"

	// ConditionKeyAttributeWEBAPPLICATIONNAMEPATTERN captures enum value "WEB_APPLICATION_NAME_PATTERN"
	ConditionKeyAttributeWEBAPPLICATIONNAMEPATTERN string = "WEB_APPLICATION_NAME_PATTERN"

	// ConditionKeyAttributeWEBAPPLICATIONTAGS captures enum value "WEB_APPLICATION_TAGS"
	ConditionKeyAttributeWEBAPPLICATIONTAGS string = "WEB_APPLICATION_TAGS"

	// ConditionKeyAttributeWEBAPPLICATIONTYPE captures enum value "WEB_APPLICATION_TYPE"
	ConditionKeyAttributeWEBAPPLICATIONTYPE string = "WEB_APPLICATION_TYPE"
)

// prop value enum
func (m *conditionKey) validateAttributeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, conditionKeyTypeAttributePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *conditionKey) validateAttribute(formats strfmt.Registry) error {

	if err := validate.Required("attribute", "body", m.Attribute()); err != nil {
		return err
	}

	// value enum
	if err := m.validateAttributeEnum("attribute", "body", *m.Attribute()); err != nil {
		return err
	}

	return nil
}

var conditionKeyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PROCESS_CUSTOM_METADATA_KEY","HOST_CUSTOM_METADATA_KEY","PROCESS_PREDEFINED_METADATA_KEY","STRING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		conditionKeyTypeTypePropEnum = append(conditionKeyTypeTypePropEnum, v)
	}
}

const (

	// ConditionKeyTypePROCESSCUSTOMMETADATAKEY captures enum value "PROCESS_CUSTOM_METADATA_KEY"
	ConditionKeyTypePROCESSCUSTOMMETADATAKEY string = "PROCESS_CUSTOM_METADATA_KEY"

	// ConditionKeyTypeHOSTCUSTOMMETADATAKEY captures enum value "HOST_CUSTOM_METADATA_KEY"
	ConditionKeyTypeHOSTCUSTOMMETADATAKEY string = "HOST_CUSTOM_METADATA_KEY"

	// ConditionKeyTypePROCESSPREDEFINEDMETADATAKEY captures enum value "PROCESS_PREDEFINED_METADATA_KEY"
	ConditionKeyTypePROCESSPREDEFINEDMETADATAKEY string = "PROCESS_PREDEFINED_METADATA_KEY"

	// ConditionKeyTypeSTRING captures enum value "STRING"
	ConditionKeyTypeSTRING string = "STRING"
)

// prop value enum
func (m *conditionKey) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, conditionKeyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}
