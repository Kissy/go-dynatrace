// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PathDefinition A filtering criterion for log path.
// swagger:model PathDefinition
type PathDefinition struct {

	// The path to the required log path.
	//
	//  If the **type** is set to `WILDCARD`, it may contain wildcard characters (`*`).
	// Required: true
	// Min Length: 1
	Definition *string `json:"definition"`

	// The type of the log path **definition**: fixed or an expression with wildcards.
	// Required: true
	// Enum: [FIXED WILDCARD]
	Type *string `json:"type"`
}

// Validate validates this path definition
func (m *PathDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefinition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PathDefinition) validateDefinition(formats strfmt.Registry) error {

	if err := validate.Required("definition", "body", m.Definition); err != nil {
		return err
	}

	if err := validate.MinLength("definition", "body", string(*m.Definition), 1); err != nil {
		return err
	}

	return nil
}

var pathDefinitionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FIXED","WILDCARD"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pathDefinitionTypeTypePropEnum = append(pathDefinitionTypeTypePropEnum, v)
	}
}

const (

	// PathDefinitionTypeFIXED captures enum value "FIXED"
	PathDefinitionTypeFIXED string = "FIXED"

	// PathDefinitionTypeWILDCARD captures enum value "WILDCARD"
	PathDefinitionTypeWILDCARD string = "WILDCARD"
)

// prop value enum
func (m *PathDefinition) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, pathDefinitionTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PathDefinition) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PathDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PathDefinition) UnmarshalBinary(b []byte) error {
	var res PathDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
