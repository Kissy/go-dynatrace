// Code generated by go-swagger; DO NOT EDIT.

package service_request_naming

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// NewCreateServiceRequestNamingParams creates a new CreateServiceRequestNamingParams object
// with the default values initialized.
func NewCreateServiceRequestNamingParams() *CreateServiceRequestNamingParams {
	var (
		positionDefault = string("APPEND")
	)
	return &CreateServiceRequestNamingParams{
		Position: &positionDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateServiceRequestNamingParamsWithTimeout creates a new CreateServiceRequestNamingParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateServiceRequestNamingParamsWithTimeout(timeout time.Duration) *CreateServiceRequestNamingParams {
	var (
		positionDefault = string("APPEND")
	)
	return &CreateServiceRequestNamingParams{
		Position: &positionDefault,

		timeout: timeout,
	}
}

// NewCreateServiceRequestNamingParamsWithContext creates a new CreateServiceRequestNamingParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateServiceRequestNamingParamsWithContext(ctx context.Context) *CreateServiceRequestNamingParams {
	var (
		positionDefault = string("APPEND")
	)
	return &CreateServiceRequestNamingParams{
		Position: &positionDefault,

		Context: ctx,
	}
}

// NewCreateServiceRequestNamingParamsWithHTTPClient creates a new CreateServiceRequestNamingParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateServiceRequestNamingParamsWithHTTPClient(client *http.Client) *CreateServiceRequestNamingParams {
	var (
		positionDefault = string("APPEND")
	)
	return &CreateServiceRequestNamingParams{
		Position:   &positionDefault,
		HTTPClient: client,
	}
}

/*CreateServiceRequestNamingParams contains all the parameters to send to the API endpoint
for the create service request naming operation typically these are written to a http.Request
*/
type CreateServiceRequestNamingParams struct {

	/*Body
	 The JSON body of the request containing parameters of the new request naming rule.

	You must not specify the ID of the rule!

	*/
	Body *dynatrace.RequestNaming
	/*Position
	  Order of the new request naming rule. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`.

	*/
	Position *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create service request naming params
func (o *CreateServiceRequestNamingParams) WithTimeout(timeout time.Duration) *CreateServiceRequestNamingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create service request naming params
func (o *CreateServiceRequestNamingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create service request naming params
func (o *CreateServiceRequestNamingParams) WithContext(ctx context.Context) *CreateServiceRequestNamingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create service request naming params
func (o *CreateServiceRequestNamingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create service request naming params
func (o *CreateServiceRequestNamingParams) WithHTTPClient(client *http.Client) *CreateServiceRequestNamingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create service request naming params
func (o *CreateServiceRequestNamingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create service request naming params
func (o *CreateServiceRequestNamingParams) WithBody(body *dynatrace.RequestNaming) *CreateServiceRequestNamingParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create service request naming params
func (o *CreateServiceRequestNamingParams) SetBody(body *dynatrace.RequestNaming) {
	o.Body = body
}

// WithPosition adds the position to the create service request naming params
func (o *CreateServiceRequestNamingParams) WithPosition(position *string) *CreateServiceRequestNamingParams {
	o.SetPosition(position)
	return o
}

// SetPosition adds the position to the create service request naming params
func (o *CreateServiceRequestNamingParams) SetPosition(position *string) {
	o.Position = position
}

// WriteToRequest writes these params to a swagger request
func (o *CreateServiceRequestNamingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Position != nil {

		// query param position
		var qrPosition string
		if o.Position != nil {
			qrPosition = *o.Position
		}
		qPosition := qrPosition
		if qPosition != "" {
			if err := r.SetQueryParam("position", qPosition); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
