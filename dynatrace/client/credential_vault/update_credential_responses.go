// Code generated by go-swagger; DO NOT EDIT.

package credential_vault

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// UpdateCredentialReader is a Reader for the UpdateCredential structure.
type UpdateCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateCredentialCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateCredentialNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCredentialBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCredentialCreated creates a UpdateCredentialCreated with default headers values
func NewUpdateCredentialCreated() *UpdateCredentialCreated {
	return &UpdateCredentialCreated{}
}

/*UpdateCredentialCreated handles this case with default header values.

Success. The new credentials set has been created. The response contains the ID of the set.
*/
type UpdateCredentialCreated struct {
	Payload *dynatrace.CredentialsResponseElement
}

func (o *UpdateCredentialCreated) Error() string {
	return fmt.Sprintf("[PUT /credentials/{id}][%d] updateCredentialCreated  %+v", 201, o.Payload)
}

func (o *UpdateCredentialCreated) GetPayload() *dynatrace.CredentialsResponseElement {
	return o.Payload
}

func (o *UpdateCredentialCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.CredentialsResponseElement)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCredentialNoContent creates a UpdateCredentialNoContent with default headers values
func NewUpdateCredentialNoContent() *UpdateCredentialNoContent {
	return &UpdateCredentialNoContent{}
}

/*UpdateCredentialNoContent handles this case with default header values.

Success. The credentials set has been updated. Response doesn't have a body.
*/
type UpdateCredentialNoContent struct {
}

func (o *UpdateCredentialNoContent) Error() string {
	return fmt.Sprintf("[PUT /credentials/{id}][%d] updateCredentialNoContent ", 204)
}

func (o *UpdateCredentialNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCredentialBadRequest creates a UpdateCredentialBadRequest with default headers values
func NewUpdateCredentialBadRequest() *UpdateCredentialBadRequest {
	return &UpdateCredentialBadRequest{}
}

/*UpdateCredentialBadRequest handles this case with default header values.

Failed. The input is invalid.
*/
type UpdateCredentialBadRequest struct {
	Payload *dynatrace.ErrorEnvelope
}

func (o *UpdateCredentialBadRequest) Error() string {
	return fmt.Sprintf("[PUT /credentials/{id}][%d] updateCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCredentialBadRequest) GetPayload() *dynatrace.ErrorEnvelope {
	return o.Payload
}

func (o *UpdateCredentialBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.ErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
