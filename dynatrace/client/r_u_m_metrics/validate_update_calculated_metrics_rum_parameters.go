// Code generated by go-swagger; DO NOT EDIT.

package r_u_m_metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// NewValidateUpdateCalculatedMetricsRumParams creates a new ValidateUpdateCalculatedMetricsRumParams object
// with the default values initialized.
func NewValidateUpdateCalculatedMetricsRumParams() *ValidateUpdateCalculatedMetricsRumParams {
	var ()
	return &ValidateUpdateCalculatedMetricsRumParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewValidateUpdateCalculatedMetricsRumParamsWithTimeout creates a new ValidateUpdateCalculatedMetricsRumParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewValidateUpdateCalculatedMetricsRumParamsWithTimeout(timeout time.Duration) *ValidateUpdateCalculatedMetricsRumParams {
	var ()
	return &ValidateUpdateCalculatedMetricsRumParams{

		timeout: timeout,
	}
}

// NewValidateUpdateCalculatedMetricsRumParamsWithContext creates a new ValidateUpdateCalculatedMetricsRumParams object
// with the default values initialized, and the ability to set a context for a request
func NewValidateUpdateCalculatedMetricsRumParamsWithContext(ctx context.Context) *ValidateUpdateCalculatedMetricsRumParams {
	var ()
	return &ValidateUpdateCalculatedMetricsRumParams{

		Context: ctx,
	}
}

// NewValidateUpdateCalculatedMetricsRumParamsWithHTTPClient creates a new ValidateUpdateCalculatedMetricsRumParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewValidateUpdateCalculatedMetricsRumParamsWithHTTPClient(client *http.Client) *ValidateUpdateCalculatedMetricsRumParams {
	var ()
	return &ValidateUpdateCalculatedMetricsRumParams{
		HTTPClient: client,
	}
}

/*ValidateUpdateCalculatedMetricsRumParams contains all the parameters to send to the API endpoint
for the validate update calculated metrics rum operation typically these are written to a http.Request
*/
type ValidateUpdateCalculatedMetricsRumParams struct {

	/*Body
	  The JSON body of the request. Contains the rum metric to be validated.

	*/
	Body *dynatrace.RumMetricUpdate
	/*MetricKey
	  The rum metric update to be validated.

	*/
	MetricKey string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) WithTimeout(timeout time.Duration) *ValidateUpdateCalculatedMetricsRumParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) WithContext(ctx context.Context) *ValidateUpdateCalculatedMetricsRumParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) WithHTTPClient(client *http.Client) *ValidateUpdateCalculatedMetricsRumParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) WithBody(body *dynatrace.RumMetricUpdate) *ValidateUpdateCalculatedMetricsRumParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) SetBody(body *dynatrace.RumMetricUpdate) {
	o.Body = body
}

// WithMetricKey adds the metricKey to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) WithMetricKey(metricKey string) *ValidateUpdateCalculatedMetricsRumParams {
	o.SetMetricKey(metricKey)
	return o
}

// SetMetricKey adds the metricKey to the validate update calculated metrics rum params
func (o *ValidateUpdateCalculatedMetricsRumParams) SetMetricKey(metricKey string) {
	o.MetricKey = metricKey
}

// WriteToRequest writes these params to a swagger request
func (o *ValidateUpdateCalculatedMetricsRumParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param metricKey
	if err := r.SetPathParam("metricKey", o.MetricKey); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
