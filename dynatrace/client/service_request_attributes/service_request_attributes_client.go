// Code generated by go-swagger; DO NOT EDIT.

package service_request_attributes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new service request attributes API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for service request attributes API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateServiceRequestAttribute(params *CreateServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*CreateServiceRequestAttributeCreated, error)

	DeleteServiceRequestAttribute(params *DeleteServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteServiceRequestAttributeNoContent, error)

	GetServiceRequestAttribute(params *GetServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*GetServiceRequestAttributeOK, error)

	GetServiceRequestAttributes(params *GetServiceRequestAttributesParams, authInfo runtime.ClientAuthInfoWriter) (*GetServiceRequestAttributesOK, error)

	UpdateServiceRequestAttribute(params *UpdateServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateServiceRequestAttributeCreated, *UpdateServiceRequestAttributeNoContent, error)

	ValidateCreateServiceRequestAttribute(params *ValidateCreateServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateServiceRequestAttributeNoContent, error)

	ValidateUpdateServiceRequestAttribute(params *ValidateUpdateServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateServiceRequestAttributeNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateServiceRequestAttribute creates a new request attribute

  The body must not provide an ID as IDs are automatically assigned.
*/
func (a *Client) CreateServiceRequestAttribute(params *CreateServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*CreateServiceRequestAttributeCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateServiceRequestAttributeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createServiceRequestAttribute",
		Method:             "POST",
		PathPattern:        "/service/requestAttributes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateServiceRequestAttributeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateServiceRequestAttributeCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createServiceRequestAttribute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteServiceRequestAttribute deletes the specified request attribute
*/
func (a *Client) DeleteServiceRequestAttribute(params *DeleteServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteServiceRequestAttributeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteServiceRequestAttributeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteServiceRequestAttribute",
		Method:             "DELETE",
		PathPattern:        "/service/requestAttributes/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteServiceRequestAttributeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteServiceRequestAttributeNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteServiceRequestAttribute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetServiceRequestAttribute shows the properties of the specified request attribute
*/
func (a *Client) GetServiceRequestAttribute(params *GetServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*GetServiceRequestAttributeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetServiceRequestAttributeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getServiceRequestAttribute",
		Method:             "GET",
		PathPattern:        "/service/requestAttributes/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetServiceRequestAttributeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetServiceRequestAttributeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getServiceRequestAttribute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetServiceRequestAttributes lists all available request attributes
*/
func (a *Client) GetServiceRequestAttributes(params *GetServiceRequestAttributesParams, authInfo runtime.ClientAuthInfoWriter) (*GetServiceRequestAttributesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetServiceRequestAttributesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getServiceRequestAttributes",
		Method:             "GET",
		PathPattern:        "/service/requestAttributes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetServiceRequestAttributesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetServiceRequestAttributesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getServiceRequestAttributes: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateServiceRequestAttribute updates an existing request attribute or creates a new one
*/
func (a *Client) UpdateServiceRequestAttribute(params *UpdateServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateServiceRequestAttributeCreated, *UpdateServiceRequestAttributeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateServiceRequestAttributeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateServiceRequestAttribute",
		Method:             "PUT",
		PathPattern:        "/service/requestAttributes/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateServiceRequestAttributeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *UpdateServiceRequestAttributeCreated:
		return value, nil, nil
	case *UpdateServiceRequestAttributeNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for service_request_attributes: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateCreateServiceRequestAttribute validates new request attributes for the p o s t request attributes request
*/
func (a *Client) ValidateCreateServiceRequestAttribute(params *ValidateCreateServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateServiceRequestAttributeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateCreateServiceRequestAttributeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateCreateServiceRequestAttribute",
		Method:             "POST",
		PathPattern:        "/service/requestAttributes/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateCreateServiceRequestAttributeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateCreateServiceRequestAttributeNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateCreateServiceRequestAttribute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateUpdateServiceRequestAttribute validates updates of existing request attribute for the p u t request attributes id request
*/
func (a *Client) ValidateUpdateServiceRequestAttribute(params *ValidateUpdateServiceRequestAttributeParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateServiceRequestAttributeNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateUpdateServiceRequestAttributeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateUpdateServiceRequestAttribute",
		Method:             "POST",
		PathPattern:        "/service/requestAttributes/{id}/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateUpdateServiceRequestAttributeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateUpdateServiceRequestAttributeNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateUpdateServiceRequestAttribute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
