// Code generated by go-swagger; DO NOT EDIT.

package kubernetes_credentials_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new kubernetes credentials configuration API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for kubernetes credentials configuration API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateKubernetesCredential(params *CreateKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*CreateKubernetesCredentialCreated, error)

	DeleteKubernetesCredential(params *DeleteKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteKubernetesCredentialNoContent, error)

	GetKubernetesCredential(params *GetKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*GetKubernetesCredentialOK, error)

	GetKubernetesCredentials(params *GetKubernetesCredentialsParams, authInfo runtime.ClientAuthInfoWriter) (*GetKubernetesCredentialsOK, error)

	UpdateKubernetesCredential(params *UpdateKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateKubernetesCredentialCreated, *UpdateKubernetesCredentialNoContent, error)

	ValidateCreateKubernetesCredential(params *ValidateCreateKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateKubernetesCredentialNoContent, error)

	ValidateUpdateKubernetesCredential(params *ValidateUpdateKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateKubernetesCredentialNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateKubernetesCredential creates a new kubernetes credentials configuration pipe maturity e a r l y a d o p t e r

  The body must not provide an ID as it will be automatically assigned by the Dynatrace server.
*/
func (a *Client) CreateKubernetesCredential(params *CreateKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*CreateKubernetesCredentialCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateKubernetesCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createKubernetesCredential",
		Method:             "POST",
		PathPattern:        "/kubernetes/credentials",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateKubernetesCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateKubernetesCredentialCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createKubernetesCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteKubernetesCredential deletes the specified kubernetes credentials configuration pipe maturity e a r l y a d o p t e r
*/
func (a *Client) DeleteKubernetesCredential(params *DeleteKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteKubernetesCredentialNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteKubernetesCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteKubernetesCredential",
		Method:             "DELETE",
		PathPattern:        "/kubernetes/credentials/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteKubernetesCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteKubernetesCredentialNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteKubernetesCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetKubernetesCredential gets the configuration of the specified kubernetes credentials pipe maturity e a r l y a d o p t e r
*/
func (a *Client) GetKubernetesCredential(params *GetKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*GetKubernetesCredentialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetKubernetesCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getKubernetesCredential",
		Method:             "GET",
		PathPattern:        "/kubernetes/credentials/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetKubernetesCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetKubernetesCredentialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getKubernetesCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetKubernetesCredentials lists all available kubernetes credentials configurations pipe maturity e a r l y a d o p t e r
*/
func (a *Client) GetKubernetesCredentials(params *GetKubernetesCredentialsParams, authInfo runtime.ClientAuthInfoWriter) (*GetKubernetesCredentialsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetKubernetesCredentialsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getKubernetesCredentials",
		Method:             "GET",
		PathPattern:        "/kubernetes/credentials",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetKubernetesCredentialsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetKubernetesCredentialsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getKubernetesCredentials: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateKubernetesCredential updates an existing kubernetes credentials configuration pipe maturity e a r l y a d o p t e r

  You can't change the URL of the Kubernetes cluster.

If a configuration with the specified ID doesn't exist, a new configuration is created.
*/
func (a *Client) UpdateKubernetesCredential(params *UpdateKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateKubernetesCredentialCreated, *UpdateKubernetesCredentialNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateKubernetesCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateKubernetesCredential",
		Method:             "PUT",
		PathPattern:        "/kubernetes/credentials/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateKubernetesCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *UpdateKubernetesCredentialCreated:
		return value, nil, nil
	case *UpdateKubernetesCredentialNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for kubernetes_credentials_configuration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateCreateKubernetesCredential validates the payload for the p o s t kubernetes credentials request pipe maturity e a r l y a d o p t e r
*/
func (a *Client) ValidateCreateKubernetesCredential(params *ValidateCreateKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateKubernetesCredentialNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateCreateKubernetesCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateCreateKubernetesCredential",
		Method:             "POST",
		PathPattern:        "/kubernetes/credentials/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateCreateKubernetesCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateCreateKubernetesCredentialNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateCreateKubernetesCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateUpdateKubernetesCredential validates the payload for the p u t kubernetes credentials id request pipe maturity e a r l y a d o p t e r
*/
func (a *Client) ValidateUpdateKubernetesCredential(params *ValidateUpdateKubernetesCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateKubernetesCredentialNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateUpdateKubernetesCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateUpdateKubernetesCredential",
		Method:             "POST",
		PathPattern:        "/kubernetes/credentials/{id}/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateUpdateKubernetesCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateUpdateKubernetesCredentialNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateUpdateKubernetesCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
