// Code generated by go-swagger; DO NOT EDIT.

package alerting_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new alerting profiles API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for alerting profiles API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateAlertingProfile(params *CreateAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*CreateAlertingProfileCreated, error)

	DeleteAlertingProfile(params *DeleteAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteAlertingProfileNoContent, error)

	GetAlertingProfile(params *GetAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*GetAlertingProfileOK, error)

	GetAlertingProfiles(params *GetAlertingProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*GetAlertingProfilesOK, error)

	UpdateAlertingProfile(params *UpdateAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateAlertingProfileCreated, *UpdateAlertingProfileNoContent, error)

	ValidateCreateAlertingProfile(params *ValidateCreateAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateAlertingProfileNoContent, error)

	ValidateUpdateAlertingProfile(params *ValidateUpdateAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateAlertingProfileNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateAlertingProfile creates a new alerting profile pipe maturity e a r l y a d o p t e r

  The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.
*/
func (a *Client) CreateAlertingProfile(params *CreateAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*CreateAlertingProfileCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAlertingProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createAlertingProfile",
		Method:             "POST",
		PathPattern:        "/alertingProfiles",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateAlertingProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateAlertingProfileCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createAlertingProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAlertingProfile deletes the specified alerting profile pipe maturity e a r l y a d o p t e r

  The default alerting profile cannot be deleted.
*/
func (a *Client) DeleteAlertingProfile(params *DeleteAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteAlertingProfileNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAlertingProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAlertingProfile",
		Method:             "DELETE",
		PathPattern:        "/alertingProfiles/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteAlertingProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAlertingProfileNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAlertingProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAlertingProfile gets the properties of the specified alerting profile pipe maturity e a r l y a d o p t e r
*/
func (a *Client) GetAlertingProfile(params *GetAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*GetAlertingProfileOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAlertingProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAlertingProfile",
		Method:             "GET",
		PathPattern:        "/alertingProfiles/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAlertingProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAlertingProfileOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAlertingProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAlertingProfiles lists all alerting profiles available in your environment pipe maturity e a r l y a d o p t e r
*/
func (a *Client) GetAlertingProfiles(params *GetAlertingProfilesParams, authInfo runtime.ClientAuthInfoWriter) (*GetAlertingProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAlertingProfilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAlertingProfiles",
		Method:             "GET",
		PathPattern:        "/alertingProfiles",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetAlertingProfilesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetAlertingProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getAlertingProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateAlertingProfile updates an existing alerting profile pipe maturity e a r l y a d o p t e r

  If an alerting profile with the specified ID doesn't exist, a new one is created.
*/
func (a *Client) UpdateAlertingProfile(params *UpdateAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateAlertingProfileCreated, *UpdateAlertingProfileNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateAlertingProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateAlertingProfile",
		Method:             "PUT",
		PathPattern:        "/alertingProfiles/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateAlertingProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *UpdateAlertingProfileCreated:
		return value, nil, nil
	case *UpdateAlertingProfileNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for alerting_profiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateCreateAlertingProfile validates the payload the p o s t alerting profiles request pipe maturity e a r l y a d o p t e r
*/
func (a *Client) ValidateCreateAlertingProfile(params *ValidateCreateAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateAlertingProfileNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateCreateAlertingProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateCreateAlertingProfile",
		Method:             "POST",
		PathPattern:        "/alertingProfiles/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateCreateAlertingProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateCreateAlertingProfileNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateCreateAlertingProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateUpdateAlertingProfile validates the payload the p u t alerting profiles id request pipe maturity e a r l y a d o p t e r
*/
func (a *Client) ValidateUpdateAlertingProfile(params *ValidateUpdateAlertingProfileParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateAlertingProfileNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateUpdateAlertingProfileParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateUpdateAlertingProfile",
		Method:             "POST",
		PathPattern:        "/alertingProfiles/{id}/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateUpdateAlertingProfileReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateUpdateAlertingProfileNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateUpdateAlertingProfile: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
