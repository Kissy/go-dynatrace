// Code generated by go-swagger; DO NOT EDIT.

package service_calculated_metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new service calculated metrics API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for service calculated metrics API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateCalculatedMetricsService(params *CreateCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*CreateCalculatedMetricsServiceCreated, error)

	DeleteCalculatedMetricsService(params *DeleteCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteCalculatedMetricsServiceNoContent, error)

	GetCalculatedMetricsService(params *GetCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*GetCalculatedMetricsServiceOK, error)

	GetCalculatedMetricsServices(params *GetCalculatedMetricsServicesParams, authInfo runtime.ClientAuthInfoWriter) (*GetCalculatedMetricsServicesOK, error)

	UpdateCalculatedMetricsService(params *UpdateCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCalculatedMetricsServiceCreated, *UpdateCalculatedMetricsServiceNoContent, error)

	ValidateCreateCalculatedMetricsService(params *ValidateCreateCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateCalculatedMetricsServiceNoContent, error)

	ValidateUpdateCalculatedMetricsService(params *ValidateUpdateCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateCalculatedMetricsServiceNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateCalculatedMetricsService creates a new calculated service metric pipe maturity e a r l y a d o p t e r
*/
func (a *Client) CreateCalculatedMetricsService(params *CreateCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*CreateCalculatedMetricsServiceCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateCalculatedMetricsServiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createCalculatedMetricsService",
		Method:             "POST",
		PathPattern:        "/calculatedMetrics/service",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateCalculatedMetricsServiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateCalculatedMetricsServiceCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createCalculatedMetricsService: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteCalculatedMetricsService deletes the specified calculated service metric pipe maturity e a r l y a d o p t e r
*/
func (a *Client) DeleteCalculatedMetricsService(params *DeleteCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteCalculatedMetricsServiceNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteCalculatedMetricsServiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteCalculatedMetricsService",
		Method:             "DELETE",
		PathPattern:        "/calculatedMetrics/service/{metricKey}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteCalculatedMetricsServiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteCalculatedMetricsServiceNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteCalculatedMetricsService: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCalculatedMetricsService gets the descriptor of the specified calculated service metric pipe maturity e a r l y a d o p t e r
*/
func (a *Client) GetCalculatedMetricsService(params *GetCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*GetCalculatedMetricsServiceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCalculatedMetricsServiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getCalculatedMetricsService",
		Method:             "GET",
		PathPattern:        "/calculatedMetrics/service/{metricKey}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCalculatedMetricsServiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCalculatedMetricsServiceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getCalculatedMetricsService: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCalculatedMetricsServices lists all calculated service metrics configured in your environment pipe maturity e a r l y a d o p t e r
*/
func (a *Client) GetCalculatedMetricsServices(params *GetCalculatedMetricsServicesParams, authInfo runtime.ClientAuthInfoWriter) (*GetCalculatedMetricsServicesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCalculatedMetricsServicesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getCalculatedMetricsServices",
		Method:             "GET",
		PathPattern:        "/calculatedMetrics/service",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCalculatedMetricsServicesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCalculatedMetricsServicesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getCalculatedMetricsServices: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateCalculatedMetricsService updates the specified calculated service metric pipe maturity e a r l y a d o p t e r

  If the calculated service metric with the specified key doesn't exist, a new metric is created.
*/
func (a *Client) UpdateCalculatedMetricsService(params *UpdateCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCalculatedMetricsServiceCreated, *UpdateCalculatedMetricsServiceNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateCalculatedMetricsServiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateCalculatedMetricsService",
		Method:             "PUT",
		PathPattern:        "/calculatedMetrics/service/{metricKey}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateCalculatedMetricsServiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *UpdateCalculatedMetricsServiceCreated:
		return value, nil, nil
	case *UpdateCalculatedMetricsServiceNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for service_calculated_metrics: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateCreateCalculatedMetricsService validates the payload for the p o s t calculated metric service request pipe maturity e a r l y a d o p t e r
*/
func (a *Client) ValidateCreateCalculatedMetricsService(params *ValidateCreateCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateCalculatedMetricsServiceNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateCreateCalculatedMetricsServiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateCreateCalculatedMetricsService",
		Method:             "POST",
		PathPattern:        "/calculatedMetrics/service/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateCreateCalculatedMetricsServiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateCreateCalculatedMetricsServiceNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateCreateCalculatedMetricsService: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateUpdateCalculatedMetricsService validates the payload for the p u t calculated metric service id request pipe maturity e a r l y a d o p t e r
*/
func (a *Client) ValidateUpdateCalculatedMetricsService(params *ValidateUpdateCalculatedMetricsServiceParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateCalculatedMetricsServiceNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateUpdateCalculatedMetricsServiceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateUpdateCalculatedMetricsService",
		Method:             "POST",
		PathPattern:        "/calculatedMetrics/service/{metricKey}/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateUpdateCalculatedMetricsServiceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateUpdateCalculatedMetricsServiceNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateUpdateCalculatedMetricsService: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
