// Code generated by go-swagger; DO NOT EDIT.

package data_privacy_and_security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// ValidateUpdateDataPrivacyReader is a Reader for the ValidateUpdateDataPrivacy structure.
type ValidateUpdateDataPrivacyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateUpdateDataPrivacyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewValidateUpdateDataPrivacyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateUpdateDataPrivacyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewValidateUpdateDataPrivacyNoContent creates a ValidateUpdateDataPrivacyNoContent with default headers values
func NewValidateUpdateDataPrivacyNoContent() *ValidateUpdateDataPrivacyNoContent {
	return &ValidateUpdateDataPrivacyNoContent{}
}

/*ValidateUpdateDataPrivacyNoContent handles this case with default header values.

Validated. The submitted configuration is valid. Response does not have a body.
*/
type ValidateUpdateDataPrivacyNoContent struct {
}

func (o *ValidateUpdateDataPrivacyNoContent) Error() string {
	return fmt.Sprintf("[POST /dataPrivacy/validator][%d] validateUpdateDataPrivacyNoContent ", 204)
}

func (o *ValidateUpdateDataPrivacyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateUpdateDataPrivacyBadRequest creates a ValidateUpdateDataPrivacyBadRequest with default headers values
func NewValidateUpdateDataPrivacyBadRequest() *ValidateUpdateDataPrivacyBadRequest {
	return &ValidateUpdateDataPrivacyBadRequest{}
}

/*ValidateUpdateDataPrivacyBadRequest handles this case with default header values.

Failed. The input is invalid. See the response body for details.
*/
type ValidateUpdateDataPrivacyBadRequest struct {
	Payload *dynatrace.ErrorEnvelope
}

func (o *ValidateUpdateDataPrivacyBadRequest) Error() string {
	return fmt.Sprintf("[POST /dataPrivacy/validator][%d] validateUpdateDataPrivacyBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateUpdateDataPrivacyBadRequest) GetPayload() *dynatrace.ErrorEnvelope {
	return o.Payload
}

func (o *ValidateUpdateDataPrivacyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.ErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
