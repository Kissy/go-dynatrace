// Code generated by go-swagger; DO NOT EDIT.

package service_detection_full_web_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// UpdateServiceDetectionRuleFullServiceReader is a Reader for the UpdateServiceDetectionRuleFullService structure.
type UpdateServiceDetectionRuleFullServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceDetectionRuleFullServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateServiceDetectionRuleFullServiceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateServiceDetectionRuleFullServiceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServiceDetectionRuleFullServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateServiceDetectionRuleFullServiceCreated creates a UpdateServiceDetectionRuleFullServiceCreated with default headers values
func NewUpdateServiceDetectionRuleFullServiceCreated() *UpdateServiceDetectionRuleFullServiceCreated {
	return &UpdateServiceDetectionRuleFullServiceCreated{}
}

/*UpdateServiceDetectionRuleFullServiceCreated handles this case with default header values.

Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.
*/
type UpdateServiceDetectionRuleFullServiceCreated struct {
	Payload *dynatrace.EntityShortRepresentation
}

func (o *UpdateServiceDetectionRuleFullServiceCreated) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/FULL_WEB_SERVICE/{id}][%d] updateServiceDetectionRuleFullServiceCreated  %+v", 201, o.Payload)
}

func (o *UpdateServiceDetectionRuleFullServiceCreated) GetPayload() *dynatrace.EntityShortRepresentation {
	return o.Payload
}

func (o *UpdateServiceDetectionRuleFullServiceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.EntityShortRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceDetectionRuleFullServiceNoContent creates a UpdateServiceDetectionRuleFullServiceNoContent with default headers values
func NewUpdateServiceDetectionRuleFullServiceNoContent() *UpdateServiceDetectionRuleFullServiceNoContent {
	return &UpdateServiceDetectionRuleFullServiceNoContent{}
}

/*UpdateServiceDetectionRuleFullServiceNoContent handles this case with default header values.

Success. The service detection rule has been updated. Response doesn't have a body.
*/
type UpdateServiceDetectionRuleFullServiceNoContent struct {
}

func (o *UpdateServiceDetectionRuleFullServiceNoContent) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/FULL_WEB_SERVICE/{id}][%d] updateServiceDetectionRuleFullServiceNoContent ", 204)
}

func (o *UpdateServiceDetectionRuleFullServiceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceDetectionRuleFullServiceBadRequest creates a UpdateServiceDetectionRuleFullServiceBadRequest with default headers values
func NewUpdateServiceDetectionRuleFullServiceBadRequest() *UpdateServiceDetectionRuleFullServiceBadRequest {
	return &UpdateServiceDetectionRuleFullServiceBadRequest{}
}

/*UpdateServiceDetectionRuleFullServiceBadRequest handles this case with default header values.

Failed. The input is invalid.
*/
type UpdateServiceDetectionRuleFullServiceBadRequest struct {
	Payload *dynatrace.ErrorEnvelope
}

func (o *UpdateServiceDetectionRuleFullServiceBadRequest) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/FULL_WEB_SERVICE/{id}][%d] updateServiceDetectionRuleFullServiceBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServiceDetectionRuleFullServiceBadRequest) GetPayload() *dynatrace.ErrorEnvelope {
	return o.Payload
}

func (o *UpdateServiceDetectionRuleFullServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.ErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
