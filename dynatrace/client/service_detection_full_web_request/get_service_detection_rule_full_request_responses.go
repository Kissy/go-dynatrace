// Code generated by go-swagger; DO NOT EDIT.

package service_detection_full_web_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// GetServiceDetectionRuleFullRequestReader is a Reader for the GetServiceDetectionRuleFullRequest structure.
type GetServiceDetectionRuleFullRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceDetectionRuleFullRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceDetectionRuleFullRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetServiceDetectionRuleFullRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServiceDetectionRuleFullRequestOK creates a GetServiceDetectionRuleFullRequestOK with default headers values
func NewGetServiceDetectionRuleFullRequestOK() *GetServiceDetectionRuleFullRequestOK {
	return &GetServiceDetectionRuleFullRequestOK{}
}

/*GetServiceDetectionRuleFullRequestOK handles this case with default header values.

Success. The response contains properties of the specified rule.
*/
type GetServiceDetectionRuleFullRequestOK struct {
	Payload *dynatrace.FullWebRequestRule
}

func (o *GetServiceDetectionRuleFullRequestOK) Error() string {
	return fmt.Sprintf("[GET /service/detectionRules/FULL_WEB_REQUEST/{id}][%d] getServiceDetectionRuleFullRequestOK  %+v", 200, o.Payload)
}

func (o *GetServiceDetectionRuleFullRequestOK) GetPayload() *dynatrace.FullWebRequestRule {
	return o.Payload
}

func (o *GetServiceDetectionRuleFullRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.FullWebRequestRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceDetectionRuleFullRequestNotFound creates a GetServiceDetectionRuleFullRequestNotFound with default headers values
func NewGetServiceDetectionRuleFullRequestNotFound() *GetServiceDetectionRuleFullRequestNotFound {
	return &GetServiceDetectionRuleFullRequestNotFound{}
}

/*GetServiceDetectionRuleFullRequestNotFound handles this case with default header values.

Failed. The rule with the specified ID doesn't exist.
*/
type GetServiceDetectionRuleFullRequestNotFound struct {
}

func (o *GetServiceDetectionRuleFullRequestNotFound) Error() string {
	return fmt.Sprintf("[GET /service/detectionRules/FULL_WEB_REQUEST/{id}][%d] getServiceDetectionRuleFullRequestNotFound ", 404)
}

func (o *GetServiceDetectionRuleFullRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
