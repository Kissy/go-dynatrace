// Code generated by go-swagger; DO NOT EDIT.

package service_detection_full_web_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// UpdateServiceDetectionRuleFullRequestReader is a Reader for the UpdateServiceDetectionRuleFullRequest structure.
type UpdateServiceDetectionRuleFullRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceDetectionRuleFullRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateServiceDetectionRuleFullRequestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateServiceDetectionRuleFullRequestNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServiceDetectionRuleFullRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateServiceDetectionRuleFullRequestCreated creates a UpdateServiceDetectionRuleFullRequestCreated with default headers values
func NewUpdateServiceDetectionRuleFullRequestCreated() *UpdateServiceDetectionRuleFullRequestCreated {
	return &UpdateServiceDetectionRuleFullRequestCreated{}
}

/*UpdateServiceDetectionRuleFullRequestCreated handles this case with default header values.

Success. The new service detection rule has been created. The response body contains the ID of the rule.
*/
type UpdateServiceDetectionRuleFullRequestCreated struct {
	Payload *dynatrace.EntityShortRepresentation
}

func (o *UpdateServiceDetectionRuleFullRequestCreated) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/FULL_WEB_REQUEST/{id}][%d] updateServiceDetectionRuleFullRequestCreated  %+v", 201, o.Payload)
}

func (o *UpdateServiceDetectionRuleFullRequestCreated) GetPayload() *dynatrace.EntityShortRepresentation {
	return o.Payload
}

func (o *UpdateServiceDetectionRuleFullRequestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.EntityShortRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceDetectionRuleFullRequestNoContent creates a UpdateServiceDetectionRuleFullRequestNoContent with default headers values
func NewUpdateServiceDetectionRuleFullRequestNoContent() *UpdateServiceDetectionRuleFullRequestNoContent {
	return &UpdateServiceDetectionRuleFullRequestNoContent{}
}

/*UpdateServiceDetectionRuleFullRequestNoContent handles this case with default header values.

Success. The service detection rule has been updated. Response doesn't have a body.
*/
type UpdateServiceDetectionRuleFullRequestNoContent struct {
}

func (o *UpdateServiceDetectionRuleFullRequestNoContent) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/FULL_WEB_REQUEST/{id}][%d] updateServiceDetectionRuleFullRequestNoContent ", 204)
}

func (o *UpdateServiceDetectionRuleFullRequestNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceDetectionRuleFullRequestBadRequest creates a UpdateServiceDetectionRuleFullRequestBadRequest with default headers values
func NewUpdateServiceDetectionRuleFullRequestBadRequest() *UpdateServiceDetectionRuleFullRequestBadRequest {
	return &UpdateServiceDetectionRuleFullRequestBadRequest{}
}

/*UpdateServiceDetectionRuleFullRequestBadRequest handles this case with default header values.

Failed. The input is invalid.
*/
type UpdateServiceDetectionRuleFullRequestBadRequest struct {
	Payload *dynatrace.ErrorEnvelope
}

func (o *UpdateServiceDetectionRuleFullRequestBadRequest) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/FULL_WEB_REQUEST/{id}][%d] updateServiceDetectionRuleFullRequestBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServiceDetectionRuleFullRequestBadRequest) GetPayload() *dynatrace.ErrorEnvelope {
	return o.Payload
}

func (o *UpdateServiceDetectionRuleFullRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.ErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
