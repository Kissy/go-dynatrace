// Code generated by go-swagger; DO NOT EDIT.

package cloud_foundry_credentials_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new cloud foundry credentials configuration API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for cloud foundry credentials configuration API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateCloudFoundryCredential(params *CreateCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*CreateCloudFoundryCredentialCreated, error)

	DeleteCloudFoundryCredential(params *DeleteCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteCloudFoundryCredentialNoContent, error)

	GetCloudFoundryCredential(params *GetCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*GetCloudFoundryCredentialOK, error)

	GetCloudFoundryCredentials(params *GetCloudFoundryCredentialsParams, authInfo runtime.ClientAuthInfoWriter) (*GetCloudFoundryCredentialsOK, error)

	UpdateCloudFoundryCredential(params *UpdateCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCloudFoundryCredentialCreated, *UpdateCloudFoundryCredentialNoContent, error)

	ValidateCreateCloudFoundryCredential(params *ValidateCreateCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateCloudFoundryCredentialNoContent, error)

	ValidateUpdateCloudFoundryCredential(params *ValidateUpdateCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateCloudFoundryCredentialNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateCloudFoundryCredential creates new credentials for a single foundation pipe maturity e a r l y a d o p t e r
*/
func (a *Client) CreateCloudFoundryCredential(params *CreateCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*CreateCloudFoundryCredentialCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateCloudFoundryCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createCloudFoundryCredential",
		Method:             "POST",
		PathPattern:        "/cloudFoundry/credentials",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateCloudFoundryCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateCloudFoundryCredentialCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createCloudFoundryCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteCloudFoundryCredential deletes the specified cloud foundry foundation credentials pipe maturity e a r l y a d o p t e r
*/
func (a *Client) DeleteCloudFoundryCredential(params *DeleteCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteCloudFoundryCredentialNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteCloudFoundryCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteCloudFoundryCredential",
		Method:             "DELETE",
		PathPattern:        "/cloudFoundry/credentials/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteCloudFoundryCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteCloudFoundryCredentialNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteCloudFoundryCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCloudFoundryCredential shows the properties for the specified cloud foundry foundation credentials pipe maturity e a r l y a d o p t e r
*/
func (a *Client) GetCloudFoundryCredential(params *GetCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*GetCloudFoundryCredentialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCloudFoundryCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getCloudFoundryCredential",
		Method:             "GET",
		PathPattern:        "/cloudFoundry/credentials/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCloudFoundryCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCloudFoundryCredentialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getCloudFoundryCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCloudFoundryCredentials lists all the cloud foundry foundations credentials pipe maturity e a r l y a d o p t e r
*/
func (a *Client) GetCloudFoundryCredentials(params *GetCloudFoundryCredentialsParams, authInfo runtime.ClientAuthInfoWriter) (*GetCloudFoundryCredentialsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCloudFoundryCredentialsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getCloudFoundryCredentials",
		Method:             "GET",
		PathPattern:        "/cloudFoundry/credentials",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCloudFoundryCredentialsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCloudFoundryCredentialsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getCloudFoundryCredentials: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateCloudFoundryCredential creates or update credentials for a single cloud foundry foundation pipe maturity e a r l y a d o p t e r
*/
func (a *Client) UpdateCloudFoundryCredential(params *UpdateCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCloudFoundryCredentialCreated, *UpdateCloudFoundryCredentialNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateCloudFoundryCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateCloudFoundryCredential",
		Method:             "PUT",
		PathPattern:        "/cloudFoundry/credentials/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateCloudFoundryCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *UpdateCloudFoundryCredentialCreated:
		return value, nil, nil
	case *UpdateCloudFoundryCredentialNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud_foundry_credentials_configuration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateCreateCloudFoundryCredential validates that creating credentials would be successful pipe maturity e a r l y a d o p t e r
*/
func (a *Client) ValidateCreateCloudFoundryCredential(params *ValidateCreateCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateCreateCloudFoundryCredentialNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateCreateCloudFoundryCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateCreateCloudFoundryCredential",
		Method:             "POST",
		PathPattern:        "/cloudFoundry/credentials/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateCreateCloudFoundryCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateCreateCloudFoundryCredentialNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateCreateCloudFoundryCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ValidateUpdateCloudFoundryCredential validates that updating or creating credentials would be successful pipe maturity e a r l y a d o p t e r
*/
func (a *Client) ValidateUpdateCloudFoundryCredential(params *ValidateUpdateCloudFoundryCredentialParams, authInfo runtime.ClientAuthInfoWriter) (*ValidateUpdateCloudFoundryCredentialNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewValidateUpdateCloudFoundryCredentialParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "validateUpdateCloudFoundryCredential",
		Method:             "POST",
		PathPattern:        "/cloudFoundry/credentials/{id}/validator",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ValidateUpdateCloudFoundryCredentialReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ValidateUpdateCloudFoundryCredentialNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for validateUpdateCloudFoundryCredential: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
