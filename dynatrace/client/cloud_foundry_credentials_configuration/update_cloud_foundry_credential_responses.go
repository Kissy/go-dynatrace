// Code generated by go-swagger; DO NOT EDIT.

package cloud_foundry_credentials_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// UpdateCloudFoundryCredentialReader is a Reader for the UpdateCloudFoundryCredential structure.
type UpdateCloudFoundryCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCloudFoundryCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateCloudFoundryCredentialCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateCloudFoundryCredentialNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCloudFoundryCredentialBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCloudFoundryCredentialCreated creates a UpdateCloudFoundryCredentialCreated with default headers values
func NewUpdateCloudFoundryCredentialCreated() *UpdateCloudFoundryCredentialCreated {
	return &UpdateCloudFoundryCredentialCreated{}
}

/*UpdateCloudFoundryCredentialCreated handles this case with default header values.

Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned.
*/
type UpdateCloudFoundryCredentialCreated struct {
	Payload *dynatrace.EntityShortRepresentation
}

func (o *UpdateCloudFoundryCredentialCreated) Error() string {
	return fmt.Sprintf("[PUT /cloudFoundry/credentials/{id}][%d] updateCloudFoundryCredentialCreated  %+v", 201, o.Payload)
}

func (o *UpdateCloudFoundryCredentialCreated) GetPayload() *dynatrace.EntityShortRepresentation {
	return o.Payload
}

func (o *UpdateCloudFoundryCredentialCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.EntityShortRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCloudFoundryCredentialNoContent creates a UpdateCloudFoundryCredentialNoContent with default headers values
func NewUpdateCloudFoundryCredentialNoContent() *UpdateCloudFoundryCredentialNoContent {
	return &UpdateCloudFoundryCredentialNoContent{}
}

/*UpdateCloudFoundryCredentialNoContent handles this case with default header values.

Success. Cloud Foundry foundation credentials have been successfully updated.
*/
type UpdateCloudFoundryCredentialNoContent struct {
}

func (o *UpdateCloudFoundryCredentialNoContent) Error() string {
	return fmt.Sprintf("[PUT /cloudFoundry/credentials/{id}][%d] updateCloudFoundryCredentialNoContent ", 204)
}

func (o *UpdateCloudFoundryCredentialNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCloudFoundryCredentialBadRequest creates a UpdateCloudFoundryCredentialBadRequest with default headers values
func NewUpdateCloudFoundryCredentialBadRequest() *UpdateCloudFoundryCredentialBadRequest {
	return &UpdateCloudFoundryCredentialBadRequest{}
}

/*UpdateCloudFoundryCredentialBadRequest handles this case with default header values.

Failed. The input is invalid.
*/
type UpdateCloudFoundryCredentialBadRequest struct {
	Payload *dynatrace.ErrorEnvelope
}

func (o *UpdateCloudFoundryCredentialBadRequest) Error() string {
	return fmt.Sprintf("[PUT /cloudFoundry/credentials/{id}][%d] updateCloudFoundryCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCloudFoundryCredentialBadRequest) GetPayload() *dynatrace.ErrorEnvelope {
	return o.Payload
}

func (o *UpdateCloudFoundryCredentialBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.ErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
