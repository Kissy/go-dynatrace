// Code generated by go-swagger; DO NOT EDIT.

package cloud_foundry_credentials_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// NewUpdateCloudFoundryCredentialParams creates a new UpdateCloudFoundryCredentialParams object
// with the default values initialized.
func NewUpdateCloudFoundryCredentialParams() *UpdateCloudFoundryCredentialParams {
	var ()
	return &UpdateCloudFoundryCredentialParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCloudFoundryCredentialParamsWithTimeout creates a new UpdateCloudFoundryCredentialParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateCloudFoundryCredentialParamsWithTimeout(timeout time.Duration) *UpdateCloudFoundryCredentialParams {
	var ()
	return &UpdateCloudFoundryCredentialParams{

		timeout: timeout,
	}
}

// NewUpdateCloudFoundryCredentialParamsWithContext creates a new UpdateCloudFoundryCredentialParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateCloudFoundryCredentialParamsWithContext(ctx context.Context) *UpdateCloudFoundryCredentialParams {
	var ()
	return &UpdateCloudFoundryCredentialParams{

		Context: ctx,
	}
}

// NewUpdateCloudFoundryCredentialParamsWithHTTPClient creates a new UpdateCloudFoundryCredentialParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateCloudFoundryCredentialParamsWithHTTPClient(client *http.Client) *UpdateCloudFoundryCredentialParams {
	var ()
	return &UpdateCloudFoundryCredentialParams{
		HTTPClient: client,
	}
}

/*UpdateCloudFoundryCredentialParams contains all the parameters to send to the API endpoint
for the update cloud foundry credential operation typically these are written to a http.Request
*/
type UpdateCloudFoundryCredentialParams struct {

	/*Body
	  `name` must be unique. `password` can be omitted for updates, the existing one will be used. `apiUrl` and `loginUrl` must be set and may not differ from the existing config if it exists.
	Use this endpoint for copying credentials between environments while keeping their IDs and for updating existing credentials. You can *not* use this to create new credentials with an arbitrary ID, use POST instead.

	*/
	Body *dynatrace.CloudFoundryCredentials
	/*ID
	  The ID of the Cloud Foundry foundation credentials.

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) WithTimeout(timeout time.Duration) *UpdateCloudFoundryCredentialParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) WithContext(ctx context.Context) *UpdateCloudFoundryCredentialParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) WithHTTPClient(client *http.Client) *UpdateCloudFoundryCredentialParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) WithBody(body *dynatrace.CloudFoundryCredentials) *UpdateCloudFoundryCredentialParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) SetBody(body *dynatrace.CloudFoundryCredentials) {
	o.Body = body
}

// WithID adds the id to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) WithID(id string) *UpdateCloudFoundryCredentialParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update cloud foundry credential params
func (o *UpdateCloudFoundryCredentialParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCloudFoundryCredentialParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
