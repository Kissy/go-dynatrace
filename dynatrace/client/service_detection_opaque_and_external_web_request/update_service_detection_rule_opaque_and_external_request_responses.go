// Code generated by go-swagger; DO NOT EDIT.

package service_detection_opaque_and_external_web_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// UpdateServiceDetectionRuleOpaqueAndExternalRequestReader is a Reader for the UpdateServiceDetectionRuleOpaqueAndExternalRequest structure.
type UpdateServiceDetectionRuleOpaqueAndExternalRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateServiceDetectionRuleOpaqueAndExternalRequestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateServiceDetectionRuleOpaqueAndExternalRequestCreated creates a UpdateServiceDetectionRuleOpaqueAndExternalRequestCreated with default headers values
func NewUpdateServiceDetectionRuleOpaqueAndExternalRequestCreated() *UpdateServiceDetectionRuleOpaqueAndExternalRequestCreated {
	return &UpdateServiceDetectionRuleOpaqueAndExternalRequestCreated{}
}

/*UpdateServiceDetectionRuleOpaqueAndExternalRequestCreated handles this case with default header values.

Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.
*/
type UpdateServiceDetectionRuleOpaqueAndExternalRequestCreated struct {
	Payload *dynatrace.EntityShortRepresentation
}

func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestCreated) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}][%d] updateServiceDetectionRuleOpaqueAndExternalRequestCreated  %+v", 201, o.Payload)
}

func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestCreated) GetPayload() *dynatrace.EntityShortRepresentation {
	return o.Payload
}

func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.EntityShortRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent creates a UpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent with default headers values
func NewUpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent() *UpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent {
	return &UpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent{}
}

/*UpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent handles this case with default header values.

Success. The service detection rule has been updated. Response doesn't have a body.
*/
type UpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent struct {
}

func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}][%d] updateServiceDetectionRuleOpaqueAndExternalRequestNoContent ", 204)
}

func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest creates a UpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest with default headers values
func NewUpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest() *UpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest {
	return &UpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest{}
}

/*UpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest handles this case with default header values.

Failed. The input is invalid.
*/
type UpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest struct {
	Payload *dynatrace.ErrorEnvelope
}

func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest) Error() string {
	return fmt.Sprintf("[PUT /service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}][%d] updateServiceDetectionRuleOpaqueAndExternalRequestBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest) GetPayload() *dynatrace.ErrorEnvelope {
	return o.Payload
}

func (o *UpdateServiceDetectionRuleOpaqueAndExternalRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.ErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
