// Code generated by go-swagger; DO NOT EDIT.

package service_custom_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetServiceCustomServiceParams creates a new GetServiceCustomServiceParams object
// with the default values initialized.
func NewGetServiceCustomServiceParams() *GetServiceCustomServiceParams {
	var (
		includeProcessGroupReferencesDefault = bool(false)
	)
	return &GetServiceCustomServiceParams{
		IncludeProcessGroupReferences: &includeProcessGroupReferencesDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetServiceCustomServiceParamsWithTimeout creates a new GetServiceCustomServiceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetServiceCustomServiceParamsWithTimeout(timeout time.Duration) *GetServiceCustomServiceParams {
	var (
		includeProcessGroupReferencesDefault = bool(false)
	)
	return &GetServiceCustomServiceParams{
		IncludeProcessGroupReferences: &includeProcessGroupReferencesDefault,

		timeout: timeout,
	}
}

// NewGetServiceCustomServiceParamsWithContext creates a new GetServiceCustomServiceParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetServiceCustomServiceParamsWithContext(ctx context.Context) *GetServiceCustomServiceParams {
	var (
		includeProcessGroupReferencesDefault = bool(false)
	)
	return &GetServiceCustomServiceParams{
		IncludeProcessGroupReferences: &includeProcessGroupReferencesDefault,

		Context: ctx,
	}
}

// NewGetServiceCustomServiceParamsWithHTTPClient creates a new GetServiceCustomServiceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetServiceCustomServiceParamsWithHTTPClient(client *http.Client) *GetServiceCustomServiceParams {
	var (
		includeProcessGroupReferencesDefault = bool(false)
	)
	return &GetServiceCustomServiceParams{
		IncludeProcessGroupReferences: &includeProcessGroupReferencesDefault,
		HTTPClient:                    client,
	}
}

/*GetServiceCustomServiceParams contains all the parameters to send to the API endpoint
for the get service custom service operation typically these are written to a http.Request
*/
type GetServiceCustomServiceParams struct {

	/*ID
	  The ID of the custom service you're inquiring.

	*/
	ID strfmt.UUID
	/*IncludeProcessGroupReferences
	  Flag to include process group references to the response.

	 Process group references aren't compatible across environments.

	`false` is used if the value is not set.

	*/
	IncludeProcessGroupReferences *bool
	/*Technology
	  Technology of the custom service you're inquiring.

	*/
	Technology string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get service custom service params
func (o *GetServiceCustomServiceParams) WithTimeout(timeout time.Duration) *GetServiceCustomServiceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get service custom service params
func (o *GetServiceCustomServiceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get service custom service params
func (o *GetServiceCustomServiceParams) WithContext(ctx context.Context) *GetServiceCustomServiceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get service custom service params
func (o *GetServiceCustomServiceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get service custom service params
func (o *GetServiceCustomServiceParams) WithHTTPClient(client *http.Client) *GetServiceCustomServiceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get service custom service params
func (o *GetServiceCustomServiceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get service custom service params
func (o *GetServiceCustomServiceParams) WithID(id strfmt.UUID) *GetServiceCustomServiceParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get service custom service params
func (o *GetServiceCustomServiceParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WithIncludeProcessGroupReferences adds the includeProcessGroupReferences to the get service custom service params
func (o *GetServiceCustomServiceParams) WithIncludeProcessGroupReferences(includeProcessGroupReferences *bool) *GetServiceCustomServiceParams {
	o.SetIncludeProcessGroupReferences(includeProcessGroupReferences)
	return o
}

// SetIncludeProcessGroupReferences adds the includeProcessGroupReferences to the get service custom service params
func (o *GetServiceCustomServiceParams) SetIncludeProcessGroupReferences(includeProcessGroupReferences *bool) {
	o.IncludeProcessGroupReferences = includeProcessGroupReferences
}

// WithTechnology adds the technology to the get service custom service params
func (o *GetServiceCustomServiceParams) WithTechnology(technology string) *GetServiceCustomServiceParams {
	o.SetTechnology(technology)
	return o
}

// SetTechnology adds the technology to the get service custom service params
func (o *GetServiceCustomServiceParams) SetTechnology(technology string) {
	o.Technology = technology
}

// WriteToRequest writes these params to a swagger request
func (o *GetServiceCustomServiceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if o.IncludeProcessGroupReferences != nil {

		// query param includeProcessGroupReferences
		var qrIncludeProcessGroupReferences bool
		if o.IncludeProcessGroupReferences != nil {
			qrIncludeProcessGroupReferences = *o.IncludeProcessGroupReferences
		}
		qIncludeProcessGroupReferences := swag.FormatBool(qrIncludeProcessGroupReferences)
		if qIncludeProcessGroupReferences != "" {
			if err := r.SetQueryParam("includeProcessGroupReferences", qIncludeProcessGroupReferences); err != nil {
				return err
			}
		}

	}

	// path param technology
	if err := r.SetPathParam("technology", o.Technology); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
