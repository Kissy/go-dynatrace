// Code generated by go-swagger; DO NOT EDIT.

package service_custom_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// NewUpdateServiceCustomServiceParams creates a new UpdateServiceCustomServiceParams object
// with the default values initialized.
func NewUpdateServiceCustomServiceParams() *UpdateServiceCustomServiceParams {
	var ()
	return &UpdateServiceCustomServiceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateServiceCustomServiceParamsWithTimeout creates a new UpdateServiceCustomServiceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateServiceCustomServiceParamsWithTimeout(timeout time.Duration) *UpdateServiceCustomServiceParams {
	var ()
	return &UpdateServiceCustomServiceParams{

		timeout: timeout,
	}
}

// NewUpdateServiceCustomServiceParamsWithContext creates a new UpdateServiceCustomServiceParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateServiceCustomServiceParamsWithContext(ctx context.Context) *UpdateServiceCustomServiceParams {
	var ()
	return &UpdateServiceCustomServiceParams{

		Context: ctx,
	}
}

// NewUpdateServiceCustomServiceParamsWithHTTPClient creates a new UpdateServiceCustomServiceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateServiceCustomServiceParamsWithHTTPClient(client *http.Client) *UpdateServiceCustomServiceParams {
	var ()
	return &UpdateServiceCustomServiceParams{
		HTTPClient: client,
	}
}

/*UpdateServiceCustomServiceParams contains all the parameters to send to the API endpoint
for the update service custom service operation typically these are written to a http.Request
*/
type UpdateServiceCustomServiceParams struct {

	/*Body
	  JSON body of the request containing updated definition of the custom service. If *order* is present, it will be used.

	*/
	Body *dynatrace.CustomService
	/*ID
	 The ID of the custom service to update.

	The ID of the custom service in the body of the request must match this ID.

	*/
	ID strfmt.UUID
	/*Technology
	  Technology of the custom service to update.

	*/
	Technology string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update service custom service params
func (o *UpdateServiceCustomServiceParams) WithTimeout(timeout time.Duration) *UpdateServiceCustomServiceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update service custom service params
func (o *UpdateServiceCustomServiceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update service custom service params
func (o *UpdateServiceCustomServiceParams) WithContext(ctx context.Context) *UpdateServiceCustomServiceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update service custom service params
func (o *UpdateServiceCustomServiceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update service custom service params
func (o *UpdateServiceCustomServiceParams) WithHTTPClient(client *http.Client) *UpdateServiceCustomServiceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update service custom service params
func (o *UpdateServiceCustomServiceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update service custom service params
func (o *UpdateServiceCustomServiceParams) WithBody(body *dynatrace.CustomService) *UpdateServiceCustomServiceParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update service custom service params
func (o *UpdateServiceCustomServiceParams) SetBody(body *dynatrace.CustomService) {
	o.Body = body
}

// WithID adds the id to the update service custom service params
func (o *UpdateServiceCustomServiceParams) WithID(id strfmt.UUID) *UpdateServiceCustomServiceParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update service custom service params
func (o *UpdateServiceCustomServiceParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WithTechnology adds the technology to the update service custom service params
func (o *UpdateServiceCustomServiceParams) WithTechnology(technology string) *UpdateServiceCustomServiceParams {
	o.SetTechnology(technology)
	return o
}

// SetTechnology adds the technology to the update service custom service params
func (o *UpdateServiceCustomServiceParams) SetTechnology(technology string) {
	o.Technology = technology
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateServiceCustomServiceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	// path param technology
	if err := r.SetPathParam("technology", o.Technology); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
