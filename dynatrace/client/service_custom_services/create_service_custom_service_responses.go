// Code generated by go-swagger; DO NOT EDIT.

package service_custom_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// CreateServiceCustomServiceReader is a Reader for the CreateServiceCustomService structure.
type CreateServiceCustomServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateServiceCustomServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateServiceCustomServiceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateServiceCustomServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateServiceCustomServiceCreated creates a CreateServiceCustomServiceCreated with default headers values
func NewCreateServiceCustomServiceCreated() *CreateServiceCustomServiceCreated {
	return &CreateServiceCustomServiceCreated{}
}

/*CreateServiceCustomServiceCreated handles this case with default header values.

Success. The custom service has been created. Response contains the new service's ID and name.
*/
type CreateServiceCustomServiceCreated struct {
	Payload *dynatrace.EntityShortRepresentation
}

func (o *CreateServiceCustomServiceCreated) Error() string {
	return fmt.Sprintf("[POST /service/customServices/{technology}][%d] createServiceCustomServiceCreated  %+v", 201, o.Payload)
}

func (o *CreateServiceCustomServiceCreated) GetPayload() *dynatrace.EntityShortRepresentation {
	return o.Payload
}

func (o *CreateServiceCustomServiceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.EntityShortRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceCustomServiceBadRequest creates a CreateServiceCustomServiceBadRequest with default headers values
func NewCreateServiceCustomServiceBadRequest() *CreateServiceCustomServiceBadRequest {
	return &CreateServiceCustomServiceBadRequest{}
}

/*CreateServiceCustomServiceBadRequest handles this case with default header values.

Failed. The input is invalid.
*/
type CreateServiceCustomServiceBadRequest struct {
	Payload *dynatrace.ErrorEnvelope
}

func (o *CreateServiceCustomServiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /service/customServices/{technology}][%d] createServiceCustomServiceBadRequest  %+v", 400, o.Payload)
}

func (o *CreateServiceCustomServiceBadRequest) GetPayload() *dynatrace.ErrorEnvelope {
	return o.Payload
}

func (o *CreateServiceCustomServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.ErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
