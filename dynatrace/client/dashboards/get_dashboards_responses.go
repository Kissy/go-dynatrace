// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// GetDashboardsReader is a Reader for the GetDashboards structure.
type GetDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDashboardsOK creates a GetDashboardsOK with default headers values
func NewGetDashboardsOK() *GetDashboardsOK {
	return &GetDashboardsOK{}
}

/*GetDashboardsOK handles this case with default header values.

successful operation
*/
type GetDashboardsOK struct {
	Payload *dynatrace.DashboardList
}

func (o *GetDashboardsOK) Error() string {
	return fmt.Sprintf("[GET /dashboards][%d] getDashboardsOK  %+v", 200, o.Payload)
}

func (o *GetDashboardsOK) GetPayload() *dynatrace.DashboardList {
	return o.Payload
}

func (o *GetDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(dynatrace.DashboardList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
