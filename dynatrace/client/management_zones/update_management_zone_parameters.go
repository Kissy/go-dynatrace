// Code generated by go-swagger; DO NOT EDIT.

package management_zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace"
)

// NewUpdateManagementZoneParams creates a new UpdateManagementZoneParams object
// with the default values initialized.
func NewUpdateManagementZoneParams() *UpdateManagementZoneParams {
	var ()
	return &UpdateManagementZoneParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateManagementZoneParamsWithTimeout creates a new UpdateManagementZoneParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateManagementZoneParamsWithTimeout(timeout time.Duration) *UpdateManagementZoneParams {
	var ()
	return &UpdateManagementZoneParams{

		timeout: timeout,
	}
}

// NewUpdateManagementZoneParamsWithContext creates a new UpdateManagementZoneParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateManagementZoneParamsWithContext(ctx context.Context) *UpdateManagementZoneParams {
	var ()
	return &UpdateManagementZoneParams{

		Context: ctx,
	}
}

// NewUpdateManagementZoneParamsWithHTTPClient creates a new UpdateManagementZoneParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateManagementZoneParamsWithHTTPClient(client *http.Client) *UpdateManagementZoneParams {
	var ()
	return &UpdateManagementZoneParams{
		HTTPClient: client,
	}
}

/*UpdateManagementZoneParams contains all the parameters to send to the API endpoint
for the update management zone operation typically these are written to a http.Request
*/
type UpdateManagementZoneParams struct {

	/*Body
	  The JSON body of the request, containing updated parameters of the management zone.

	*/
	Body *dynatrace.ManagementZone
	/*ID
	 The ID of the management zone to update.

	If you set the ID in the body as well, it must match this ID.

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update management zone params
func (o *UpdateManagementZoneParams) WithTimeout(timeout time.Duration) *UpdateManagementZoneParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update management zone params
func (o *UpdateManagementZoneParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update management zone params
func (o *UpdateManagementZoneParams) WithContext(ctx context.Context) *UpdateManagementZoneParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update management zone params
func (o *UpdateManagementZoneParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update management zone params
func (o *UpdateManagementZoneParams) WithHTTPClient(client *http.Client) *UpdateManagementZoneParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update management zone params
func (o *UpdateManagementZoneParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update management zone params
func (o *UpdateManagementZoneParams) WithBody(body *dynatrace.ManagementZone) *UpdateManagementZoneParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update management zone params
func (o *UpdateManagementZoneParams) SetBody(body *dynatrace.ManagementZone) {
	o.Body = body
}

// WithID adds the id to the update management zone params
func (o *UpdateManagementZoneParams) WithID(id string) *UpdateManagementZoneParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update management zone params
func (o *UpdateManagementZoneParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateManagementZoneParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
