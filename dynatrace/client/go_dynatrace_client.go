// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	httptransport "github.com/go-openapi/runtime/client"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Kissy/go-dynatrace/dynatrace/client/a_w_s_credentials_configuration"
	"github.com/Kissy/go-dynatrace/dynatrace/client/alerting_profiles"
	"github.com/Kissy/go-dynatrace/dynatrace/client/anomaly_detection_a_w_s"
	"github.com/Kissy/go-dynatrace/dynatrace/client/anomaly_detection_applications"
	"github.com/Kissy/go-dynatrace/dynatrace/client/anomaly_detection_database_services"
	"github.com/Kissy/go-dynatrace/dynatrace/client/anomaly_detection_disk_events"
	"github.com/Kissy/go-dynatrace/dynatrace/client/anomaly_detection_hosts"
	"github.com/Kissy/go-dynatrace/dynatrace/client/anomaly_detection_metric_events"
	"github.com/Kissy/go-dynatrace/dynatrace/client/anomaly_detection_services"
	"github.com/Kissy/go-dynatrace/dynatrace/client/anomaly_detection_v_mware"
	"github.com/Kissy/go-dynatrace/dynatrace/client/application_detection_rules"
	"github.com/Kissy/go-dynatrace/dynatrace/client/automatically_applied_tags"
	"github.com/Kissy/go-dynatrace/dynatrace/client/azure_credentials_configuration"
	"github.com/Kissy/go-dynatrace/dynatrace/client/cloud_foundry_credentials_configuration"
	"github.com/Kissy/go-dynatrace/dynatrace/client/credential_vault"
	"github.com/Kissy/go-dynatrace/dynatrace/client/dashboards"
	"github.com/Kissy/go-dynatrace/dynatrace/client/data_privacy_and_security"
	"github.com/Kissy/go-dynatrace/dynatrace/client/frequent_issue_detection"
	"github.com/Kissy/go-dynatrace/dynatrace/client/kubernetes_credentials_configuration"
	"github.com/Kissy/go-dynatrace/dynatrace/client/log_monitoring_metrics"
	"github.com/Kissy/go-dynatrace/dynatrace/client/maintenance_windows"
	"github.com/Kissy/go-dynatrace/dynatrace/client/management_zones"
	"github.com/Kissy/go-dynatrace/dynatrace/client/mobile_deobfuscation_and_symbolication"
	"github.com/Kissy/go-dynatrace/dynatrace/client/notifications"
	"github.com/Kissy/go-dynatrace/dynatrace/client/plugins"
	"github.com/Kissy/go-dynatrace/dynatrace/client/r_u_m_metrics"
	"github.com/Kissy/go-dynatrace/dynatrace/client/remote_environments"
	"github.com/Kissy/go-dynatrace/dynatrace/client/reports"
	"github.com/Kissy/go-dynatrace/dynatrace/client/service_calculated_metrics"
	"github.com/Kissy/go-dynatrace/dynatrace/client/service_custom_services"
	"github.com/Kissy/go-dynatrace/dynatrace/client/service_detection_full_web_request"
	"github.com/Kissy/go-dynatrace/dynatrace/client/service_detection_full_web_service"
	"github.com/Kissy/go-dynatrace/dynatrace/client/service_detection_opaque_and_external_web_request"
	"github.com/Kissy/go-dynatrace/dynatrace/client/service_i_b_m_m_q_tracing"
	"github.com/Kissy/go-dynatrace/dynatrace/client/service_request_attributes"
	"github.com/Kissy/go-dynatrace/dynatrace/client/service_request_naming"
	"github.com/Kissy/go-dynatrace/dynatrace/client/web_application_configuration"
)

// Default go dynatrace HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "environment.live.dynatrace.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/api/config/v1"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new go dynatrace HTTP client.
func NewHTTPClient(formats strfmt.Registry) *GoDynatrace {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new go dynatrace HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *GoDynatrace {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new go dynatrace client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *GoDynatrace {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(GoDynatrace)
	cli.Transport = transport
	cli.AwsCredentialsConfiguration = a_w_s_credentials_configuration.New(transport, formats)
	cli.AlertingProfiles = alerting_profiles.New(transport, formats)
	cli.AnomalyDetectionaws = anomaly_detection_a_w_s.New(transport, formats)
	cli.AnomalyDetectionApplications = anomaly_detection_applications.New(transport, formats)
	cli.AnomalyDetectionDatabaseServices = anomaly_detection_database_services.New(transport, formats)
	cli.AnomalyDetectionDiskEvents = anomaly_detection_disk_events.New(transport, formats)
	cli.AnomalyDetectionHosts = anomaly_detection_hosts.New(transport, formats)
	cli.AnomalyDetectionMetricEvents = anomaly_detection_metric_events.New(transport, formats)
	cli.AnomalyDetectionServices = anomaly_detection_services.New(transport, formats)
	cli.AnomalyDetectionvMware = anomaly_detection_v_mware.New(transport, formats)
	cli.ApplicationDetectionRules = application_detection_rules.New(transport, formats)
	cli.AutomaticallyAppliedTags = automatically_applied_tags.New(transport, formats)
	cli.AzureCredentialsConfiguration = azure_credentials_configuration.New(transport, formats)
	cli.CloudFoundryCredentialsConfiguration = cloud_foundry_credentials_configuration.New(transport, formats)
	cli.CredentialVault = credential_vault.New(transport, formats)
	cli.Dashboards = dashboards.New(transport, formats)
	cli.DataPrivacyAndSecurity = data_privacy_and_security.New(transport, formats)
	cli.FrequentIssueDetection = frequent_issue_detection.New(transport, formats)
	cli.KubernetesCredentialsConfiguration = kubernetes_credentials_configuration.New(transport, formats)
	cli.LogMonitoringMetrics = log_monitoring_metrics.New(transport, formats)
	cli.MaintenanceWindows = maintenance_windows.New(transport, formats)
	cli.ManagementZones = management_zones.New(transport, formats)
	cli.MobileDeobfuscationAndSymbolication = mobile_deobfuscation_and_symbolication.New(transport, formats)
	cli.Notifications = notifications.New(transport, formats)
	cli.Plugins = plugins.New(transport, formats)
	cli.RumMetrics = r_u_m_metrics.New(transport, formats)
	cli.RemoteEnvironments = remote_environments.New(transport, formats)
	cli.Reports = reports.New(transport, formats)
	cli.ServiceCalculatedMetrics = service_calculated_metrics.New(transport, formats)
	cli.ServiceCustomServices = service_custom_services.New(transport, formats)
	cli.ServiceDetectionFullWebRequest = service_detection_full_web_request.New(transport, formats)
	cli.ServiceDetectionFullWebService = service_detection_full_web_service.New(transport, formats)
	cli.ServiceDetectionOpaqueAndExternalWebRequest = service_detection_opaque_and_external_web_request.New(transport, formats)
	cli.ServiceibmmqTracing = service_i_b_m_m_q_tracing.New(transport, formats)
	cli.ServiceRequestAttributes = service_request_attributes.New(transport, formats)
	cli.ServiceRequestNaming = service_request_naming.New(transport, formats)
	cli.WebApplicationConfiguration = web_application_configuration.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// GoDynatrace is a client for go dynatrace
type GoDynatrace struct {
	AwsCredentialsConfiguration a_w_s_credentials_configuration.ClientService

	AlertingProfiles alerting_profiles.ClientService

	AnomalyDetectionaws anomaly_detection_a_w_s.ClientService

	AnomalyDetectionApplications anomaly_detection_applications.ClientService

	AnomalyDetectionDatabaseServices anomaly_detection_database_services.ClientService

	AnomalyDetectionDiskEvents anomaly_detection_disk_events.ClientService

	AnomalyDetectionHosts anomaly_detection_hosts.ClientService

	AnomalyDetectionMetricEvents anomaly_detection_metric_events.ClientService

	AnomalyDetectionServices anomaly_detection_services.ClientService

	AnomalyDetectionvMware anomaly_detection_v_mware.ClientService

	ApplicationDetectionRules application_detection_rules.ClientService

	AutomaticallyAppliedTags automatically_applied_tags.ClientService

	AzureCredentialsConfiguration azure_credentials_configuration.ClientService

	CloudFoundryCredentialsConfiguration cloud_foundry_credentials_configuration.ClientService

	CredentialVault credential_vault.ClientService

	Dashboards dashboards.ClientService

	DataPrivacyAndSecurity data_privacy_and_security.ClientService

	FrequentIssueDetection frequent_issue_detection.ClientService

	KubernetesCredentialsConfiguration kubernetes_credentials_configuration.ClientService

	LogMonitoringMetrics log_monitoring_metrics.ClientService

	MaintenanceWindows maintenance_windows.ClientService

	ManagementZones management_zones.ClientService

	MobileDeobfuscationAndSymbolication mobile_deobfuscation_and_symbolication.ClientService

	Notifications notifications.ClientService

	Plugins plugins.ClientService

	RumMetrics r_u_m_metrics.ClientService

	RemoteEnvironments remote_environments.ClientService

	Reports reports.ClientService

	ServiceCalculatedMetrics service_calculated_metrics.ClientService

	ServiceCustomServices service_custom_services.ClientService

	ServiceDetectionFullWebRequest service_detection_full_web_request.ClientService

	ServiceDetectionFullWebService service_detection_full_web_service.ClientService

	ServiceDetectionOpaqueAndExternalWebRequest service_detection_opaque_and_external_web_request.ClientService

	ServiceibmmqTracing service_i_b_m_m_q_tracing.ClientService

	ServiceRequestAttributes service_request_attributes.ClientService

	ServiceRequestNaming service_request_naming.ClientService

	WebApplicationConfiguration web_application_configuration.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *GoDynatrace) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.AwsCredentialsConfiguration.SetTransport(transport)
	c.AlertingProfiles.SetTransport(transport)
	c.AnomalyDetectionaws.SetTransport(transport)
	c.AnomalyDetectionApplications.SetTransport(transport)
	c.AnomalyDetectionDatabaseServices.SetTransport(transport)
	c.AnomalyDetectionDiskEvents.SetTransport(transport)
	c.AnomalyDetectionHosts.SetTransport(transport)
	c.AnomalyDetectionMetricEvents.SetTransport(transport)
	c.AnomalyDetectionServices.SetTransport(transport)
	c.AnomalyDetectionvMware.SetTransport(transport)
	c.ApplicationDetectionRules.SetTransport(transport)
	c.AutomaticallyAppliedTags.SetTransport(transport)
	c.AzureCredentialsConfiguration.SetTransport(transport)
	c.CloudFoundryCredentialsConfiguration.SetTransport(transport)
	c.CredentialVault.SetTransport(transport)
	c.Dashboards.SetTransport(transport)
	c.DataPrivacyAndSecurity.SetTransport(transport)
	c.FrequentIssueDetection.SetTransport(transport)
	c.KubernetesCredentialsConfiguration.SetTransport(transport)
	c.LogMonitoringMetrics.SetTransport(transport)
	c.MaintenanceWindows.SetTransport(transport)
	c.ManagementZones.SetTransport(transport)
	c.MobileDeobfuscationAndSymbolication.SetTransport(transport)
	c.Notifications.SetTransport(transport)
	c.Plugins.SetTransport(transport)
	c.RumMetrics.SetTransport(transport)
	c.RemoteEnvironments.SetTransport(transport)
	c.Reports.SetTransport(transport)
	c.ServiceCalculatedMetrics.SetTransport(transport)
	c.ServiceCustomServices.SetTransport(transport)
	c.ServiceDetectionFullWebRequest.SetTransport(transport)
	c.ServiceDetectionFullWebService.SetTransport(transport)
	c.ServiceDetectionOpaqueAndExternalWebRequest.SetTransport(transport)
	c.ServiceibmmqTracing.SetTransport(transport)
	c.ServiceRequestAttributes.SetTransport(transport)
	c.ServiceRequestNaming.SetTransport(transport)
	c.WebApplicationConfiguration.SetTransport(transport)
}
