// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OutOfMemoryThresholds Custom thresholds for Java out of memory. If not set, automatic mode is used.
// swagger:model OutOfMemoryThresholds
type OutOfMemoryThresholds struct {

	// Alert if the number of Java out of memory exceptions is *X* per minute or higher.
	// Required: true
	// Maximum: 100
	// Minimum: 1
	OutOfMemoryExceptionsNumber *int32 `json:"outOfMemoryExceptionsNumber"`
}

// Validate validates this out of memory thresholds
func (m *OutOfMemoryThresholds) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOutOfMemoryExceptionsNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OutOfMemoryThresholds) validateOutOfMemoryExceptionsNumber(formats strfmt.Registry) error {

	if err := validate.Required("outOfMemoryExceptionsNumber", "body", m.OutOfMemoryExceptionsNumber); err != nil {
		return err
	}

	if err := validate.MinimumInt("outOfMemoryExceptionsNumber", "body", int64(*m.OutOfMemoryExceptionsNumber), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("outOfMemoryExceptionsNumber", "body", int64(*m.OutOfMemoryExceptionsNumber), 100, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OutOfMemoryThresholds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OutOfMemoryThresholds) UnmarshalBinary(b []byte) error {
	var res OutOfMemoryThresholds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
