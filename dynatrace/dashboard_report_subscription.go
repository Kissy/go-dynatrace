// Code generated by go-swagger; DO NOT EDIT.

package dynatrace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DashboardReportSubscription A list of the report subscribers.
// swagger:model DashboardReportSubscription
type DashboardReportSubscription struct {

	// A list of monthly subscribers.
	//
	// Monthly subscribers receive the report on the first Monday of the month at midnight.
	//
	// You can specify email addresses or Dynatrace user IDs here.
	// Unique: true
	MONTH []string `json:"MONTH"`

	// A list of weekly subscribers.
	//
	// Weekly subscribers receive the report every Monday at midnight.
	//
	//  You can specify email addresses or Dynatrace user IDs here.
	// Unique: true
	WEEK []string `json:"WEEK"`
}

// Validate validates this dashboard report subscription
func (m *DashboardReportSubscription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMONTH(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWEEK(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DashboardReportSubscription) validateMONTH(formats strfmt.Registry) error {

	if swag.IsZero(m.MONTH) { // not required
		return nil
	}

	if err := validate.UniqueItems("MONTH", "body", m.MONTH); err != nil {
		return err
	}

	return nil
}

func (m *DashboardReportSubscription) validateWEEK(formats strfmt.Registry) error {

	if swag.IsZero(m.WEEK) { // not required
		return nil
	}

	if err := validate.UniqueItems("WEEK", "body", m.WEEK); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DashboardReportSubscription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DashboardReportSubscription) UnmarshalBinary(b []byte) error {
	var res DashboardReportSubscription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
